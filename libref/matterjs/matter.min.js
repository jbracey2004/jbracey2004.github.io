





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-a4bf54bef6fb.css" integrity="sha512-pL9Uvvb7LMqGC8jv/AyqZ7Ya6/HTgkhZzKwEsHOdsfaW2pr3fgzqjgKUSJfYkZ/klxwHrcu+tZwtNDTuw8vH6Q==" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-d5aa84dde2d5.css" integrity="sha512-1aqE3eLVo8QJ3AfkPFnOFkzBmHnOY5YYQ89j1V4ke28LRSpxHMVQecd6/XxAp5lGLPPSEaFNhLyGKHQHiFXT7w==" media="all" rel="stylesheet" />
  
  
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/site-40fcabbe0152.css" integrity="sha512-QPyrvgFSff4TPraGjRVwjjUuUYhkKKzPUBEwcArwfkdRwAHGF0V7+v1hPmMZbnJKdXTWicSkRiGOTvEiNmCISg==" media="all" rel="stylesheet" />
  

  <meta name="viewport" content="width=device-width">
  
  <title>matter-js/matter.min.js at master · liabru/matter-js · GitHub</title>
    <meta name="description" content="GitHub is where people build software. More than 28 million people use GitHub to discover, fork, and contribute to over 80 million projects.">
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars1.githubusercontent.com/u/654420?s=400&amp;v=4" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="liabru/matter-js" property="og:title" /><meta content="https://github.com/liabru/matter-js" property="og:url" /><meta content="matter-js - a 2D rigid body physics engine for the web ▲● ■" property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="C959:3A7C:13D9BD:27EFB8:5AA02FF6" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="C959:3A7C:13D9BD:27EFB8:5AA02FF6" name="octolytics-dimension-request_id" /><meta content="iad" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" />
<meta content="https://github.com/hydro_browser_events" name="hydro-events-url" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged Out">


  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="YjZlMDc5ZDk3OGYyMDg4ZmNhOWU3MDFlNThkMTFhYjIzZGJlN2UyMjc0ZDg5MzIzNDgyZWQ5NjU1N2YzYzQxZnx7InJlbW90ZV9hZGRyZXNzIjoiNjkuNDcuMTMyLjE4MyIsInJlcXVlc3RfaWQiOiJDOTU5OjNBN0M6MTNEOUJEOjI3RUZCODo1QUEwMkZGNiIsInRpbWVzdGFtcCI6MTUyMDQ0NzUwOCwiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_INSIGHTS,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES,JS_ROLLUP">

  <meta name="html-safe-nonce" content="da05c61bbdcba10301d86b752d123f892fba2289">

  <meta http-equiv="x-pjax-version" content="b1b456d232db1330a0192cf2c2248b18">
  

      <link href="https://github.com/liabru/matter-js/commits/master.atom" rel="alternate" title="Recent Commits to matter-js:master" type="application/atom+xml">

  <meta name="description" content="matter-js - a 2D rigid body physics engine for the web ▲● ■">
  <meta name="go-import" content="github.com/liabru/matter-js git https://github.com/liabru/matter-js.git">

  <meta content="654420" name="octolytics-dimension-user_id" /><meta content="liabru" name="octolytics-dimension-user_login" /><meta content="16986405" name="octolytics-dimension-repository_id" /><meta content="liabru/matter-js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="16986405" name="octolytics-dimension-repository_network_root_id" /><meta content="liabru/matter-js" name="octolytics-dimension-repository_network_root_nwo" /><meta content="false" name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" />


    <link rel="canonical" href="https://github.com/liabru/matter-js/blob/master/build/matter.min.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">



<link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        <header class="Header header-logged-out  position-relative f4 py-3" role="banner">
  <div class="container-lg d-flex px-3">
    <div class="d-flex flex-justify-between flex-items-center">
      <a class="header-logo-invertocat my-0" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
        <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
      </a>

    </div>

    <div class="HeaderMenu HeaderMenu--bright d-flex flex-justify-between flex-auto">
        <nav class="mt-0">
          <ul class="d-flex list-style-none">
              <li class="ml-2">
                <a href="/features" class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:features" data-selected-links="/features /features/project-management /features/code-review /features/project-management /features/integrations /features">
                  Features
</a>              </li>
              <li class="ml-4">
                <a href="/business" class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:business" data-selected-links="/business /business/security /business/customers /business">
                  Business
</a>              </li>

              <li class="ml-4">
                <a href="/explore" class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore">
                  Explore
</a>              </li>

              <li class="ml-4">
                    <a href="/marketplace" class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:marketplace" data-selected-links=" /marketplace">
                      Marketplace
</a>              </li>
              <li class="ml-4">
                <a href="/pricing" class="js-selected-navigation-item HeaderNavlink px-0 py-2 m-0" data-ga-click="Header, click, Nav menu - item:pricing" data-selected-links="/pricing /pricing/developer /pricing/team /pricing/business-hosted /pricing/business-enterprise /pricing">
                  Pricing
</a>              </li>
          </ul>
        </nav>

      <div class="d-flex">
          <div class="d-lg-flex flex-items-center mr-3">
            <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/liabru/matter-js/search" class="js-site-search-form" data-scoped-search-url="/liabru/matter-js/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/liabru/matter-js/blob/master/build/matter.min.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

          </div>

        <span class="d-inline-block">
            <div class="HeaderNavlink px-0 py-2 m-0">
              <a class="text-bold text-white no-underline" href="/login?return_to=%2Fliabru%2Fmatter-js%2Fblob%2Fmaster%2Fbuild%2Fmatter.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
                <span class="text-gray">or</span>
                <a class="text-bold text-white no-underline" href="/join?source=header-repo" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
            </div>
        </span>
      </div>
    </div>
  </div>
</header>

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main" class="application-main ">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      







  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
      <a href="/login?return_to=%2Fliabru%2Fmatter-js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
  </a>
  <a class="social-count" href="/liabru/matter-js/watchers"
     aria-label="201 users are watching this repository">
    201
  </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fliabru%2Fmatter-js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
    Star
  </a>

    <a class="social-count js-social-count" href="/liabru/matter-js/stargazers"
      aria-label="6697 users starred this repository">
      6,697
    </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fliabru%2Fmatter-js"
        class="btn btn-sm btn-with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
      </a>

    <a href="/liabru/matter-js/network" class="social-count"
       aria-label="622 users forked this repository">
      622
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/liabru" class="url fn" rel="author">liabru</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/liabru/matter-js" data-pjax="#js-repo-pjax-container">matter-js</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/liabru/matter-js" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /liabru/matter-js" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/liabru/matter-js/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /liabru/matter-js/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">133</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/liabru/matter-js/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls checks /liabru/matter-js/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">22</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/liabru/matter-js/projects" class="js-selected-navigation-item reponav-item" data-hotkey="g b" data-selected-links="repo_projects new_repo_project repo_project /liabru/matter-js/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a href="/liabru/matter-js/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /liabru/matter-js/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a href="/liabru/matter-js/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /liabru/matter-js/pulse">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
  <a href="/liabru/matter-js/blob/06655ff2c7753a5fd3b7ab503d6b5420942c5e19/build/matter.min.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:dcd017ecae0428ef704ce7615174d820 -->

  <div class="file-navigation">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/browser-tests/build/matter.min.js"
               data-name="browser-tests"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                browser-tests
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/browserify/build/matter.min.js"
               data-name="browserify"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                browserify
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/ccd/build/matter.min.js"
               data-name="ccd"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                ccd
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/constraint-fixes/build/matter.min.js"
               data-name="constraint-fixes"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                constraint-fixes
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/gulp/build/matter.min.js"
               data-name="gulp"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                gulp
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/liabru/matter-js/blob/master/build/matter.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/plugins/build/matter.min.js"
               data-name="plugins"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                plugins
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/liabru/matter-js/blob/runner-improve/build/matter.min.js"
               data-name="runner-improve"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                runner-improve
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.12.0/build/matter.min.js"
              data-name="0.12.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.12.0">
                0.12.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.11.1/build/matter.min.js"
              data-name="0.11.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.1">
                0.11.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.11.0/build/matter.min.js"
              data-name="0.11.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.0">
                0.11.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.10.0/build/matter.min.js"
              data-name="0.10.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.10.0">
                0.10.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.9.3/build/matter.min.js"
              data-name="0.9.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.9.3">
                0.9.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.9.2/build/matter.min.js"
              data-name="0.9.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.9.2">
                0.9.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.9.1/build/matter.min.js"
              data-name="0.9.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.9.1">
                0.9.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.9.0/build/matter.min.js"
              data-name="0.9.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.9.0">
                0.9.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.8.0-alpha/build/matter.min.js"
              data-name="0.8.0-alpha"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.8.0-alpha">
                0.8.0-alpha
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.7.0-alpha/build/matter.min.js"
              data-name="0.7.0-alpha"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.7.0-alpha">
                0.7.0-alpha
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/liabru/matter-js/tree/0.5.0-alpha/build/matter.min.js"
              data-name="0.5.0-alpha"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.5.0-alpha">
                0.5.0-alpha
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/liabru/matter-js/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <clipboard-copy
            for="blob-path"
            role="button"
            aria-label="Copy file path to clipboard"
            class="btn btn-sm BtnGroup-item tooltipped tooltipped-s"
            data-copied-hint="Copied!">
        Copy path
      </clipboard-copy>
    </div>
    <div id="blob-path" class="breadcrumb">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/liabru/matter-js" data-pjax="true"><span>matter-js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/liabru/matter-js/tree/master/build" data-pjax="true"><span>build</span></a></span><span class="separator">/</span><strong class="final-path">matter.min.js</strong>
    </div>
  </div>


  
  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/liabru/matter-js/commit/06655ff2c7753a5fd3b7ab503d6b5420942c5e19" data-pjax>
          06655ff
        </a>
        <relative-time datetime="2018-01-10T21:35:40Z">Jan 10, 2018</relative-time>
      </span>
      <div>
        <img alt="@liabru" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/654420?s=40&amp;v=4" width="20" />
        <a href="/liabru" class="user-mention" rel="author">liabru</a>
          <a href="/liabru/matter-js/commit/06655ff2c7753a5fd3b7ab503d6b5420942c5e19" class="message" data-pjax="true" title="release 0.14.1">release 0.14.1</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>1</strong>
         contributor
      </button>
      
    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@liabru" height="24" src="https://avatars1.githubusercontent.com/u/654420?s=48&amp;v=4" width="24" />
            <a href="/liabru">liabru</a>
          </li>
      </ul>
    </div>
  </div>


  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/liabru/matter-js/raw/master/build/matter.min.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/liabru/matter-js/blame/master/build/matter.min.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/liabru/matter-js/commits/master/build/matter.min.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
        </button>
  </div>

  <div class="file-info">
      91 lines (91 sloc)
      <span class="file-info-divider"></span>
    86 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c">* matter-js 0.14.1 by @liabru 2018-01-10</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c">* http://brm.io/matter-js/</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c">* License MIT</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span>)<span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-en">e</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span>)<span class="pl-en">define</span>([],e);<span class="pl-k">else</span>{<span class="pl-k">var</span> t;t<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">?</span><span class="pl-c1">window</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">global</span><span class="pl-k">?</span><span class="pl-c1">global</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> self<span class="pl-k">?</span>self<span class="pl-k">:</span><span class="pl-c1">this</span>,<span class="pl-smi">t</span>.<span class="pl-smi">Matter</span><span class="pl-k">=</span><span class="pl-en">e</span>()}}(<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>){<span class="pl-k">function</span> <span class="pl-en">i</span>(<span class="pl-smi">s</span>,<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>n[s]){<span class="pl-k">if</span>(<span class="pl-k">!</span>t[s]){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> require<span class="pl-k">&amp;&amp;</span>require;<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>l)<span class="pl-k">return</span> <span class="pl-en">l</span>(s,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(r)<span class="pl-k">return</span> <span class="pl-en">r</span>(s,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot find module &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>s<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">throw</span> <span class="pl-smi">c</span>.<span class="pl-c1">code</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>MODULE_NOT_FOUND<span class="pl-pds">&quot;</span></span>,c}<span class="pl-k">var</span> d<span class="pl-k">=</span>n[s]<span class="pl-k">=</span>{exports<span class="pl-k">:</span>{}};t[s][<span class="pl-c1">0</span>].<span class="pl-c1">call</span>(<span class="pl-smi">d</span>.<span class="pl-smi">exports</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>t[s][<span class="pl-c1">1</span>][e];<span class="pl-k">return</span> <span class="pl-en">i</span>(n<span class="pl-k">?</span>n<span class="pl-k">:</span>e)},d,<span class="pl-smi">d</span>.<span class="pl-smi">exports</span>,e,t,n,o)}<span class="pl-k">return</span> n[s].<span class="pl-smi">exports</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> require<span class="pl-k">&amp;&amp;</span>require,s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-en">i</span>(o[s]);<span class="pl-k">return</span> i}({<span class="pl-c1">1</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Sleeping<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../render/Render<span class="pl-pds">&quot;</span></span>),<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>)),l<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Axes<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-smi">_inertiaScale</span><span class="pl-k">=</span><span class="pl-c1">4</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_nextCollidingGroupId</span><span class="pl-k">=</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">_nextNonCollidingGroupId</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_nextCategory</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>{id<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">nextId</span>(),type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>,label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Body<span class="pl-pds">&quot;</span></span>,parts<span class="pl-k">:</span>[],plugin<span class="pl-k">:</span>{},angle<span class="pl-k">:</span><span class="pl-c1">0</span>,vertices<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-en">fromPath</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L 0 0 L 40 0 L 40 40 L 0 40<span class="pl-pds">&quot;</span></span>),position<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},force<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},torque<span class="pl-k">:</span><span class="pl-c1">0</span>,positionImpulse<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},constraintImpulse<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,angle<span class="pl-k">:</span><span class="pl-c1">0</span>},totalContacts<span class="pl-k">:</span><span class="pl-c1">0</span>,speed<span class="pl-k">:</span><span class="pl-c1">0</span>,angularSpeed<span class="pl-k">:</span><span class="pl-c1">0</span>,velocity<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},angularVelocity<span class="pl-k">:</span><span class="pl-c1">0</span>,isSensor<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,isStatic<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,isSleeping<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,motion<span class="pl-k">:</span><span class="pl-c1">0</span>,sleepThreshold<span class="pl-k">:</span><span class="pl-c1">60</span>,density<span class="pl-k">:</span><span class="pl-c1">.001</span>,restitution<span class="pl-k">:</span><span class="pl-c1">0</span>,friction<span class="pl-k">:</span><span class="pl-c1">.1</span>,frictionStatic<span class="pl-k">:</span><span class="pl-c1">.5</span>,frictionAir<span class="pl-k">:</span><span class="pl-c1">.01</span>,collisionFilter<span class="pl-k">:</span>{category<span class="pl-k">:</span><span class="pl-c1">1</span>,mask<span class="pl-k">:</span><span class="pl-c1">4294967295</span>,group<span class="pl-k">:</span><span class="pl-c1">0</span>},slop<span class="pl-k">:</span><span class="pl-c1">.05</span>,timeScale<span class="pl-k">:</span><span class="pl-c1">1</span>,render<span class="pl-k">:</span>{visible<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,opacity<span class="pl-k">:</span><span class="pl-c1">1</span>,sprite<span class="pl-k">:</span>{xScale<span class="pl-k">:</span><span class="pl-c1">1</span>,yScale<span class="pl-k">:</span><span class="pl-c1">1</span>,xOffset<span class="pl-k">:</span><span class="pl-c1">0</span>,yOffset<span class="pl-k">:</span><span class="pl-c1">0</span>},lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>}},o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">extend</span>(n,t);<span class="pl-k">return</span> <span class="pl-en">e</span>(o,t),o},<span class="pl-smi">o</span>.<span class="pl-en">nextGroup</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> e<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-smi">_nextNonCollidingGroupId</span><span class="pl-k">--</span><span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">_nextCollidingGroupId</span><span class="pl-k">++</span>},<span class="pl-smi">o</span>.<span class="pl-en">nextCategory</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-smi">_nextCategory</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_nextCategory</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_nextCategory</span>};<span class="pl-k">var</span> <span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){t<span class="pl-k">=</span>t<span class="pl-k">||</span>{},<span class="pl-smi">o</span>.<span class="pl-c1">set</span>(e,{bounds<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span><span class="pl-k">||</span><span class="pl-smi">l</span>.<span class="pl-en">create</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>),positionPrev<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">positionPrev</span><span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-en">clone</span>(<span class="pl-smi">e</span>.<span class="pl-smi">position</span>),</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">anglePrev<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">anglePrev</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">angle</span>,vertices<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,parts<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span><span class="pl-k">||</span>[e],isStatic<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">isStatic</span>,isSleeping<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">isSleeping</span>,parent<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">parent</span><span class="pl-k">||</span>e}),<span class="pl-smi">i</span>.<span class="pl-en">rotate</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>),<span class="pl-smi">c</span>.<span class="pl-en">rotate</span>(<span class="pl-smi">e</span>.<span class="pl-smi">axes</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angle</span>),<span class="pl-smi">l</span>.<span class="pl-en">update</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>),<span class="pl-smi">o</span>.<span class="pl-c1">set</span>(e,{axes<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">axes</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">axes</span>,area<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">area</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">area</span>,mass<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">mass</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">mass</span>,inertia<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">inertia</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">inertia</span>});<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isStatic</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#2e2b44<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">choose</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>#006BA6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#0496FF<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FFBC42<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#D81159<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#8F2D56<span class="pl-pds">&quot;</span></span>]),s<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">||</span>n,<span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">||</span>s,<span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">sprite</span>.<span class="pl-smi">xOffset</span><span class="pl-k">+=</span><span class="pl-k">-</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>),<span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">sprite</span>.<span class="pl-smi">yOffset</span><span class="pl-k">+=</span><span class="pl-k">-</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>)};<span class="pl-smi">o</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> i;<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> t<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>t,t<span class="pl-k">=</span>{},t[i]<span class="pl-k">=</span>n);<span class="pl-k">for</span>(i <span class="pl-k">in</span> t)<span class="pl-k">if</span>(n<span class="pl-k">=</span>t[i],<span class="pl-smi">t</span>.<span class="pl-en">hasOwnProperty</span>(i))<span class="pl-k">switch</span>(i){<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>isStatic<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setStatic</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>isSleeping<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">s</span>.<span class="pl-c1">set</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>mass<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setMass</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>density<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setDensity</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>inertia<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setInertia</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertices<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-en">setVertices</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setPosition</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>angle<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setAngle</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>velocity<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setVelocity</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>angularVelocity<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setAngularVelocity</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>parts<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">setParts</span>(e,n);<span class="pl-k">break</span>;<span class="pl-k">default</span>:e[i]<span class="pl-k">=</span>n}},<span class="pl-smi">o</span>.<span class="pl-en">setStatic</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>[n];<span class="pl-smi">o</span>.<span class="pl-smi">isStatic</span><span class="pl-k">=</span>t,t<span class="pl-k">?</span>(<span class="pl-smi">o</span>.<span class="pl-smi">_original</span><span class="pl-k">=</span>{restitution<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">restitution</span>,friction<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">friction</span>,mass<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">mass</span>,inertia<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">inertia</span>,density<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">density</span>,inverseMass<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">inverseMass</span>,inverseInertia<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">inverseInertia</span>},<span class="pl-smi">o</span>.<span class="pl-smi">restitution</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">friction</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-smi">mass</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">inertia</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">density</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">o</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>,<span class="pl-smi">o</span>.<span class="pl-smi">anglePrev</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">o</span>.<span class="pl-smi">angularVelocity</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">speed</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">angularSpeed</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">motion</span><span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-smi">restitution</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">restitution</span>,<span class="pl-smi">o</span>.<span class="pl-smi">friction</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">friction</span>,<span class="pl-smi">o</span>.<span class="pl-smi">mass</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">mass</span>,<span class="pl-smi">o</span>.<span class="pl-smi">inertia</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">inertia</span>,<span class="pl-smi">o</span>.<span class="pl-smi">density</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">density</span>,<span class="pl-smi">o</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">inverseMass</span>,<span class="pl-smi">o</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_original</span>.<span class="pl-smi">inverseInertia</span>,<span class="pl-k">delete</span> <span class="pl-smi">o</span>.<span class="pl-smi">_original</span>);</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">}},<span class="pl-smi">o</span>.<span class="pl-en">setMass</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">inertia</span><span class="pl-k">/</span>(<span class="pl-smi">e</span>.<span class="pl-smi">mass</span><span class="pl-k">/</span><span class="pl-c1">6</span>);<span class="pl-smi">e</span>.<span class="pl-smi">inertia</span><span class="pl-k">=</span>n<span class="pl-k">*</span>(t<span class="pl-k">/</span><span class="pl-c1">6</span>),<span class="pl-smi">e</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">inertia</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mass</span><span class="pl-k">=</span>t,<span class="pl-smi">e</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">mass</span>,<span class="pl-smi">e</span>.<span class="pl-smi">density</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">mass</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">area</span>},<span class="pl-smi">o</span>.<span class="pl-en">setDensity</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-smi">o</span>.<span class="pl-en">setMass</span>(e,t<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-smi">area</span>),<span class="pl-smi">e</span>.<span class="pl-smi">density</span><span class="pl-k">=</span>t},<span class="pl-smi">o</span>.<span class="pl-en">setInertia</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-smi">e</span>.<span class="pl-smi">inertia</span><span class="pl-k">=</span>t,<span class="pl-smi">e</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">inertia</span>},<span class="pl-smi">o</span>.<span class="pl-en">setVertices</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){t[<span class="pl-c1">0</span>].<span class="pl-c1">body</span><span class="pl-k">===</span>e<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>t<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">create</span>(t,e),<span class="pl-smi">e</span>.<span class="pl-smi">axes</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">fromVertices</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>),<span class="pl-smi">e</span>.<span class="pl-smi">area</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">area</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>),<span class="pl-smi">o</span>.<span class="pl-en">setMass</span>(e,<span class="pl-smi">e</span>.<span class="pl-smi">density</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-smi">area</span>);<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">centre</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>);<span class="pl-smi">i</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,n,<span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-smi">o</span>.<span class="pl-en">setInertia</span>(e,<span class="pl-smi">o</span>.<span class="pl-smi">_inertiaScale</span><span class="pl-k">*</span><span class="pl-smi">i</span>.<span class="pl-en">inertia</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mass</span>)),<span class="pl-smi">i</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>),<span class="pl-smi">l</span>.<span class="pl-en">update</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>)},<span class="pl-smi">o</span>.<span class="pl-en">setParts</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> r;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),<span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">push</span>(e),<span class="pl-smi">e</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>e,r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span>t[r];s<span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">s</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>e,<span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">push</span>(s))}<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> n<span class="pl-k">||</span>n){<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(t[r].<span class="pl-smi">vertices</span>);<span class="pl-smi">i</span>.<span class="pl-en">clockwiseSort</span>(a);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">hull</span>(a),c<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">centre</span>(l);<span class="pl-smi">o</span>.<span class="pl-en">setVertices</span>(e,l),<span class="pl-smi">i</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,c);</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line">}var d=o._totalProperties(e);e.area=d.area,e.parent=e,e.position.x=d.centre.x,e.position.y=d.centre.y,e.positionPrev.x=d.centre.x,e.positionPrev.y=d.centre.y,o.setMass(e,d.mass),o.setInertia(e,d.inertia),o.setPosition(e,d.centre)}},o.setPosition=function(e,t){var n=r.sub(t,e.position);e.positionPrev.x+=n.x,e.positionPrev.y+=n.y;for(var o=0;o&lt;e.parts.length;o++){var s=e.parts[o];s.position.x+=n.x,s.position.y+=n.y,i.translate(s.vertices,n),l.update(s.bounds,s.vertices,e.velocity)}},o.setAngle=function(e,t){var n=t-e.angle;e.anglePrev+=n;for(var o=0;o&lt;e.parts.length;o++){var s=e.parts[o];s.angle+=n,i.rotate(s.vertices,n,e.position),c.rotate(s.axes,n),l.update(s.bounds,s.vertices,e.velocity),o&gt;0&amp;&amp;r.rotateAbout(s.position,n,e.position,s.position)}},o.setVelocity=function(e,t){e.positionPrev.x=e.position.x-t.x,e.positionPrev.y=e.position.y-t.y,e.velocity.x=t.x,e.velocity.y=t.y,e.speed=r.magnitude(e.velocity)},o.setAngularVelocity=function(e,t){e.anglePrev=e.angle-t,e.angularVelocity=t,e.angularSpeed=Math.abs(e.angularVelocity);</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">},o.translate=function(e,t){o.setPosition(e,r.add(e.position,t))},o.rotate=function(e,t,n){if(n){var i=Math.cos(t),r=Math.sin(t),s=e.position.x-n.x,a=e.position.y-n.y;o.setPosition(e,{x:n.x+(s*i-a*r),y:n.y+(s*r+a*i)}),o.setAngle(e,e.angle+t)}else o.setAngle(e,e.angle+t)},o.scale=function(e,t,n,r){var s=0,a=0;r=r||e.position;for(var d=0;d&lt;e.parts.length;d++){var u=e.parts[d];i.scale(u.vertices,t,n,r),u.axes=c.fromVertices(u.vertices),u.area=i.area(u.vertices),o.setMass(u,e.density*u.area),i.translate(u.vertices,{x:-u.position.x,y:-u.position.y}),o.setInertia(u,o._inertiaScale*i.inertia(u.vertices,u.mass)),i.translate(u.vertices,{x:u.position.x,y:u.position.y}),d&gt;0&amp;&amp;(s+=u.area,a+=u.inertia),u.position.x=r.x+(u.position.x-r.x)*t,u.position.y=r.y+(u.position.y-r.y)*n,l.update(u.bounds,u.vertices,e.velocity)}e.parts.length&gt;1&amp;&amp;(e.area=s,e.isStatic||(o.setMass(e,e.density*s),o.setInertia(e,a))),e.circleRadius&amp;&amp;(t===n?e.circleRadius*=t:e.circleRadius=null)},o.update=function(e,t,n,o){var s=Math.pow(t*n*e.timeScale,2),a=1-e.frictionAir*n*e.timeScale,d=e.position.x-e.positionPrev.x,u=e.position.y-e.positionPrev.y;</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>d<span class="pl-k">*</span>a<span class="pl-k">*</span>o<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">force</span>.<span class="pl-c1">x</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">mass</span><span class="pl-k">*</span>s,<span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>u<span class="pl-k">*</span>a<span class="pl-k">*</span>o<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">force</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">mass</span><span class="pl-k">*</span>s,<span class="pl-smi">e</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span><span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">angle</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">anglePrev</span>)<span class="pl-k">*</span>a<span class="pl-k">*</span>o<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">torque</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">inertia</span><span class="pl-k">*</span>s,<span class="pl-smi">e</span>.<span class="pl-smi">anglePrev</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angle</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span>,<span class="pl-smi">e</span>.<span class="pl-smi">speed</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">magnitude</span>(<span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>),<span class="pl-smi">e</span>.<span class="pl-smi">angularSpeed</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;p<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>[p];<span class="pl-smi">i</span>.<span class="pl-en">translate</span>(<span class="pl-smi">f</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>),p<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>.<span class="pl-c1">y</span>),<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">i</span>.<span class="pl-en">rotate</span>(<span class="pl-smi">f</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>),<span class="pl-smi">c</span>.<span class="pl-en">rotate</span>(<span class="pl-smi">f</span>.<span class="pl-smi">axes</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span>),p<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">rotateAbout</span>(<span class="pl-smi">f</span>.<span class="pl-smi">position</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angularVelocity</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>,<span class="pl-smi">f</span>.<span class="pl-smi">position</span>)),<span class="pl-smi">l</span>.<span class="pl-en">update</span>(<span class="pl-smi">f</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">f</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">velocity</span>)}},<span class="pl-smi">o</span>.<span class="pl-en">applyForce</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-smi">e</span>.<span class="pl-smi">force</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">force</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>;<span class="pl-k">var</span> o<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>};<span class="pl-smi">e</span>.<span class="pl-smi">torque</span><span class="pl-k">+=</span><span class="pl-smi">o</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">o</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>},<span class="pl-smi">o</span>.<span class="pl-en">_totalProperties</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span>{mass<span class="pl-k">:</span><span class="pl-c1">0</span>,area<span class="pl-k">:</span><span class="pl-c1">0</span>,inertia<span class="pl-k">:</span><span class="pl-c1">0</span>,centre<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>}},n<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>){</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">var o=e.parts[n],i=o.mass!==1/0?o.mass:1;t.mass+=i,t.area+=o.area,t.inertia+=o.inertia,t.centre=r.add(t.centre,r.mult(o.position,i))}return t.centre=r.div(t.centre,t.mass),t}}()},{&quot;../core/Common&quot;:14,&quot;../core/Sleeping&quot;:22,&quot;../geometry/Axes&quot;:25,&quot;../geometry/Bounds&quot;:26,&quot;../geometry/Vector&quot;:28,&quot;../geometry/Vertices&quot;:29,&quot;../render/Render&quot;:31}],2:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;../core/Events&quot;),r=e(&quot;../core/Common&quot;),s=e(&quot;./Body&quot;);!function(){o.create=function(e){return r.extend({id:r.nextId(),type:&quot;composite&quot;,parent:null,isModified:!1,bodies:[],constraints:[],composites:[],label:&quot;Composite&quot;,plugin:{}},e)},o.setModified=function(e,t,n,i){if(e.isModified=t,n&amp;&amp;e.parent&amp;&amp;o.setModified(e.parent,t,n,i),i)for(var r=0;r&lt;e.composites.length;r++){var s=e.composites[r];o.setModified(s,t,n,i)}},o.add=function(e,t){var n=[].concat(t);i.trigger(e,&quot;beforeAdd&quot;,{object:t});for(var s=0;s&lt;n.length;s++){var a=n[s];switch(a.type){case&quot;body&quot;:if(a.parent!==a){r.warn(&quot;Composite.add: skipped adding a compound body part (you must add its parent instead)&quot;);</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>}<span class="pl-smi">o</span>.<span class="pl-en">addBody</span>(e,a);<span class="pl-k">break</span>;case<span class="pl-s"><span class="pl-pds">&quot;</span>constraint<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-en">addConstraint</span>(e,a);<span class="pl-k">break</span>;case<span class="pl-s"><span class="pl-pds">&quot;</span>composite<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-en">addComposite</span>(e,a);<span class="pl-k">break</span>;case<span class="pl-s"><span class="pl-pds">&quot;</span>mouseConstraint<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-en">addConstraint</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">constraint</span>)}}<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>afterAdd<span class="pl-pds">&quot;</span></span>,{object<span class="pl-k">:</span>t}),e},<span class="pl-smi">o</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(t);<span class="pl-smi">i</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeRemove<span class="pl-pds">&quot;</span></span>,{object<span class="pl-k">:</span>t});<span class="pl-k">for</span>(<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span>r[s];<span class="pl-k">switch</span>(<span class="pl-smi">a</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">removeBody</span>(e,a,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>constraint<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">removeConstraint</span>(e,a,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>composite<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">removeComposite</span>(e,a,n);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseConstraint<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">o</span>.<span class="pl-en">removeConstraint</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">constraint</span>)}}<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>afterRemove<span class="pl-pds">&quot;</span></span>,{object<span class="pl-k">:</span>t}),e},<span class="pl-smi">o</span>.<span class="pl-en">addComposite</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">composites</span>.<span class="pl-c1">push</span>(t),<span class="pl-smi">t</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>e,<span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),e},<span class="pl-smi">o</span>.<span class="pl-en">removeComposite</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">e</span>.<span class="pl-smi">composites</span>,t);<span class="pl-k">if</span>(i<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-en">removeCompositeAt</span>(e,i),<span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)),n)<span class="pl-k">for</span>(<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">composites</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-smi">o</span>.<span class="pl-en">removeComposite</span>(<span class="pl-smi">e</span>.<span class="pl-smi">composites</span>[s],t,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> e},<span class="pl-smi">o</span>.<span class="pl-en">removeCompositeAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">composites</span>.<span class="pl-c1">splice</span>(t,<span class="pl-c1">1</span>),<span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),e},</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">o.addBody=function(e,t){return e.bodies.push(t),o.setModified(e,!0,!0,!1),e},o.removeBody=function(e,t,n){var i=r.indexOf(e.bodies,t);if(i!==-1&amp;&amp;(o.removeBodyAt(e,i),o.setModified(e,!0,!0,!1)),n)for(var s=0;s&lt;e.composites.length;s++)o.removeBody(e.composites[s],t,!0);return e},o.removeBodyAt=function(e,t){return e.bodies.splice(t,1),o.setModified(e,!0,!0,!1),e},o.addConstraint=function(e,t){return e.constraints.push(t),o.setModified(e,!0,!0,!1),e},o.removeConstraint=function(e,t,n){var i=r.indexOf(e.constraints,t);if(i!==-1&amp;&amp;o.removeConstraintAt(e,i),n)for(var s=0;s&lt;e.composites.length;s++)o.removeConstraint(e.composites[s],t,!0);return e},o.removeConstraintAt=function(e,t){return e.constraints.splice(t,1),o.setModified(e,!0,!0,!1),e},o.clear=function(e,t,n){if(n)for(var i=0;i&lt;e.composites.length;i++)o.clear(e.composites[i],t,!0);return t?e.bodies=e.bodies.filter(function(e){return e.isStatic}):e.bodies.length=0,e.constraints.length=0,e.composites.length=0,o.setModified(e,!0,!0,!1),e},o.allBodies=function(e){</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bodies</span>),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">composites</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">o</span>.<span class="pl-en">allBodies</span>(<span class="pl-smi">e</span>.<span class="pl-smi">composites</span>[n]));<span class="pl-k">return</span> t},<span class="pl-smi">o</span>.<span class="pl-en">allConstraints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">e</span>.<span class="pl-smi">constraints</span>),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">composites</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">o</span>.<span class="pl-en">allConstraints</span>(<span class="pl-smi">e</span>.<span class="pl-smi">composites</span>[n]));<span class="pl-k">return</span> t},<span class="pl-smi">o</span>.<span class="pl-en">allComposites</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">e</span>.<span class="pl-smi">composites</span>),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">composites</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">o</span>.<span class="pl-en">allComposites</span>(<span class="pl-smi">e</span>.<span class="pl-smi">composites</span>[n]));<span class="pl-k">return</span> t},<span class="pl-smi">o</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> i,r;<span class="pl-k">switch</span>(n){<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>:i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">allBodies</span>(e);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>constraint<span class="pl-pds">&quot;</span></span>:i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">allConstraints</span>(e);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>composite<span class="pl-pds">&quot;</span></span>:i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">allComposites</span>(e).<span class="pl-c1">concat</span>(e)}<span class="pl-k">return</span> i<span class="pl-k">?</span>(r<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">id</span>.<span class="pl-c1">toString</span>()<span class="pl-k">===</span><span class="pl-smi">t</span>.<span class="pl-c1">toString</span>()}),<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>r[<span class="pl-c1">0</span>])<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-smi">o</span>.<span class="pl-en">move</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-c1">remove</span>(e,t),<span class="pl-smi">o</span>.<span class="pl-c1">add</span>(n,t),e},<span class="pl-smi">o</span>.<span class="pl-en">rebase</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">allBodies</span>(e).<span class="pl-c1">concat</span>(<span class="pl-smi">o</span>.<span class="pl-en">allConstraints</span>(e)).<span class="pl-c1">concat</span>(<span class="pl-smi">o</span>.<span class="pl-en">allComposites</span>(e)),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)t[n].<span class="pl-c1">id</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">nextId</span>();<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),e},<span class="pl-smi">o</span>.<span class="pl-en">translate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">allBodies</span>(e)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">bodies</span>,r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-smi">s</span>.<span class="pl-en">translate</span>(i[r],t);</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),e},<span class="pl-smi">o</span>.<span class="pl-en">rotate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">i</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t),a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t),l<span class="pl-k">=</span>i<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">allBodies</span>(e)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">bodies</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>l[c],u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>,p<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>;<span class="pl-smi">s</span>.<span class="pl-en">setPosition</span>(d,{x<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>(u<span class="pl-k">*</span>r<span class="pl-k">-</span>p<span class="pl-k">*</span>a),y<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>(u<span class="pl-k">*</span>a<span class="pl-k">+</span>p<span class="pl-k">*</span>r)}),<span class="pl-smi">s</span>.<span class="pl-en">rotate</span>(d,t)}<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),e},<span class="pl-smi">o</span>.<span class="pl-en">scale</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">i</span>,<span class="pl-smi">r</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>r<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">allBodies</span>(e)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">bodies</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[l],d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span>,u<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span>;<span class="pl-smi">s</span>.<span class="pl-en">setPosition</span>(c,{x<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>d<span class="pl-k">*</span>t,y<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>u<span class="pl-k">*</span>n}),<span class="pl-smi">s</span>.<span class="pl-en">scale</span>(c,t,n)}<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">setModified</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),e},<span class="pl-smi">o</span>.<span class="pl-en">bounds</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">Matter</span>.<span class="pl-smi">Composite</span>.<span class="pl-en">allBodies</span>(e),n<span class="pl-k">=</span>[],o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;o<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>t[o];<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(<span class="pl-smi">i</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>,<span class="pl-smi">i</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>)}<span class="pl-k">return</span> <span class="pl-smi">Matter</span>.<span class="pl-smi">Bounds</span>.<span class="pl-en">create</span>(n)}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Events<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">16</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Body<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>}],<span class="pl-c1">3</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Composite<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../constraint/Constraint<span class="pl-pds">&quot;</span></span>),<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>));<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">create</span>(),n<span class="pl-k">=</span>{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>World<span class="pl-pds">&quot;</span></span>,gravity<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">1</span>,scale<span class="pl-k">:</span><span class="pl-c1">.001</span>},bounds<span class="pl-k">:</span>{min<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span><span class="pl-k">-</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>)},max<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line">}}};return r.extend(t,n,e)}}()},{&quot;../constraint/Constraint&quot;:12,&quot;../core/Common&quot;:14,&quot;./Composite&quot;:2}],4:[function(e,t,n){var o={};t.exports=o,function(){o.create=function(e){return{id:o.id(e),vertex:e,normalImpulse:0,tangentImpulse:0}},o.id=function(e){return e.body.id+&quot;_&quot;+e.index}}()},{}],5:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;./SAT&quot;),r=e(&quot;./Pair&quot;),s=e(&quot;../geometry/Bounds&quot;);!function(){o.collisions=function(e,t){for(var n=[],a=t.pairs.table,l=0;l&lt;e.length;l++){var c=e[l][0],d=e[l][1];if((!c.isStatic&amp;&amp;!c.isSleeping||!d.isStatic&amp;&amp;!d.isSleeping)&amp;&amp;o.canCollide(c.collisionFilter,d.collisionFilter)&amp;&amp;s.overlaps(c.bounds,d.bounds))for(var u=c.parts.length&gt;1?1:0;u&lt;c.parts.length;u++)for(var p=c.parts[u],f=d.parts.length&gt;1?1:0;f&lt;d.parts.length;f++){var m=d.parts[f];if(p===c&amp;&amp;m===d||s.overlaps(p.bounds,m.bounds)){var v,y=r.id(p,m),g=a[y];v=g&amp;&amp;g.isActive?g.collision:null;var x=i.collides(p,m,v);x.collided&amp;&amp;n.push(x)}}}return n},o.canCollide=function(e,t){return e.group===t.group&amp;&amp;0!==e.group?e.group&gt;0:0!==(e.mask&amp;t.category)&amp;&amp;0!==(t.mask&amp;e.category);</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">}}()},{&quot;../geometry/Bounds&quot;:26,&quot;./Pair&quot;:7,&quot;./SAT&quot;:11}],6:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;./Pair&quot;),r=e(&quot;./Detector&quot;),s=e(&quot;../core/Common&quot;);!function(){o.create=function(e){var t={controller:o,detector:r.collisions,buckets:{},pairs:{},pairsList:[],bucketWidth:48,bucketHeight:48};return s.extend(t,e)},o.update=function(e,t,n,i){var r,s,a,l,c,d=n.world,u=e.buckets,p=!1;for(r=0;r&lt;t.length;r++){var f=t[r];if((!f.isSleeping||i)&amp;&amp;!(f.bounds.max.x&lt;d.bounds.min.x||f.bounds.min.x&gt;d.bounds.max.x||f.bounds.max.y&lt;d.bounds.min.y||f.bounds.min.y&gt;d.bounds.max.y)){var m=o._getRegion(e,f);if(!f.region||m.id!==f.region.id||i){f.region&amp;&amp;!i||(f.region=m);var v=o._regionUnion(m,f.region);for(s=v.startCol;s&lt;=v.endCol;s++)for(a=v.startRow;a&lt;=v.endRow;a++){c=o._getBucketId(s,a),l=u[c];var y=s&gt;=m.startCol&amp;&amp;s&lt;=m.endCol&amp;&amp;a&gt;=m.startRow&amp;&amp;a&lt;=m.endRow,g=s&gt;=f.region.startCol&amp;&amp;s&lt;=f.region.endCol&amp;&amp;a&gt;=f.region.startRow&amp;&amp;a&lt;=f.region.endRow;!y&amp;&amp;g&amp;&amp;g&amp;&amp;l&amp;&amp;o._bucketRemoveBody(e,l,f),(f.region===m||y&amp;&amp;!g||i)&amp;&amp;(l||(l=o._createBucket(u,c)),</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-en">_bucketAddBody</span>(e,l,f))}<span class="pl-smi">f</span>.<span class="pl-smi">region</span><span class="pl-k">=</span>m,p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}}p<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">pairsList</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_createActivePairsList</span>(e))},<span class="pl-smi">o</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-smi">e</span>.<span class="pl-smi">buckets</span><span class="pl-k">=</span>{},<span class="pl-smi">e</span>.<span class="pl-smi">pairs</span><span class="pl-k">=</span>{},<span class="pl-smi">e</span>.<span class="pl-smi">pairsList</span><span class="pl-k">=</span>[]},<span class="pl-smi">o</span>.<span class="pl-en">_regionUnion</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">e</span>.<span class="pl-smi">startCol</span>,<span class="pl-smi">t</span>.<span class="pl-smi">startCol</span>),i<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">e</span>.<span class="pl-smi">endCol</span>,<span class="pl-smi">t</span>.<span class="pl-smi">endCol</span>),r<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">e</span>.<span class="pl-smi">startRow</span>,<span class="pl-smi">t</span>.<span class="pl-smi">startRow</span>),s<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">e</span>.<span class="pl-smi">endRow</span>,<span class="pl-smi">t</span>.<span class="pl-smi">endRow</span>);<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">_createRegion</span>(n,i,r,s)},<span class="pl-smi">o</span>.<span class="pl-en">_getRegion</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">bounds</span>,i<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">n</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">bucketWidth</span>),r<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">n</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">bucketWidth</span>),s<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">n</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">bucketHeight</span>),a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">n</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-smi">bucketHeight</span>);<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">_createRegion</span>(i,r,s,a)},<span class="pl-smi">o</span>.<span class="pl-en">_createRegion</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>){<span class="pl-k">return</span>{id<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>t<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>o,startCol<span class="pl-k">:</span>e,endCol<span class="pl-k">:</span>t,startRow<span class="pl-k">:</span>n,endRow<span class="pl-k">:</span>o}},<span class="pl-smi">o</span>.<span class="pl-en">_getBucketId</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>R<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>t},<span class="pl-smi">o</span>.<span class="pl-en">_createBucket</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>e[t]<span class="pl-k">=</span>[];<span class="pl-k">return</span> n},<span class="pl-smi">o</span>.<span class="pl-en">_bucketAddBody</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>t[o];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-smi">n</span>.<span class="pl-c1">id</span><span class="pl-k">===</span><span class="pl-smi">r</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-smi">n</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">isStatic</span>)){<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">id</span>(n,r),a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pairs</span>[s];a<span class="pl-k">?</span>a[<span class="pl-c1">2</span>]<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">pairs</span>[s]<span class="pl-k">=</span>[n,r,<span class="pl-c1">1</span>]}}<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(n)},<span class="pl-smi">o</span>.<span class="pl-en">_bucketRemoveBody</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-smi">t</span>.<span class="pl-c1">splice</span>(<span class="pl-smi">s</span>.<span class="pl-c1">indexOf</span>(t,n),<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">for(var o=0;o&lt;t.length;o++){var r=t[o],a=i.id(n,r),l=e.pairs[a];l&amp;&amp;(l[2]-=1)}},o._createActivePairsList=function(e){var t,n,o=[];t=s.keys(e.pairs);for(var i=0;i&lt;t.length;i++)n=e.pairs[t[i]],n[2]&gt;0?o.push(n):delete e.pairs[t[i]];return o}}()},{&quot;../core/Common&quot;:14,&quot;./Detector&quot;:5,&quot;./Pair&quot;:7}],7:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;./Contact&quot;);!function(){o.create=function(e,t){var n=e.bodyA,i=e.bodyB,r=e.parentA,s=e.parentB,a={id:o.id(n,i),bodyA:n,bodyB:i,contacts:{},activeContacts:[],separation:0,isActive:!0,isSensor:n.isSensor||i.isSensor,timeCreated:t,timeUpdated:t,inverseMass:r.inverseMass+s.inverseMass,friction:Math.min(r.friction,s.friction),frictionStatic:Math.max(r.frictionStatic,s.frictionStatic),restitution:Math.max(r.restitution,s.restitution),slop:Math.max(r.slop,s.slop)};return o.update(a,e,t),a},o.update=function(e,t,n){var r=e.contacts,s=t.supports,a=e.activeContacts,l=t.parentA,c=t.parentB;if(e.collision=t,e.inverseMass=l.inverseMass+c.inverseMass,e.friction=Math.min(l.friction,c.friction),</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">frictionStatic</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">l</span>.<span class="pl-smi">frictionStatic</span>,<span class="pl-smi">c</span>.<span class="pl-smi">frictionStatic</span>),<span class="pl-smi">e</span>.<span class="pl-smi">restitution</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">l</span>.<span class="pl-smi">restitution</span>,<span class="pl-smi">c</span>.<span class="pl-smi">restitution</span>),<span class="pl-smi">e</span>.<span class="pl-smi">slop</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">l</span>.<span class="pl-smi">slop</span>,<span class="pl-smi">c</span>.<span class="pl-smi">slop</span>),<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">t</span>.<span class="pl-smi">collided</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>s[d],p<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">id</span>(u),f<span class="pl-k">=</span>r[p];f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(f)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(r[p]<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">create</span>(u))}<span class="pl-smi">e</span>.<span class="pl-smi">separation</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">depth</span>,<span class="pl-smi">o</span>.<span class="pl-c1">setActive</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>,n)}<span class="pl-k">else</span> <span class="pl-smi">e</span>.<span class="pl-smi">isActive</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">setActive</span>(e,<span class="pl-k">!</span><span class="pl-c1">1</span>,n)},<span class="pl-smi">o</span>.<span class="pl-en">setActive</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){t<span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">timeUpdated</span><span class="pl-k">=</span>n)<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">e</span>.<span class="pl-smi">activeContacts</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>)},<span class="pl-smi">o</span>.<span class="pl-en">id</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">id</span><span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>B<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">id</span>}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>./Contact<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">4</span>}],<span class="pl-c1">8</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Pair<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-smi">_pairMaxIdleLife</span><span class="pl-k">=</span><span class="pl-c1">1e3</span>,<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-smi">r</span>.<span class="pl-en">extend</span>({table<span class="pl-k">:</span>{},list<span class="pl-k">:</span>[],collisionStart<span class="pl-k">:</span>[],collisionActive<span class="pl-k">:</span>[],collisionEnd<span class="pl-k">:</span>[]},e)},<span class="pl-smi">o</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o,s,a,l,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">list</span>,d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">table</span>,u<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">collisionStart</span>,p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">collisionEnd</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">collisionActive</span>,m<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-smi">u</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>)o<span class="pl-k">=</span>t[l],<span class="pl-smi">o</span>.<span class="pl-smi">collided</span><span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">id</span>(<span class="pl-smi">o</span>.<span class="pl-smi">bodyA</span>,<span class="pl-smi">o</span>.<span class="pl-smi">bodyB</span>),<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(s),a<span class="pl-k">=</span>d[s],</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">a?(a.isActive?f.push(a):u.push(a),i.update(a,o,n)):(a=i.create(o,n),d[s]=a,u.push(a),c.push(a)));for(l=0;l&lt;c.length;l++)a=c[l],a.isActive&amp;&amp;r.indexOf(m,a.id)===-1&amp;&amp;(i.setActive(a,!1,n),p.push(a))},o.removeOld=function(e,t){var n,i,r,s,a=e.list,l=e.table,c=[];for(s=0;s&lt;a.length;s++)n=a[s],i=n.collision,i.bodyA.isSleeping||i.bodyB.isSleeping?n.timeUpdated=t:t-n.timeUpdated&gt;o._pairMaxIdleLife&amp;&amp;c.push(s);for(s=0;s&lt;c.length;s++)r=c[s]-s,n=a[r],delete l[n.id],a.splice(r,1)},o.clear=function(e){return e.table={},e.list.length=0,e.collisionStart.length=0,e.collisionActive.length=0,e.collisionEnd.length=0,e}}()},{&quot;../core/Common&quot;:14,&quot;./Pair&quot;:7}],9:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;../geometry/Vector&quot;),r=e(&quot;./SAT&quot;),s=e(&quot;../geometry/Bounds&quot;),a=e(&quot;../factory/Bodies&quot;),l=e(&quot;../geometry/Vertices&quot;);!function(){o.collides=function(e,t){for(var n=[],o=0;o&lt;t.length;o++){var i=t[o];if(s.overlaps(i.bounds,e.bounds))for(var a=1===i.parts.length?0:1;a&lt;i.parts.length;a++){var l=i.parts[a];if(s.overlaps(l.bounds,e.bounds)){</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">collides</span>(l,e);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">collided</span>){<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">break</span>}}}}<span class="pl-k">return</span> n},<span class="pl-smi">o</span>.<span class="pl-en">ray</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">r</span>){r<span class="pl-k">=</span>r<span class="pl-k">||</span><span class="pl-c1">1e-100</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">angle</span>(t,n),l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">magnitude</span>(<span class="pl-smi">i</span>.<span class="pl-c1">sub</span>(t,n)),c<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>),d<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>),u<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">rectangle</span>(c,d,l,r,{angle<span class="pl-k">:</span>s}),p<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">collides</span>(u,e),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;f<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>p[f];<span class="pl-smi">m</span>.<span class="pl-c1">body</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">bodyB</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">bodyA</span>}<span class="pl-k">return</span> p},<span class="pl-smi">o</span>.<span class="pl-en">region</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span>[],i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>e[i],a<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">overlaps</span>(<span class="pl-smi">r</span>.<span class="pl-smi">bounds</span>,t);(a<span class="pl-k">&amp;&amp;!</span>n<span class="pl-k">||!</span>a<span class="pl-k">&amp;&amp;</span>n)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">push</span>(r)}<span class="pl-k">return</span> o},<span class="pl-smi">o</span>.<span class="pl-en">point</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span>[],o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>e[o];<span class="pl-k">if</span>(<span class="pl-smi">s</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">i</span>.<span class="pl-smi">bounds</span>,t))<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">i</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">i</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">parts</span>[r];<span class="pl-k">if</span>(<span class="pl-smi">s</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">a</span>.<span class="pl-smi">bounds</span>,t)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>,t)){<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(i);<span class="pl-k">break</span>}}}<span class="pl-k">return</span> n}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../factory/Bodies<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">23</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">26</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">29</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./SAT<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">11</span>}],<span class="pl-c1">10</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-smi">_restingThresh</span><span class="pl-k">=</span><span class="pl-c1">4</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_restingThreshTangent</span><span class="pl-k">=</span><span class="pl-c1">6</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_positionDampen</span><span class="pl-k">=</span><span class="pl-c1">.9</span>,</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">o._positionWarming=.8,o._frictionNormalMultiplier=5,o.preSolvePosition=function(e){var t,n,o;for(t=0;t&lt;e.length;t++)n=e[t],n.isActive&amp;&amp;(o=n.activeContacts.length,n.collision.parentA.totalContacts+=o,n.collision.parentB.totalContacts+=o)},o.solvePosition=function(e,t){var n,i,s,a,l,c,d,u,p,f=r._temp[0],m=r._temp[1],v=r._temp[2],y=r._temp[3];for(n=0;n&lt;e.length;n++)i=e[n],i.isActive&amp;&amp;!i.isSensor&amp;&amp;(s=i.collision,a=s.parentA,l=s.parentB,c=s.normal,d=r.sub(r.add(l.positionImpulse,l.position,f),r.add(a.positionImpulse,r.sub(l.position,s.penetration,m),v),y),i.separation=r.dot(c,d));for(n=0;n&lt;e.length;n++)i=e[n],i.isActive&amp;&amp;!i.isSensor&amp;&amp;(s=i.collision,a=s.parentA,l=s.parentB,c=s.normal,p=(i.separation-i.slop)*t,(a.isStatic||l.isStatic)&amp;&amp;(p*=2),a.isStatic||a.isSleeping||(u=o._positionDampen/a.totalContacts,a.positionImpulse.x+=c.x*p*u,a.positionImpulse.y+=c.y*p*u),l.isStatic||l.isSleeping||(u=o._positionDampen/l.totalContacts,l.positionImpulse.x-=c.x*p*u,l.positionImpulse.y-=c.y*p*u))},o.postSolvePosition=function(e){</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">for(var t=0;t&lt;e.length;t++){var n=e[t];if(n.totalContacts=0,0!==n.positionImpulse.x||0!==n.positionImpulse.y){for(var s=0;s&lt;n.parts.length;s++){var l=n.parts[s];i.translate(l.vertices,n.positionImpulse),a.update(l.bounds,l.vertices,n.velocity),l.position.x+=n.positionImpulse.x,l.position.y+=n.positionImpulse.y}n.positionPrev.x+=n.positionImpulse.x,n.positionPrev.y+=n.positionImpulse.y,r.dot(n.positionImpulse,n.velocity)&lt;0?(n.positionImpulse.x=0,n.positionImpulse.y=0):(n.positionImpulse.x*=o._positionWarming,n.positionImpulse.y*=o._positionWarming)}}},o.preSolveVelocity=function(e){var t,n,o,i,s,a,l,c,d,u,p,f,m,v,y=r._temp[0],g=r._temp[1];for(t=0;t&lt;e.length;t++)if(o=e[t],o.isActive&amp;&amp;!o.isSensor)for(i=o.activeContacts,s=o.collision,a=s.parentA,l=s.parentB,c=s.normal,d=s.tangent,n=0;n&lt;i.length;n++)u=i[n],p=u.vertex,f=u.normalImpulse,m=u.tangentImpulse,0===f&amp;&amp;0===m||(y.x=c.x*f+d.x*m,y.y=c.y*f+d.y*m,a.isStatic||a.isSleeping||(v=r.sub(p,a.position,g),a.positionPrev.x+=y.x*a.inverseMass,a.positionPrev.y+=y.y*a.inverseMass,</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">a.anglePrev+=r.cross(v,y)*a.inverseInertia),l.isStatic||l.isSleeping||(v=r.sub(p,l.position,g),l.positionPrev.x-=y.x*l.inverseMass,l.positionPrev.y-=y.y*l.inverseMass,l.anglePrev-=r.cross(v,y)*l.inverseInertia))},o.solveVelocity=function(e,t){for(var n=t*t,i=r._temp[0],a=r._temp[1],l=r._temp[2],c=r._temp[3],d=r._temp[4],u=r._temp[5],p=0;p&lt;e.length;p++){var f=e[p];if(f.isActive&amp;&amp;!f.isSensor){var m=f.collision,v=m.parentA,y=m.parentB,g=m.normal,x=m.tangent,h=f.activeContacts,b=1/h.length;v.velocity.x=v.position.x-v.positionPrev.x,v.velocity.y=v.position.y-v.positionPrev.y,y.velocity.x=y.position.x-y.positionPrev.x,y.velocity.y=y.position.y-y.positionPrev.y,v.angularVelocity=v.angle-v.anglePrev,y.angularVelocity=y.angle-y.anglePrev;for(var w=0;w&lt;h.length;w++){var S=h[w],C=S.vertex,A=r.sub(C,v.position,a),P=r.sub(C,y.position,l),B=r.add(v.velocity,r.mult(r.perp(A),v.angularVelocity),c),M=r.add(y.velocity,r.mult(r.perp(P),y.angularVelocity),d),k=r.sub(B,M,u),I=r.dot(g,k),_=r.dot(x,k),T=Math.abs(_),R=s.sign(_),V=(1+f.restitution)*I,E=s.clamp(f.separation+I,0,1)*o._frictionNormalMultiplier,L=_,F=1/0;</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">T</span><span class="pl-k">&gt;</span><span class="pl-smi">f</span>.<span class="pl-smi">friction</span><span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-smi">frictionStatic</span><span class="pl-k">*</span><span class="pl-c1">E</span><span class="pl-k">*</span>n<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">T</span>,<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">clamp</span>(<span class="pl-smi">f</span>.<span class="pl-smi">friction</span><span class="pl-k">*</span><span class="pl-c1">R</span><span class="pl-k">*</span>n,<span class="pl-k">-</span><span class="pl-c1">F</span>,<span class="pl-c1">F</span>));<span class="pl-k">var</span> <span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">cross</span>(<span class="pl-c1">A</span>,g),q<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">cross</span>(<span class="pl-c1">P</span>,g),<span class="pl-c1">W</span><span class="pl-k">=</span>b<span class="pl-k">/</span>(<span class="pl-smi">v</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">+</span><span class="pl-smi">v</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">*</span><span class="pl-c1">O</span><span class="pl-k">*</span><span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">*</span>q<span class="pl-k">*</span>q);<span class="pl-k">if</span>(<span class="pl-c1">V</span><span class="pl-k">*=</span><span class="pl-c1">W</span>,<span class="pl-c1">L</span><span class="pl-k">*=</span><span class="pl-c1">W</span>,<span class="pl-c1">I</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">I</span><span class="pl-k">*</span><span class="pl-c1">I</span><span class="pl-k">&gt;</span><span class="pl-smi">o</span>.<span class="pl-smi">_restingThresh</span><span class="pl-k">*</span>n)<span class="pl-c1">S</span>.<span class="pl-smi">normalImpulse</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-smi">normalImpulse</span>;<span class="pl-c1">S</span>.<span class="pl-smi">normalImpulse</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">S</span>.<span class="pl-smi">normalImpulse</span><span class="pl-k">+</span><span class="pl-c1">V</span>,<span class="pl-c1">0</span>),<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-smi">normalImpulse</span><span class="pl-k">-</span><span class="pl-c1">D</span>}<span class="pl-k">if</span>(_<span class="pl-k">*</span>_<span class="pl-k">&gt;</span><span class="pl-smi">o</span>.<span class="pl-smi">_restingThreshTangent</span><span class="pl-k">*</span>n)<span class="pl-c1">S</span>.<span class="pl-smi">tangentImpulse</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> <span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-smi">tangentImpulse</span>;<span class="pl-c1">S</span>.<span class="pl-smi">tangentImpulse</span><span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">clamp</span>(<span class="pl-c1">S</span>.<span class="pl-smi">tangentImpulse</span><span class="pl-k">+</span><span class="pl-c1">L</span>,<span class="pl-k">-</span><span class="pl-c1">F</span>,<span class="pl-c1">F</span>),<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-smi">tangentImpulse</span><span class="pl-k">-</span><span class="pl-c1">N</span>}<span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">V</span><span class="pl-k">+</span><span class="pl-smi">x</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">L</span>,<span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">V</span><span class="pl-k">+</span><span class="pl-smi">x</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">L</span>,<span class="pl-smi">v</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-smi">v</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">||</span>(<span class="pl-smi">v</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">v</span>.<span class="pl-smi">inverseMass</span>,<span class="pl-smi">v</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">v</span>.<span class="pl-smi">inverseMass</span>,<span class="pl-smi">v</span>.<span class="pl-smi">anglePrev</span><span class="pl-k">+=</span><span class="pl-smi">r</span>.<span class="pl-en">cross</span>(<span class="pl-c1">A</span>,i)<span class="pl-k">*</span><span class="pl-smi">v</span>.<span class="pl-smi">inverseInertia</span>),<span class="pl-smi">y</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-smi">y</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">||</span>(<span class="pl-smi">y</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-smi">inverseMass</span>,<span class="pl-smi">y</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-smi">inverseMass</span>,<span class="pl-smi">y</span>.<span class="pl-smi">anglePrev</span><span class="pl-k">-=</span><span class="pl-smi">r</span>.<span class="pl-en">cross</span>(<span class="pl-c1">P</span>,i)<span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-smi">inverseInertia</span>)}}}}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">26</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">29</span>}],<span class="pl-c1">11</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">collides</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> s,a,l,c,d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(n){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parent</span>,p<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">parent</span>,f<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">speed</span><span class="pl-k">*</span><span class="pl-smi">u</span>.<span class="pl-smi">speed</span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">angularSpeed</span><span class="pl-k">*</span><span class="pl-smi">u</span>.<span class="pl-smi">angularSpeed</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-smi">speed</span><span class="pl-k">*</span><span class="pl-smi">p</span>.<span class="pl-smi">speed</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-smi">angularSpeed</span><span class="pl-k">*</span><span class="pl-smi">p</span>.<span class="pl-smi">angularSpeed</span>;d<span class="pl-k">=</span>n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">collided</span><span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&lt;</span><span class="pl-c1">.2</span>,c<span class="pl-k">=</span>n}<span class="pl-k">else</span> c<span class="pl-k">=</span>{collided<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,bodyA<span class="pl-k">:</span>e,bodyB<span class="pl-k">:</span>t};<span class="pl-k">if</span>(n<span class="pl-k">&amp;&amp;</span>d){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">axisBody</span>,v<span class="pl-k">=</span>m<span class="pl-k">===</span>e<span class="pl-k">?</span>t<span class="pl-k">:</span>e,y<span class="pl-k">=</span>[<span class="pl-smi">m</span>.<span class="pl-smi">axes</span>[<span class="pl-smi">n</span>.<span class="pl-smi">axisNumber</span>]];<span class="pl-k">if</span>(l<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_overlapAxes</span>(<span class="pl-smi">m</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">v</span>.<span class="pl-smi">vertices</span>,y),<span class="pl-smi">c</span>.<span class="pl-smi">reused</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">l</span>.<span class="pl-smi">overlap</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">collided</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c}<span class="pl-k">else</span>{<span class="pl-k">if</span>(s<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_overlapAxes</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">t</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">axes</span>),<span class="pl-smi">s</span>.<span class="pl-smi">overlap</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">collided</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c;<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_overlapAxes</span>(<span class="pl-smi">t</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">t</span>.<span class="pl-smi">axes</span>),<span class="pl-smi">a</span>.<span class="pl-smi">overlap</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">collided</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c;<span class="pl-smi">s</span>.<span class="pl-smi">overlap</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">overlap</span><span class="pl-k">?</span>(l<span class="pl-k">=</span>s,<span class="pl-smi">c</span>.<span class="pl-smi">axisBody</span><span class="pl-k">=</span>e)<span class="pl-k">:</span>(l<span class="pl-k">=</span>a,<span class="pl-smi">c</span>.<span class="pl-smi">axisBody</span><span class="pl-k">=</span>t),<span class="pl-smi">c</span>.<span class="pl-smi">axisNumber</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">axisNumber</span>}<span class="pl-smi">c</span>.<span class="pl-smi">bodyA</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">id</span><span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">?</span>e<span class="pl-k">:</span>t,<span class="pl-smi">c</span>.<span class="pl-smi">bodyB</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">id</span><span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">?</span>t<span class="pl-k">:</span>e,<span class="pl-smi">c</span>.<span class="pl-smi">collided</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">depth</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">overlap</span>,<span class="pl-smi">c</span>.<span class="pl-smi">parentA</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bodyA</span>.<span class="pl-c1">parent</span>,<span class="pl-smi">c</span>.<span class="pl-smi">parentB</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bodyB</span>.<span class="pl-c1">parent</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bodyA</span>,t<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bodyB</span>,<span class="pl-smi">r</span>.<span class="pl-en">dot</span>(<span class="pl-smi">l</span>.<span class="pl-c1">axis</span>,<span class="pl-smi">r</span>.<span class="pl-c1">sub</span>(<span class="pl-smi">t</span>.<span class="pl-smi">position</span>,<span class="pl-smi">e</span>.<span class="pl-smi">position</span>))<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">normal</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-c1">axis</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-c1">axis</span>.<span class="pl-c1">y</span>}<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">normal</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-c1">axis</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-c1">axis</span>.<span class="pl-c1">y</span>},<span class="pl-smi">c</span>.<span class="pl-smi">tangent</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">perp</span>(<span class="pl-smi">c</span>.<span class="pl-smi">normal</span>),<span class="pl-smi">c</span>.<span class="pl-smi">penetration</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">penetration</span><span class="pl-k">||</span>{},<span class="pl-smi">c</span>.<span class="pl-smi">penetration</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">c</span>.<span class="pl-smi">depth</span>,</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">penetration</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">c</span>.<span class="pl-smi">depth</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_findSupports</span>(e,t,<span class="pl-smi">c</span>.<span class="pl-smi">normal</span>),x<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,g[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-c1">push</span>(g[<span class="pl-c1">0</span>]),<span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">e</span>.<span class="pl-smi">vertices</span>,g[<span class="pl-c1">1</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-c1">push</span>(g[<span class="pl-c1">1</span>]),<span class="pl-smi">x</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_findSupports</span>(t,e,<span class="pl-smi">r</span>.<span class="pl-en">neg</span>(<span class="pl-smi">c</span>.<span class="pl-smi">normal</span>));<span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">t</span>.<span class="pl-smi">vertices</span>,h[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-c1">push</span>(h[<span class="pl-c1">0</span>]),<span class="pl-smi">x</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">t</span>.<span class="pl-smi">vertices</span>,h[<span class="pl-c1">1</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-c1">push</span>(h[<span class="pl-c1">1</span>])}<span class="pl-k">return</span> <span class="pl-smi">x</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span>[g[<span class="pl-c1">0</span>]]),<span class="pl-smi">c</span>.<span class="pl-smi">supports</span><span class="pl-k">=</span>x,c},<span class="pl-smi">o</span>.<span class="pl-en">_overlapAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i,s,a<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">_temp</span>[<span class="pl-c1">0</span>],l<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">_temp</span>[<span class="pl-c1">1</span>],c<span class="pl-k">=</span>{overlap<span class="pl-k">:</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>},d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">if</span>(s<span class="pl-k">=</span>n[d],<span class="pl-smi">o</span>.<span class="pl-en">_projectToAxis</span>(a,e,s),<span class="pl-smi">o</span>.<span class="pl-en">_projectToAxis</span>(l,t,s),i<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-smi">min</span>,<span class="pl-smi">l</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>),i<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">overlap</span><span class="pl-k">=</span>i,c;i<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">overlap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">overlap</span><span class="pl-k">=</span>i,<span class="pl-smi">c</span>.<span class="pl-c1">axis</span><span class="pl-k">=</span>s,<span class="pl-smi">c</span>.<span class="pl-smi">axisNumber</span><span class="pl-k">=</span>d)}<span class="pl-k">return</span> c},<span class="pl-smi">o</span>.<span class="pl-en">_projectToAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">dot</span>(t[<span class="pl-c1">0</span>],n),i<span class="pl-k">=</span>o,s<span class="pl-k">=</span><span class="pl-c1">1</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;s<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">dot</span>(t[s],n);a<span class="pl-k">&gt;</span>i<span class="pl-k">?</span>i<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&lt;</span>o<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span>a)}<span class="pl-smi">e</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>o,<span class="pl-smi">e</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>i},<span class="pl-smi">o</span>.<span class="pl-en">_findSupports</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> o,i,s,a,l<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,c<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">_temp</span>[<span class="pl-c1">0</span>],d<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">vertices</span>,u<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>,p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;p<span class="pl-k">++</span>)i<span class="pl-k">=</span>d[p],<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-c1">y</span>,o<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-en">dot</span>(n,c),o<span class="pl-k">&lt;</span>l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>o,s<span class="pl-k">=</span>i);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">index</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">s</span>.<span class="pl-c1">index</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span>d[f],<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-c1">y</span>,l<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-en">dot</span>(n,c),a<span class="pl-k">=</span>i;<span class="pl-k">var</span> m<span class="pl-k">=</span>(<span class="pl-smi">s</span>.<span class="pl-c1">index</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> i<span class="pl-k">=</span>d[m],<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-c1">y</span>,o<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-en">dot</span>(n,c),o<span class="pl-k">&lt;</span>l<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>i),[s,a]}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">29</span>}],<span class="pl-c1">12</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Sleeping<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Axes<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-smi">_warming</span><span class="pl-k">=</span><span class="pl-c1">.4</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_torqueDampen</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-smi">_minLength</span><span class="pl-k">=</span><span class="pl-c1">1e-6</span>,<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>e;<span class="pl-smi">t</span>.<span class="pl-smi">bodyA</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">t</span>.<span class="pl-smi">pointA</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">t</span>.<span class="pl-smi">pointA</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>}),<span class="pl-smi">t</span>.<span class="pl-smi">bodyB</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">t</span>.<span class="pl-smi">pointB</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">t</span>.<span class="pl-smi">pointB</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyA</span><span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-c1">add</span>(<span class="pl-smi">t</span>.<span class="pl-smi">bodyA</span>.<span class="pl-smi">position</span>,<span class="pl-smi">t</span>.<span class="pl-smi">pointA</span>)<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">pointA</span>,o<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyB</span><span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-c1">add</span>(<span class="pl-smi">t</span>.<span class="pl-smi">bodyB</span>.<span class="pl-smi">position</span>,<span class="pl-smi">t</span>.<span class="pl-smi">pointB</span>)<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">pointB</span>,i<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">magnitude</span>(<span class="pl-smi">r</span>.<span class="pl-c1">sub</span>(n,o));<span class="pl-smi">t</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-smi">t</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span><span class="pl-k">:</span>i,<span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-en">nextId</span>(),<span class="pl-smi">t</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">label</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>Constraint<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">t</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>constraint<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">t</span>.<span class="pl-smi">stiffness</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">stiffness</span><span class="pl-k">||</span>(<span class="pl-smi">t</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">.7</span>),<span class="pl-smi">t</span>.<span class="pl-smi">damping</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">damping</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-smi">t</span>.<span class="pl-smi">angularStiffness</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">angularStiffness</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-smi">t</span>.<span class="pl-smi">angleA</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyA</span><span class="pl-k">?</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyA</span>.<span class="pl-smi">angle</span><span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">angleA</span>,<span class="pl-smi">t</span>.<span class="pl-smi">angleB</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyB</span><span class="pl-k">?</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyB</span>.<span class="pl-smi">angle</span><span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">angleB</span>,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">t</span>.<span class="pl-smi">plugin</span><span class="pl-k">=</span>{};<span class="pl-k">var</span> s<span class="pl-k">=</span>{visible<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>,strokeStyle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ffffff<span class="pl-pds">&quot;</span></span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,anchors<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-smi">stiffness</span><span class="pl-k">&gt;</span><span class="pl-c1">.1</span><span class="pl-k">?</span>(<span class="pl-smi">s</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>pin<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">s</span>.<span class="pl-c1">anchors</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">stiffness</span><span class="pl-k">&lt;</span><span class="pl-c1">.9</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">s</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>spring<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">t</span>.<span class="pl-smi">render</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">extend</span>(s,<span class="pl-smi">t</span>.<span class="pl-smi">render</span>),t},<span class="pl-smi">o</span>.<span class="pl-en">preSolveAll</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;t<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>e[t],o<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">constraintImpulse</span>;<span class="pl-smi">n</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-smi">angle</span><span class="pl-k">||</span>(<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">o</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">o</span>.<span class="pl-c1">y</span>,<span class="pl-smi">n</span>.<span class="pl-smi">angle</span><span class="pl-k">+=</span><span class="pl-smi">o</span>.<span class="pl-smi">angle</span>)}},<span class="pl-smi">o</span>.<span class="pl-en">solveAll</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;n<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>e[n],r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span>.<span class="pl-smi">isStatic</span>,s<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span>.<span class="pl-smi">isStatic</span>;(r<span class="pl-k">||</span>s)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">solve</span>(e[n],t)}<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;n<span class="pl-k">+=</span><span class="pl-c1">1</span>)i<span class="pl-k">=</span>e[n],r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span>.<span class="pl-smi">isStatic</span>,s<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span>.<span class="pl-smi">isStatic</span>,r<span class="pl-k">||</span>s<span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-en">solve</span>(e[n],t)},<span class="pl-smi">o</span>.<span class="pl-en">solve</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">bodyA</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">bodyB</span>,s<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pointA</span>,a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pointB</span>;<span class="pl-k">if</span>(n<span class="pl-k">||</span>i){n<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">n</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-en">rotate</span>(s,<span class="pl-smi">n</span>.<span class="pl-smi">angle</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">angleA</span>,s),<span class="pl-smi">e</span>.<span class="pl-smi">angleA</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">angle</span>),i<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">i</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-en">rotate</span>(a,<span class="pl-smi">i</span>.<span class="pl-smi">angle</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">angleB</span>,a),<span class="pl-smi">e</span>.<span class="pl-smi">angleB</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">angle</span>);<span class="pl-k">var</span> l<span class="pl-k">=</span>s,c<span class="pl-k">=</span>a;<span class="pl-k">if</span>(n<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">add</span>(<span class="pl-smi">n</span>.<span class="pl-smi">position</span>,s)),i<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">add</span>(<span class="pl-smi">i</span>.<span class="pl-smi">position</span>,a)),l<span class="pl-k">&amp;&amp;</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">sub</span>(l,c),u<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">magnitude</span>(d);</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">u<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-smi">_minLength</span><span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">_minLength</span>);<span class="pl-k">var</span> p,f,m,v,y,g<span class="pl-k">=</span>(u<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>)<span class="pl-k">/</span>u,x<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stiffness</span><span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">stiffness</span><span class="pl-k">*</span>t<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">stiffness</span>,h<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">mult</span>(d,g<span class="pl-k">*</span>x),b<span class="pl-k">=</span>(n<span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(i<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">:</span><span class="pl-c1">0</span>),w<span class="pl-k">=</span>(n<span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(i<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">:</span><span class="pl-c1">0</span>),<span class="pl-c1">S</span><span class="pl-k">=</span>b<span class="pl-k">+</span>w;<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">damping</span>){<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">create</span>();m<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">div</span>(d,u),y<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">sub</span>(i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">sub</span>(<span class="pl-smi">i</span>.<span class="pl-smi">position</span>,<span class="pl-smi">i</span>.<span class="pl-smi">positionPrev</span>)<span class="pl-k">||</span><span class="pl-c1">C</span>,n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">sub</span>(<span class="pl-smi">n</span>.<span class="pl-smi">position</span>,<span class="pl-smi">n</span>.<span class="pl-smi">positionPrev</span>)<span class="pl-k">||</span><span class="pl-c1">C</span>),v<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">dot</span>(m,y)}n<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">n</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">/</span>b,<span class="pl-smi">n</span>.<span class="pl-smi">constraintImpulse</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>f,<span class="pl-smi">n</span>.<span class="pl-smi">constraintImpulse</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>f,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>f,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>f,<span class="pl-smi">e</span>.<span class="pl-smi">damping</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">e</span>.<span class="pl-smi">damping</span><span class="pl-k">*</span><span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>v<span class="pl-k">*</span>f,<span class="pl-smi">n</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">e</span>.<span class="pl-smi">damping</span><span class="pl-k">*</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>v<span class="pl-k">*</span>f),p<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">cross</span>(s,h)<span class="pl-k">/</span><span class="pl-c1">S</span><span class="pl-k">*</span><span class="pl-smi">o</span>.<span class="pl-smi">_torqueDampen</span><span class="pl-k">*</span><span class="pl-smi">n</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">angularStiffness</span>),<span class="pl-smi">n</span>.<span class="pl-smi">constraintImpulse</span>.<span class="pl-smi">angle</span><span class="pl-k">-=</span>p,<span class="pl-smi">n</span>.<span class="pl-smi">angle</span><span class="pl-k">-=</span>p),i<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">i</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">inverseMass</span><span class="pl-k">/</span>b,<span class="pl-smi">i</span>.<span class="pl-smi">constraintImpulse</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>f,<span class="pl-smi">i</span>.<span class="pl-smi">constraintImpulse</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>f,<span class="pl-smi">i</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>f,<span class="pl-smi">i</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>f,<span class="pl-smi">e</span>.<span class="pl-smi">damping</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">i</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">damping</span><span class="pl-k">*</span><span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>v<span class="pl-k">*</span>f,<span class="pl-smi">i</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-smi">damping</span><span class="pl-k">*</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>v<span class="pl-k">*</span>f),p<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">cross</span>(a,h)<span class="pl-k">/</span><span class="pl-c1">S</span><span class="pl-k">*</span><span class="pl-smi">o</span>.<span class="pl-smi">_torqueDampen</span><span class="pl-k">*</span><span class="pl-smi">i</span>.<span class="pl-smi">inverseInertia</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">angularStiffness</span>),<span class="pl-smi">i</span>.<span class="pl-smi">constraintImpulse</span>.<span class="pl-smi">angle</span><span class="pl-k">+=</span>p,</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">i</span>.<span class="pl-smi">angle</span><span class="pl-k">+=</span>p)}}},<span class="pl-smi">o</span>.<span class="pl-en">postSolveAll</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>e[t],c<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">constraintImpulse</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-smi">n</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">angle</span>)){<span class="pl-smi">s</span>.<span class="pl-c1">set</span>(n,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">parts</span>[d];<span class="pl-smi">i</span>.<span class="pl-en">translate</span>(<span class="pl-smi">u</span>.<span class="pl-smi">vertices</span>,c),d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">u</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">u</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>),<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">angle</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">i</span>.<span class="pl-en">rotate</span>(<span class="pl-smi">u</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">c</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>),<span class="pl-smi">l</span>.<span class="pl-en">rotate</span>(<span class="pl-smi">u</span>.<span class="pl-smi">axes</span>,<span class="pl-smi">c</span>.<span class="pl-smi">angle</span>),d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">rotateAbout</span>(<span class="pl-smi">u</span>.<span class="pl-smi">position</span>,<span class="pl-smi">c</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>,<span class="pl-smi">u</span>.<span class="pl-smi">position</span>)),<span class="pl-smi">a</span>.<span class="pl-en">update</span>(<span class="pl-smi">u</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">u</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">n</span>.<span class="pl-smi">velocity</span>)}<span class="pl-smi">c</span>.<span class="pl-smi">angle</span><span class="pl-k">*=</span><span class="pl-smi">o</span>.<span class="pl-smi">_warming</span>,<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span><span class="pl-smi">o</span>.<span class="pl-smi">_warming</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span><span class="pl-smi">o</span>.<span class="pl-smi">_warming</span>}}}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Sleeping<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">22</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Axes<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">25</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">26</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">29</span>}],<span class="pl-c1">13</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Sleeping<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Mouse<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Events<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Detector<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Constraint<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span>),u<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>),p<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>(e<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">mouse</span><span class="pl-k">:</span><span class="pl-c1">null</span>)<span class="pl-k">||</span>(t<span class="pl-k">?</span><span class="pl-smi">t</span>.<span class="pl-smi">mouse</span><span class="pl-k">:</span><span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">||</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">render</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">canvas</span><span class="pl-k">?</span>n<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">create</span>(<span class="pl-smi">e</span>.<span class="pl-smi">render</span>.<span class="pl-smi">canvas</span>)<span class="pl-k">:</span>t<span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-smi">element</span><span class="pl-k">?</span>n<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">create</span>(<span class="pl-smi">t</span>.<span class="pl-smi">element</span>)<span class="pl-k">:</span>(n<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">create</span>(),<span class="pl-smi">u</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected<span class="pl-pds">&quot;</span></span>)));<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">create</span>({label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Mouse Constraint<span class="pl-pds">&quot;</span></span>,pointA<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-smi">position</span>,pointB<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},length<span class="pl-k">:</span><span class="pl-c1">.01</span>,stiffness<span class="pl-k">:</span><span class="pl-c1">.1</span>,angularStiffness<span class="pl-k">:</span><span class="pl-c1">1</span>,render<span class="pl-k">:</span>{strokeStyle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#90EE90<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">3</span>}}),r<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseConstraint<span class="pl-pds">&quot;</span></span>,mouse<span class="pl-k">:</span>n,element<span class="pl-k">:</span><span class="pl-c1">null</span>,body<span class="pl-k">:</span><span class="pl-c1">null</span>,constraint<span class="pl-k">:</span>i,collisionFilter<span class="pl-k">:</span>{category<span class="pl-k">:</span><span class="pl-c1">1</span>,mask<span class="pl-k">:</span><span class="pl-c1">4294967295</span>,group<span class="pl-k">:</span><span class="pl-c1">0</span>}},l<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">extend</span>(r,t);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">on</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeUpdate<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">allBodies</span>(<span class="pl-smi">e</span>.<span class="pl-smi">world</span>);<span class="pl-smi">o</span>.<span class="pl-en">update</span>(l,t),<span class="pl-smi">o</span>.<span class="pl-en">_triggerEvents</span>(l)}),l},<span class="pl-smi">o</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">mouse</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">constraint</span>,s<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">body</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-smi">button</span>){<span class="pl-k">if</span>(<span class="pl-smi">o</span>.<span class="pl-smi">bodyB</span>)<span class="pl-smi">r</span>.<span class="pl-c1">set</span>(<span class="pl-smi">o</span>.<span class="pl-smi">bodyB</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">o</span>.<span class="pl-smi">pointA</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">position</span>;<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(s<span class="pl-k">=</span>t[c],<span class="pl-smi">p</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">s</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">canCollide</span>(<span class="pl-smi">s</span>.<span class="pl-smi">collisionFilter</span>,<span class="pl-smi">e</span>.<span class="pl-smi">collisionFilter</span>))<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">parts</span>[d];<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">u</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>)){</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">o.pointA=n.position,o.bodyB=e.body=s,o.pointB={x:n.position.x-s.position.x,y:n.position.y-s.position.y},o.angleB=s.angle,r.set(s,!1),a.trigger(e,&quot;startdrag&quot;,{mouse:n,body:s});break}}}else o.bodyB=e.body=null,o.pointB=null,s&amp;&amp;a.trigger(e,&quot;enddrag&quot;,{mouse:n,body:s})},o._triggerEvents=function(e){var t=e.mouse,n=t.sourceEvents;n.mousemove&amp;&amp;a.trigger(e,&quot;mousemove&quot;,{mouse:t}),n.mousedown&amp;&amp;a.trigger(e,&quot;mousedown&quot;,{mouse:t}),n.mouseup&amp;&amp;a.trigger(e,&quot;mouseup&quot;,{mouse:t}),s.clearSourceEvents(t)}}()},{&quot;../body/Composite&quot;:2,&quot;../collision/Detector&quot;:5,&quot;../core/Common&quot;:14,&quot;../core/Events&quot;:16,&quot;../core/Mouse&quot;:19,&quot;../core/Sleeping&quot;:22,&quot;../geometry/Bounds&quot;:26,&quot;../geometry/Vertices&quot;:29,&quot;./Constraint&quot;:12}],14:[function(e,t,n){var o={};t.exports=o,function(){o._nextId=0,o._seed=0,o._nowStartTime=+new Date,o.extend=function(e,t){var n,i;&quot;boolean&quot;==typeof t?(n=2,i=t):(n=1,i=!0);for(var r=n;r&lt;arguments.length;r++){var s=arguments[r];if(s)for(var a in s)i&amp;&amp;s[a]&amp;&amp;s[a].constructor===Object?e[a]&amp;&amp;e[a].constructor!==Object?e[a]=s[a]:(e[a]=e[a]||{},</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-en">extend</span>(e[a],i,s[a]))<span class="pl-k">:</span>e[a]<span class="pl-k">=</span>s[a]}<span class="pl-k">return</span> e},<span class="pl-smi">o</span>.<span class="pl-en">clone</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">extend</span>({},t,e)},<span class="pl-smi">o</span>.<span class="pl-en">keys</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c1">Object</span>.<span class="pl-smi">keys</span>)<span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(e);<span class="pl-k">var</span> t<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> n <span class="pl-k">in</span> e)<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(n);<span class="pl-k">return</span> t},<span class="pl-smi">o</span>.<span class="pl-en">values</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-c1">Object</span>.<span class="pl-smi">keys</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(e),o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>)<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(e[n[o]]);<span class="pl-k">return</span> t}<span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">in</span> e)<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(e[i]);<span class="pl-k">return</span> t},<span class="pl-smi">o</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>){t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">slice</span>(n,o);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;i<span class="pl-k">+=</span><span class="pl-c1">1</span>)e<span class="pl-k">=</span>e[t[i]];<span class="pl-k">return</span> e},<span class="pl-smi">o</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">i</span>,<span class="pl-smi">r</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">slice</span>(i,r);<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-c1">get</span>(e,t,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)[s[<span class="pl-smi">s</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]]<span class="pl-k">=</span>n,n},<span class="pl-smi">o</span>.<span class="pl-en">shuffle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;t<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;t<span class="pl-k">--</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">o</span>.<span class="pl-en">random</span>()<span class="pl-k">*</span>(t<span class="pl-k">+</span><span class="pl-c1">1</span>)),i<span class="pl-k">=</span>e[t];e[t]<span class="pl-k">=</span>e[n],e[n]<span class="pl-k">=</span>i}<span class="pl-k">return</span> e},<span class="pl-smi">o</span>.<span class="pl-en">choose</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> e[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">o</span>.<span class="pl-en">random</span>()<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>)]},<span class="pl-smi">o</span>.<span class="pl-en">isElement</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">HTMLElement</span><span class="pl-k">?</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">HTMLElement</span><span class="pl-k">:</span><span class="pl-k">!!</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">nodeName</span>)},<span class="pl-smi">o</span>.<span class="pl-en">isArray</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toString</span>.<span class="pl-c1">call</span>(e)},<span class="pl-smi">o</span>.<span class="pl-en">isFunction</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> e},<span class="pl-smi">o</span>.<span class="pl-en">isPlainObject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">return&quot;object&quot;==typeof e&amp;&amp;e.constructor===Object},o.isString=function(e){return&quot;[object String]&quot;===toString.call(e)},o.clamp=function(e,t,n){return e&lt;t?t:e&gt;n?n:e},o.sign=function(e){return e&lt;0?-1:1},o.now=function(){if(window.performance){if(window.performance.now)return window.performance.now();if(window.performance.webkitNow)return window.performance.webkitNow()}return new Date-o._nowStartTime},o.random=function(t,n){return t=&quot;undefined&quot;!=typeof t?t:0,n=&quot;undefined&quot;!=typeof n?n:1,t+e()*(n-t)};var e=function(){return o._seed=(9301*o._seed+49297)%233280,o._seed/233280};o.colorToNumber=function(e){return e=e.replace(&quot;#&quot;,&quot;&quot;),3==e.length&amp;&amp;(e=e.charAt(0)+e.charAt(0)+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)),parseInt(e,16)},o.logLevel=1,o.log=function(){console&amp;&amp;o.logLevel&gt;0&amp;&amp;o.logLevel&lt;=3&amp;&amp;console.log.apply(console,[&quot;matter-js:&quot;].concat(Array.prototype.slice.call(arguments)))},o.info=function(){console&amp;&amp;o.logLevel&gt;0&amp;&amp;o.logLevel&lt;=2&amp;&amp;console.info.apply(console,[&quot;matter-js:&quot;].concat(Array.prototype.slice.call(arguments)));</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">},<span class="pl-smi">o</span>.<span class="pl-en">warn</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-smi">logLevel</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-smi">logLevel</span><span class="pl-k">&lt;=</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-smi">warn</span>.<span class="pl-c1">apply</span>(<span class="pl-en">console</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>matter-js:<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">concat</span>(<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>)))},<span class="pl-smi">o</span>.<span class="pl-en">nextId</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-smi">_nextId</span><span class="pl-k">++</span>},<span class="pl-smi">o</span>.<span class="pl-en">indexOf</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">indexOf</span>)<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(t);<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(e[n]<span class="pl-k">===</span>t)<span class="pl-k">return</span> n;<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-smi">o</span>.<span class="pl-en">map</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">map</span>)<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-en">map</span>(t);<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span>[],o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">+=</span><span class="pl-c1">1</span>)<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(<span class="pl-en">t</span>(e[o]));<span class="pl-k">return</span> n},<span class="pl-smi">o</span>.<span class="pl-en">topologicalSort</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>[],n<span class="pl-k">=</span>[],i<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> r <span class="pl-k">in</span> e)n[r]<span class="pl-k">||</span>i[r]<span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-en">_topologicalSort</span>(r,n,i,e,t);<span class="pl-k">return</span> t},<span class="pl-smi">o</span>.<span class="pl-en">_topologicalSort</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">i</span>,<span class="pl-smi">r</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span>i[e]<span class="pl-k">||</span>[];n[e]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;a<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>s[a];n[l]<span class="pl-k">||</span>t[l]<span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-en">_topologicalSort</span>(l,t,n,i,r)}n[e]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,t[e]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(e)},<span class="pl-smi">o</span>.<span class="pl-en">chain</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;t<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">arguments</span>[t];<span class="pl-smi">n</span>.<span class="pl-smi">_chained</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(e,<span class="pl-smi">n</span>.<span class="pl-smi">_chained</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>(n)}<span class="pl-k">var</span> <span class="pl-en">o</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> t,n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Array</span>(<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>),o<span class="pl-k">=</span><span class="pl-c1">0</span>,i<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;o<span class="pl-k">&lt;</span>i;o<span class="pl-k">++</span>)n[o]<span class="pl-k">=</span><span class="pl-c1">arguments</span>[o];<span class="pl-k">for</span>(o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>e[o].<span class="pl-c1">apply</span>(t,n);<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> r<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span>r);</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> t};<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-smi">_chained</span><span class="pl-k">=</span>e,o},<span class="pl-smi">o</span>.<span class="pl-en">chainPathBefore</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-c1">set</span>(e,t,<span class="pl-smi">o</span>.<span class="pl-en">chain</span>(n,<span class="pl-smi">o</span>.<span class="pl-c1">get</span>(e,t)))},<span class="pl-smi">o</span>.<span class="pl-en">chainPathAfter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-c1">set</span>(e,t,<span class="pl-smi">o</span>.<span class="pl-en">chain</span>(<span class="pl-smi">o</span>.<span class="pl-c1">get</span>(e,t),n))}}()},{}],<span class="pl-c1">15</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/World<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Sleeping<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Resolver<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../render/Render<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Pairs<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Metrics<span class="pl-pds">&quot;</span></span>),<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Grid<span class="pl-pds">&quot;</span></span>)),d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Events<span class="pl-pds">&quot;</span></span>),u<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span>),p<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../constraint/Constraint<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Body<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){t<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">isElement</span>(e)<span class="pl-k">?</span>t<span class="pl-k">:</span>e,e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">isElement</span>(e)<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-c1">null</span>,t<span class="pl-k">=</span>t<span class="pl-k">||</span>{},(e<span class="pl-k">||</span><span class="pl-smi">t</span>.<span class="pl-smi">render</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Engine.create: engine.render is deprecated (see docs)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> n<span class="pl-k">=</span>{positionIterations<span class="pl-k">:</span><span class="pl-c1">6</span>,velocityIterations<span class="pl-k">:</span><span class="pl-c1">4</span>,constraintIterations<span class="pl-k">:</span><span class="pl-c1">2</span>,enableSleeping<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,events<span class="pl-k">:</span>[],plugin<span class="pl-k">:</span>{},timing<span class="pl-k">:</span>{timestamp<span class="pl-k">:</span><span class="pl-c1">0</span>,timeScale<span class="pl-k">:</span><span class="pl-c1">1</span>},broadphase<span class="pl-k">:</span>{controller<span class="pl-k">:</span>c}},o<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">extend</span>(n,t);<span class="pl-k">if</span>(e<span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-smi">render</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>{element<span class="pl-k">:</span>e,controller<span class="pl-k">:</span>a};<span class="pl-smi">o</span>.<span class="pl-smi">render</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">extend</span>(r,<span class="pl-smi">o</span>.<span class="pl-smi">render</span>)}<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-smi">render</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-smi">render</span>.<span class="pl-smi">controller</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-smi">render</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">render</span>.<span class="pl-smi">controller</span>.<span class="pl-en">create</span>(<span class="pl-smi">o</span>.<span class="pl-smi">render</span>)),</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">render</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-smi">render</span>.<span class="pl-smi">engine</span><span class="pl-k">=</span>o),<span class="pl-smi">o</span>.<span class="pl-smi">world</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">world</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-en">create</span>(<span class="pl-smi">o</span>.<span class="pl-smi">world</span>),<span class="pl-smi">o</span>.<span class="pl-smi">pairs</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">create</span>(),<span class="pl-smi">o</span>.<span class="pl-smi">broadphase</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">broadphase</span>.<span class="pl-smi">controller</span>.<span class="pl-en">create</span>(<span class="pl-smi">o</span>.<span class="pl-smi">broadphase</span>),<span class="pl-smi">o</span>.<span class="pl-smi">metrics</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">metrics</span><span class="pl-k">||</span>{extended<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},o},<span class="pl-smi">o</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){t<span class="pl-k">=</span>t<span class="pl-k">||</span><span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-c1">60</span>,n<span class="pl-k">=</span>n<span class="pl-k">||</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> i,a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">world</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">timing</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">broadphase</span>,m<span class="pl-k">=</span>[];<span class="pl-smi">c</span>.<span class="pl-smi">timestamp</span><span class="pl-k">+=</span>t<span class="pl-k">*</span><span class="pl-smi">c</span>.<span class="pl-smi">timeScale</span>;<span class="pl-k">var</span> v<span class="pl-k">=</span>{timestamp<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">timestamp</span>};<span class="pl-smi">d</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeUpdate<span class="pl-pds">&quot;</span></span>,v);<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">allBodies</span>(a),g<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-en">allConstraints</span>(a);<span class="pl-k">for</span>(<span class="pl-smi">e</span>.<span class="pl-smi">enableSleeping</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">update</span>(y,<span class="pl-smi">c</span>.<span class="pl-smi">timeScale</span>),<span class="pl-smi">o</span>.<span class="pl-en">_bodiesApplyGravity</span>(y,<span class="pl-smi">a</span>.<span class="pl-smi">gravity</span>),<span class="pl-smi">o</span>.<span class="pl-en">_bodiesUpdate</span>(y,t,<span class="pl-smi">c</span>.<span class="pl-smi">timeScale</span>,n,<span class="pl-smi">a</span>.<span class="pl-smi">bounds</span>),<span class="pl-smi">p</span>.<span class="pl-en">preSolveAll</span>(y),i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">constraintIterations</span>;i<span class="pl-k">++</span>)<span class="pl-smi">p</span>.<span class="pl-en">solveAll</span>(g,<span class="pl-smi">c</span>.<span class="pl-smi">timeScale</span>);<span class="pl-smi">p</span>.<span class="pl-en">postSolveAll</span>(y),<span class="pl-smi">f</span>.<span class="pl-smi">controller</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isModified</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">controller</span>.<span class="pl-c1">clear</span>(f),<span class="pl-smi">f</span>.<span class="pl-smi">controller</span>.<span class="pl-en">update</span>(f,y,e,<span class="pl-smi">a</span>.<span class="pl-smi">isModified</span>),m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pairsList</span>)<span class="pl-k">:</span>m<span class="pl-k">=</span>y,<span class="pl-smi">a</span>.<span class="pl-smi">isModified</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-en">setModified</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">detector</span>(m,e),h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pairs</span>,b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">timestamp</span>;<span class="pl-k">for</span>(<span class="pl-smi">l</span>.<span class="pl-en">update</span>(h,x,b),<span class="pl-smi">l</span>.<span class="pl-en">removeOld</span>(h,b),<span class="pl-smi">e</span>.<span class="pl-smi">enableSleeping</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">afterCollisions</span>(<span class="pl-smi">h</span>.<span class="pl-smi">list</span>,<span class="pl-smi">c</span>.<span class="pl-smi">timeScale</span>),<span class="pl-smi">h</span>.<span class="pl-smi">collisionStart</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>collisionStart<span class="pl-pds">&quot;</span></span>,{pairs<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">collisionStart</span>}),<span class="pl-smi">s</span>.<span class="pl-en">preSolvePosition</span>(<span class="pl-smi">h</span>.<span class="pl-smi">list</span>),</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">i=0;i&lt;e.positionIterations;i++)s.solvePosition(h.list,c.timeScale);for(s.postSolvePosition(y),p.preSolveAll(y),i=0;i&lt;e.constraintIterations;i++)p.solveAll(g,c.timeScale);for(p.postSolveAll(y),s.preSolveVelocity(h.list),i=0;i&lt;e.velocityIterations;i++)s.solveVelocity(h.list,c.timeScale);return h.collisionActive.length&gt;0&amp;&amp;d.trigger(e,&quot;collisionActive&quot;,{pairs:h.collisionActive}),h.collisionEnd.length&gt;0&amp;&amp;d.trigger(e,&quot;collisionEnd&quot;,{pairs:h.collisionEnd}),o._bodiesClearForces(y),d.trigger(e,&quot;afterUpdate&quot;,v),e},o.merge=function(e,t){if(f.extend(e,t),t.world){e.world=t.world,o.clear(e);for(var n=u.allBodies(e.world),i=0;i&lt;n.length;i++){var s=n[i];r.set(s,!1),s.id=f.nextId()}}},o.clear=function(e){var t=e.world;l.clear(e.pairs);var n=e.broadphase;if(n.controller){var o=u.allBodies(t);n.controller.clear(n),n.controller.update(n,o,e,!0)}},o._bodiesClearForces=function(e){for(var t=0;t&lt;e.length;t++){var n=e[t];n.force.x=0,n.force.y=0,n.torque=0}},o._bodiesApplyGravity=function(e,t){var n=&quot;undefined&quot;!=typeof t.scale?t.scale:.001;</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>((<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span>n)<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>e[o];<span class="pl-smi">i</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">||</span>(<span class="pl-smi">i</span>.<span class="pl-smi">force</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">i</span>.<span class="pl-smi">mass</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>n,<span class="pl-smi">i</span>.<span class="pl-smi">force</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">i</span>.<span class="pl-smi">mass</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>n)}},<span class="pl-smi">o</span>.<span class="pl-en">_bodiesUpdate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">i</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span>e[r];<span class="pl-smi">s</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-smi">s</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-en">update</span>(s,t,n,o)}}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Body<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../body/World<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Grid<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">6</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Pairs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">8</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Resolver<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">10</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../constraint/Constraint<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">12</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../render/Render<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">31</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Events<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">16</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Metrics<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">18</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Sleeping<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">22</span>}],<span class="pl-c1">16</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">on</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> o,i<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)o<span class="pl-k">=</span>i[r],<span class="pl-smi">e</span>.<span class="pl-smi">events</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">events</span><span class="pl-k">||</span>{},<span class="pl-smi">e</span>.<span class="pl-smi">events</span>[o]<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">events</span>[o]<span class="pl-k">||</span>[],<span class="pl-smi">e</span>.<span class="pl-smi">events</span>[o].<span class="pl-c1">push</span>(n);<span class="pl-k">return</span> n},<span class="pl-smi">o</span>.<span class="pl-en">off</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>t)<span class="pl-k">return</span> <span class="pl-k">void</span>(<span class="pl-smi">e</span>.<span class="pl-smi">events</span><span class="pl-k">=</span>{});<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> t<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span>t,t<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">keys</span>(<span class="pl-smi">e</span>.<span class="pl-smi">events</span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>));<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">events</span>[o[r]],a<span class="pl-k">=</span>[];<span class="pl-k">if</span>(n<span class="pl-k">&amp;&amp;</span>s)<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>)s[l]<span class="pl-k">!==</span>n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(s[l]);<span class="pl-smi">e</span>.<span class="pl-smi">events</span>[o[r]]<span class="pl-k">=</span>a}},<span class="pl-smi">o</span>.<span class="pl-en">trigger</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> o,r,s,a;<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">events</span>){n<span class="pl-k">||</span>(n<span class="pl-k">=</span>{}),o<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(r<span class="pl-k">=</span>o[l],s<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">events</span>[r]){a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">clone</span>(n,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>r,<span class="pl-smi">a</span>.<span class="pl-c1">source</span><span class="pl-k">=</span>e;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)s[c].<span class="pl-c1">apply</span>(e,[a])}}}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>}],<span class="pl-c1">17</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Plugin<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>matter-js<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">version</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0.14.1<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">uses</span><span class="pl-k">=</span>[],<span class="pl-smi">o</span>.<span class="pl-smi">used</span><span class="pl-k">=</span>[],<span class="pl-smi">o</span>.<span class="pl-en">use</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">i</span>.<span class="pl-en">use</span>(o,<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>))},<span class="pl-smi">o</span>.<span class="pl-en">before</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>Matter<span class="pl-c1">.</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">r</span>.<span class="pl-en">chainPathBefore</span>(o,e,t)},<span class="pl-smi">o</span>.<span class="pl-en">after</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>Matter<span class="pl-c1">.</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">r</span>.<span class="pl-en">chainPathAfter</span>(o,e,t)}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Plugin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">20</span>}],<span class="pl-c1">18</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){},{<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>}],<span class="pl-c1">19</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>{};<span class="pl-k">return</span> e<span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-en">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Mouse.create: element was undefined, defaulting to document.body<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>warn<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">t</span>.<span class="pl-smi">element</span><span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">document</span>.<span class="pl-c1">body</span>,<span class="pl-smi">t</span>.<span class="pl-smi">absolute</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-smi">t</span>.<span class="pl-smi">position</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-smi">t</span>.<span class="pl-smi">mousedownPosition</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-smi">t</span>.<span class="pl-smi">mouseupPosition</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-smi">t</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-smi">t</span>.<span class="pl-smi">scale</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">1</span>,y<span class="pl-k">:</span><span class="pl-c1">1</span>},<span class="pl-smi">t</span>.<span class="pl-smi">wheelDelta</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">t</span>.<span class="pl-smi">button</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">t</span>.<span class="pl-smi">pixelRatio</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">element</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data-pixel-ratio<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">1</span>,<span class="pl-smi">t</span>.<span class="pl-smi">sourceEvents</span><span class="pl-k">=</span>{mousemove<span class="pl-k">:</span><span class="pl-c1">null</span>,mousedown<span class="pl-k">:</span><span class="pl-c1">null</span>,mouseup<span class="pl-k">:</span><span class="pl-c1">null</span>,mousewheel<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-smi">t</span>.<span class="pl-en">mousemove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_getRelativeMousePosition</span>(e,<span class="pl-smi">t</span>.<span class="pl-smi">element</span>,<span class="pl-smi">t</span>.<span class="pl-smi">pixelRatio</span>),i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">changedTouches</span>;i<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">t</span>.<span class="pl-smi">button</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-c1">preventDefault</span>()),<span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">x</span>,<span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">y</span>,<span class="pl-smi">t</span>.<span class="pl-smi">sourceEvents</span>.<span class="pl-smi">mousemove</span><span class="pl-k">=</span>e},<span class="pl-smi">t</span>.<span class="pl-en">mousedown</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_getRelativeMousePosition</span>(e,<span class="pl-smi">t</span>.<span class="pl-smi">element</span>,<span class="pl-smi">t</span>.<span class="pl-smi">pixelRatio</span>),i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">changedTouches</span>;i<span class="pl-k">?</span>(<span class="pl-smi">t</span>.<span class="pl-smi">button</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-c1">preventDefault</span>())<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-smi">button</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">button</span>,<span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">x</span>,<span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">absolute</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">y</span>,<span class="pl-smi">t</span>.<span class="pl-smi">mousedownPosition</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">t</span>.<span class="pl-smi">mousedownPosition</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>,<span class="pl-smi">t</span>.<span class="pl-smi">sourceEvents</span>.<span class="pl-smi">mousedown</span><span class="pl-k">=</span>e},<span class="pl-smi">t</span>.<span class="pl-en">mouseup</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">_getRelativeMousePosition</span>(e,<span class="pl-smi">t</span>.<span class="pl-smi">element</span>,<span class="pl-smi">t</span>.<span class="pl-smi">pixelRatio</span>),i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">changedTouches</span>;i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">preventDefault</span>(),</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">t.button=-1,t.absolute.x=n.x,t.absolute.y=n.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mouseupPosition.x=t.position.x,t.mouseupPosition.y=t.position.y,t.sourceEvents.mouseup=e},t.mousewheel=function(e){t.wheelDelta=Math.max(-1,Math.min(1,e.wheelDelta||-e.detail)),e.preventDefault()},o.setElement(t,t.element),t},o.setElement=function(e,t){e.element=t,t.addEventListener(&quot;mousemove&quot;,e.mousemove),t.addEventListener(&quot;mousedown&quot;,e.mousedown),t.addEventListener(&quot;mouseup&quot;,e.mouseup),t.addEventListener(&quot;mousewheel&quot;,e.mousewheel),t.addEventListener(&quot;DOMMouseScroll&quot;,e.mousewheel),t.addEventListener(&quot;touchmove&quot;,e.mousemove),t.addEventListener(&quot;touchstart&quot;,e.mousedown),t.addEventListener(&quot;touchend&quot;,e.mouseup)},o.clearSourceEvents=function(e){e.sourceEvents.mousemove=null,e.sourceEvents.mousedown=null,e.sourceEvents.mouseup=null,e.sourceEvents.mousewheel=null,e.wheelDelta=0},o.setOffset=function(e,t){e.offset.x=t.x,e.offset.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">e.position.y=e.absolute.y*e.scale.y+e.offset.y},o.setScale=function(e,t){e.scale.x=t.x,e.scale.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},o._getRelativeMousePosition=function(e,t,n){var o,i,r=t.getBoundingClientRect(),s=document.documentElement||document.body.parentNode||document.body,a=void 0!==window.pageXOffset?window.pageXOffset:s.scrollLeft,l=void 0!==window.pageYOffset?window.pageYOffset:s.scrollTop,c=e.changedTouches;return c?(o=c[0].pageX-r.left-a,i=c[0].pageY-r.top-l):(o=e.pageX-r.left-a,i=e.pageY-r.top-l),{x:o/(t.clientWidth/(t.width||t.clientWidth)*n),y:i/(t.clientHeight/(t.height||t.clientHeight)*n)}}}()},{&quot;../core/Common&quot;:14}],20:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;./Common&quot;);!function(){o._registry={},o.register=function(e){if(o.isPlugin(e)||i.warn(&quot;Plugin.register:&quot;,o.toString(e),&quot;does not implement all required fields.&quot;),e.name in o._registry){var t=o._registry[e.name],n=o.versionParse(e.version).number,r=o.versionParse(t.version).number;</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">&gt;</span>r<span class="pl-k">?</span>(<span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.register:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(t),<span class="pl-s"><span class="pl-pds">&quot;</span>was upgraded to<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(e)),<span class="pl-smi">o</span>.<span class="pl-smi">_registry</span>[<span class="pl-smi">e</span>.<span class="pl-c1">name</span>]<span class="pl-k">=</span>e)<span class="pl-k">:</span>n<span class="pl-k">&lt;</span>r<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.register:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(t),<span class="pl-s"><span class="pl-pds">&quot;</span>can not be downgraded to<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(e))<span class="pl-k">:</span>e<span class="pl-k">!==</span>t<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.register:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(e),<span class="pl-s"><span class="pl-pds">&quot;</span>is already registered to different plugin object<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span> <span class="pl-smi">o</span>.<span class="pl-smi">_registry</span>[<span class="pl-smi">e</span>.<span class="pl-c1">name</span>]<span class="pl-k">=</span>e;<span class="pl-k">return</span> e},<span class="pl-smi">o</span>.<span class="pl-en">resolve</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-smi">_registry</span>[<span class="pl-smi">o</span>.<span class="pl-en">dependencyParse</span>(e).<span class="pl-c1">name</span>]},<span class="pl-smi">o</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> e<span class="pl-k">?</span>e<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>@<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">e</span>.<span class="pl-c1">version</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">range</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0.0.0<span class="pl-pds">&quot;</span></span>)},<span class="pl-smi">o</span>.<span class="pl-en">isPlugin</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">version</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">install</span>},<span class="pl-smi">o</span>.<span class="pl-en">isUsed</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">used</span>.<span class="pl-c1">indexOf</span>(t)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-smi">o</span>.<span class="pl-en">isFor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">for</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">dependencyParse</span>(<span class="pl-smi">e</span>.<span class="pl-smi">for</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">for</span><span class="pl-k">||</span><span class="pl-smi">t</span>.<span class="pl-c1">name</span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">versionSatisfies</span>(<span class="pl-smi">t</span>.<span class="pl-c1">version</span>,<span class="pl-smi">n</span>.<span class="pl-smi">range</span>)},<span class="pl-smi">o</span>.<span class="pl-en">use</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">uses</span><span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">uses</span><span class="pl-k">||</span>[]).<span class="pl-c1">concat</span>(t<span class="pl-k">||</span>[]),<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">uses</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.use:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(e),<span class="pl-s"><span class="pl-pds">&quot;</span>does not specify any dependencies to install.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">dependencies</span>(e),r<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">topologicalSort</span>(n),s<span class="pl-k">=</span>[],a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;a<span class="pl-k">+=</span><span class="pl-c1">1</span>)<span class="pl-k">if</span>(r[a]<span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-c1">name</span>){</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">resolve</span>(r[a]);l<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">isUsed</span>(e,<span class="pl-smi">l</span>.<span class="pl-c1">name</span>)<span class="pl-k">||</span>(<span class="pl-smi">o</span>.<span class="pl-en">isFor</span>(l,e)<span class="pl-k">||</span>(<span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.use:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(l),<span class="pl-s"><span class="pl-pds">&quot;</span>is for<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">l</span>.<span class="pl-smi">for</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>but installed on<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">l</span>.<span class="pl-smi">_warned</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">l</span>.<span class="pl-smi">install</span><span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-en">install</span>(e)<span class="pl-k">:</span>(<span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.use:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(l),<span class="pl-s"><span class="pl-pds">&quot;</span>does not specify an install function.<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">l</span>.<span class="pl-smi">_warned</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">l</span>.<span class="pl-smi">_warned</span><span class="pl-k">?</span>(<span class="pl-smi">s</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>🔶 <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(l)),<span class="pl-k">delete</span> <span class="pl-smi">l</span>.<span class="pl-smi">_warned</span>)<span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>✅ <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(l)),<span class="pl-smi">e</span>.<span class="pl-smi">used</span>.<span class="pl-c1">push</span>(<span class="pl-smi">l</span>.<span class="pl-c1">name</span>))<span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>❌ <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>r[a])}<span class="pl-smi">s</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">info</span>(<span class="pl-smi">s</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>  <span class="pl-pds">&quot;</span></span>))},<span class="pl-smi">o</span>.<span class="pl-en">dependencies</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">dependencyParse</span>(e),r<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">name</span>;<span class="pl-k">if</span>(t<span class="pl-k">=</span>t<span class="pl-k">||</span>{},<span class="pl-k">!</span>(r <span class="pl-k">in</span> t)){e<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">resolve</span>(e)<span class="pl-k">||</span>e,t[r]<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">map</span>(<span class="pl-smi">e</span>.<span class="pl-smi">uses</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">t</span>){<span class="pl-smi">o</span>.<span class="pl-en">isPlugin</span>(t)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">register</span>(t);<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">dependencyParse</span>(t),s<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">resolve</span>(t);<span class="pl-k">return</span> s<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">o</span>.<span class="pl-en">versionSatisfies</span>(<span class="pl-smi">s</span>.<span class="pl-c1">version</span>,<span class="pl-smi">r</span>.<span class="pl-smi">range</span>)<span class="pl-k">?</span>(<span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.dependencies:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(s),<span class="pl-s"><span class="pl-pds">&quot;</span>does not satisfy<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(r),<span class="pl-s"><span class="pl-pds">&quot;</span>used by<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(n)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">s</span>.<span class="pl-smi">_warned</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">_warned</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>s<span class="pl-k">||</span>(<span class="pl-smi">i</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Plugin.dependencies:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(t),<span class="pl-s"><span class="pl-pds">&quot;</span>used by<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">toString</span>(n),<span class="pl-s"><span class="pl-pds">&quot;</span>could not be resolved.<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">e</span>.<span class="pl-smi">_warned</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">r</span>.<span class="pl-c1">name</span>});<span class="pl-k">for</span>(<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span>t[r].<span class="pl-c1">length</span>;s<span class="pl-k">+=</span><span class="pl-c1">1</span>)<span class="pl-smi">o</span>.<span class="pl-en">dependencies</span>(t[r][s],t);</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">return t}},o.dependencyParse=function(e){if(i.isString(e)){var t=/^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?))?$/;return t.test(e)||i.warn(&quot;Plugin.dependencyParse:&quot;,e,&quot;is not a valid dependency string.&quot;),{name:e.split(&quot;@&quot;)[0],range:e.split(&quot;@&quot;)[1]||&quot;*&quot;}}return{name:e.name,range:e.range||e.version}},o.versionParse=function(e){var t=/^\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?$/;t.test(e)||i.warn(&quot;Plugin.versionParse:&quot;,e,&quot;is not a valid version or range.&quot;);var n=e.split(&quot;-&quot;);e=n[0];var o=isNaN(Number(e[0])),r=o?e.substr(1):e,s=i.map(r.split(&quot;.&quot;),function(e){return Number(e)});return{isRange:o,version:r,range:e,operator:o?e[0]:&quot;&quot;,parts:s,prerelease:n[1],number:1e8*s[0]+1e4*s[1]+s[2]}},o.versionSatisfies=function(e,t){t=t||&quot;*&quot;;var n=o.versionParse(t),i=n.parts,r=o.versionParse(e),s=r.parts;if(n.isRange){if(&quot;*&quot;===n.operator||&quot;*&quot;===e)return!0;if(&quot;~&quot;===n.operator)return s[0]===i[0]&amp;&amp;s[1]===i[1]&amp;&amp;s[2]&gt;=i[2];if(&quot;^&quot;===n.operator)return i[0]&gt;0?s[0]===i[0]&amp;&amp;r.number&gt;=n.number:i[1]&gt;0?s[1]===i[1]&amp;&amp;s[2]&gt;=i[2]:s[2]===i[2];</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> e<span class="pl-k">===</span>t<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>}],<span class="pl-c1">21</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Events<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Engine<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> e,t;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msRequestAnimationFrame</span>,t<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msCancelAnimationFrame</span>),<span class="pl-k">!</span>e){<span class="pl-k">var</span> n;<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){n<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-en">e</span>(<span class="pl-smi">s</span>.<span class="pl-en">now</span>())},<span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-c1">60</span>)},<span class="pl-en">t</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">clearTimeout</span>(n)}}<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>{fps<span class="pl-k">:</span><span class="pl-c1">60</span>,correction<span class="pl-k">:</span><span class="pl-c1">1</span>,deltaSampleSize<span class="pl-k">:</span><span class="pl-c1">60</span>,counterTimestamp<span class="pl-k">:</span><span class="pl-c1">0</span>,frameCounter<span class="pl-k">:</span><span class="pl-c1">0</span>,deltaHistory<span class="pl-k">:</span>[],timePrev<span class="pl-k">:</span><span class="pl-c1">null</span>,timeScalePrev<span class="pl-k">:</span><span class="pl-c1">1</span>,frameRequestId<span class="pl-k">:</span><span class="pl-c1">null</span>,isFixed<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},n<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">extend</span>(t,e);<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-smi">delta</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">delta</span><span class="pl-k">||</span><span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-smi">n</span>.<span class="pl-smi">fps</span>,<span class="pl-smi">n</span>.<span class="pl-smi">deltaMin</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">deltaMin</span><span class="pl-k">||</span><span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-smi">n</span>.<span class="pl-smi">fps</span>,<span class="pl-smi">n</span>.<span class="pl-smi">deltaMax</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">deltaMax</span><span class="pl-k">||</span><span class="pl-c1">1e3</span><span class="pl-k">/</span>(<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">n</span>.<span class="pl-smi">fps</span>),<span class="pl-smi">n</span>.<span class="pl-smi">fps</span><span class="pl-k">=</span><span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-smi">n</span>.<span class="pl-smi">delta</span>,n},<span class="pl-smi">o</span>.<span class="pl-en">run</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-smi">t</span>.<span class="pl-smi">positionIterations</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span>t,t<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">create</span>()),<span class="pl-k">function</span> <span class="pl-en">i</span>(<span class="pl-smi">r</span>){<span class="pl-smi">t</span>.<span class="pl-smi">frameRequestId</span><span class="pl-k">=</span><span class="pl-en">e</span>(i),</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">r&amp;&amp;t.enabled&amp;&amp;o.tick(t,n,r)}(),t},o.tick=function(e,t,n){var o,s=t.timing,a=1,l={timestamp:s.timestamp};i.trigger(e,&quot;beforeTick&quot;,l),i.trigger(t,&quot;beforeTick&quot;,l),e.isFixed?o=e.delta:(o=n-e.timePrev||e.delta,e.timePrev=n,e.deltaHistory.push(o),e.deltaHistory=e.deltaHistory.slice(-e.deltaSampleSize),o=Math.min.apply(null,e.deltaHistory),o=o&lt;e.deltaMin?e.deltaMin:o,o=o&gt;e.deltaMax?e.deltaMax:o,a=o/e.delta,e.delta=o),0!==e.timeScalePrev&amp;&amp;(a*=s.timeScale/e.timeScalePrev),0===s.timeScale&amp;&amp;(a=0),e.timeScalePrev=s.timeScale,e.correction=a,e.frameCounter+=1,n-e.counterTimestamp&gt;=1e3&amp;&amp;(e.fps=e.frameCounter*((n-e.counterTimestamp)/1e3),e.counterTimestamp=n,e.frameCounter=0),i.trigger(e,&quot;tick&quot;,l),i.trigger(t,&quot;tick&quot;,l),t.world.isModified&amp;&amp;t.render&amp;&amp;t.render.controller&amp;&amp;t.render.controller.clear&amp;&amp;t.render.controller.clear(t.render),i.trigger(e,&quot;beforeUpdate&quot;,l),r.update(t,o,a),i.trigger(e,&quot;afterUpdate&quot;,l),t.render&amp;&amp;t.render.controller&amp;&amp;(i.trigger(e,&quot;beforeRender&quot;,l),i.trigger(t,&quot;beforeRender&quot;,l),t.render.controller.world(t.render),</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">i.trigger(e,&quot;afterRender&quot;,l),i.trigger(t,&quot;afterRender&quot;,l)),i.trigger(e,&quot;afterTick&quot;,l),i.trigger(t,&quot;afterTick&quot;,l)},o.stop=function(e){t(e.frameRequestId)},o.start=function(e,t){o.run(e,t)}}()},{&quot;./Common&quot;:14,&quot;./Engine&quot;:15,&quot;./Events&quot;:16}],22:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;./Events&quot;);!function(){o._motionWakeThreshold=.18,o._motionSleepThreshold=.08,o._minBias=.9,o.update=function(e,t){for(var n=t*t*t,i=0;i&lt;e.length;i++){var r=e[i],s=r.speed*r.speed+r.angularSpeed*r.angularSpeed;if(0===r.force.x&amp;&amp;0===r.force.y){var a=Math.min(r.motion,s),l=Math.max(r.motion,s);r.motion=o._minBias*a+(1-o._minBias)*l,r.sleepThreshold&gt;0&amp;&amp;r.motion&lt;o._motionSleepThreshold*n?(r.sleepCounter+=1,r.sleepCounter&gt;=r.sleepThreshold&amp;&amp;o.set(r,!0)):r.sleepCounter&gt;0&amp;&amp;(r.sleepCounter-=1)}else o.set(r,!1)}},o.afterCollisions=function(e,t){for(var n=t*t*t,i=0;i&lt;e.length;i++){var r=e[i];if(r.isActive){var s=r.collision,a=s.bodyA.parent,l=s.bodyB.parent;if(!(a.isSleeping&amp;&amp;l.isSleeping||a.isStatic||l.isStatic)&amp;&amp;(a.isSleeping||l.isSleeping)){</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">isStatic</span><span class="pl-k">?</span>a<span class="pl-k">:</span>l,d<span class="pl-k">=</span>c<span class="pl-k">===</span>a<span class="pl-k">?</span>l<span class="pl-k">:</span>a;<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">motion</span><span class="pl-k">&gt;</span><span class="pl-smi">o</span>.<span class="pl-smi">_motionWakeThreshold</span><span class="pl-k">*</span>n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">set</span>(c,<span class="pl-k">!</span><span class="pl-c1">1</span>)}}}},<span class="pl-smi">o</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isSleeping</span>;t<span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">sleepCounter</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">sleepThreshold</span>,<span class="pl-smi">e</span>.<span class="pl-smi">positionImpulse</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">positionImpulse</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-smi">anglePrev</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">e</span>.<span class="pl-smi">speed</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">angularSpeed</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">motion</span><span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>sleepStart<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isSleeping</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">e</span>.<span class="pl-smi">sleepCounter</span><span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>sleepEnd<span class="pl-pds">&quot;</span></span>))}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>./Events<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">16</span>}],<span class="pl-c1">23</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){(<span class="pl-k">function</span>(<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>),s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Body<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">?</span><span class="pl-c1">window</span>.<span class="pl-smi">decomp</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> n<span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-smi">decomp</span><span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">rectangle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">a</span>){a<span class="pl-k">=</span>a<span class="pl-k">||</span>{};<span class="pl-k">var</span> l<span class="pl-k">=</span>{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Rectangle Body<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span>{x<span class="pl-k">:</span>e,y<span class="pl-k">:</span>t},vertices<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-en">fromPath</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L 0 0 L <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> 0 L <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>o<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> L 0 <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>o)};<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chamfer</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chamfer</span>;<span class="pl-smi">l</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">chamfer</span>(<span class="pl-smi">l</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">c</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">c</span>.<span class="pl-smi">quality</span>,<span class="pl-smi">c</span>.<span class="pl-smi">qualityMin</span>,<span class="pl-smi">c</span>.<span class="pl-smi">qualityMax</span>),</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">delete a.chamfer}return s.create(r.extend({},l,a))},o.trapezoid=function(e,t,n,o,a,l){l=l||{},a*=.5;var c,d=(1-2*a)*n,u=n*a,p=u+d,f=p+u;c=a&lt;.5?&quot;L 0 0 L &quot;+u+&quot; &quot;+-o+&quot; L &quot;+p+&quot; &quot;+-o+&quot; L &quot;+f+&quot; 0&quot;:&quot;L 0 0 L &quot;+p+&quot; &quot;+-o+&quot; L &quot;+f+&quot; 0&quot;;var m={label:&quot;Trapezoid Body&quot;,position:{x:e,y:t},vertices:i.fromPath(c)};if(l.chamfer){var v=l.chamfer;m.vertices=i.chamfer(m.vertices,v.radius,v.quality,v.qualityMin,v.qualityMax),delete l.chamfer}return s.create(r.extend({},m,l))},o.circle=function(e,t,n,i,s){i=i||{};var a={label:&quot;Circle Body&quot;,circleRadius:n};s=s||25;var l=Math.ceil(Math.max(10,Math.min(s,n)));return l%2===1&amp;&amp;(l+=1),o.polygon(e,t,l,n,r.extend({},a,i))},o.polygon=function(e,t,n,a,l){if(l=l||{},n&lt;3)return o.circle(e,t,a,l);for(var c=2*Math.PI/n,d=&quot;&quot;,u=.5*c,p=0;p&lt;n;p+=1){var f=u+p*c,m=Math.cos(f)*a,v=Math.sin(f)*a;d+=&quot;L &quot;+m.toFixed(3)+&quot; &quot;+v.toFixed(3)+&quot; &quot;}var y={label:&quot;Polygon Body&quot;,position:{x:e,y:t},vertices:i.fromPath(d)};if(l.chamfer){var g=l.chamfer;y.vertices=i.chamfer(y.vertices,g.radius,g.quality,g.qualityMin,g.qualityMax),</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-k">delete</span> <span class="pl-smi">l</span>.<span class="pl-smi">chamfer</span>}<span class="pl-k">return</span> <span class="pl-smi">s</span>.<span class="pl-en">create</span>(<span class="pl-smi">r</span>.<span class="pl-en">extend</span>({},y,l))},<span class="pl-smi">o</span>.<span class="pl-en">fromVertices</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">d</span>,<span class="pl-smi">u</span>,<span class="pl-smi">p</span>){<span class="pl-k">var</span> f,m,v,y,g,x,h,b,w;<span class="pl-k">for</span>(o<span class="pl-k">=</span>o<span class="pl-k">||</span>{},m<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>d,u<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> u<span class="pl-k">?</span>u<span class="pl-k">:</span><span class="pl-c1">.01</span>,p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> p<span class="pl-k">?</span>p<span class="pl-k">:</span><span class="pl-c1">10</span>,c<span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">r</span>.<span class="pl-en">isArray</span>(n[<span class="pl-c1">0</span>])<span class="pl-k">||</span>(n<span class="pl-k">=</span>[n]),b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;b<span class="pl-k">+=</span><span class="pl-c1">1</span>)<span class="pl-k">if</span>(y<span class="pl-k">=</span>n[b],v<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">isConvex</span>(y),v<span class="pl-k">||!</span>c)y<span class="pl-k">=</span>v<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-en">clockwiseSort</span>(y)<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-en">hull</span>(y),<span class="pl-smi">m</span>.<span class="pl-c1">push</span>({position<span class="pl-k">:</span>{x<span class="pl-k">:</span>e,y<span class="pl-k">:</span>t},vertices<span class="pl-k">:</span>y});<span class="pl-k">else</span>{<span class="pl-k">var</span> <span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span>[<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>]});<span class="pl-smi">c</span>.<span class="pl-en">makeCCW</span>(<span class="pl-c1">S</span>),u<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">removeCollinearPoints</span>(<span class="pl-c1">S</span>,u);<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">quickDecomp</span>(<span class="pl-c1">S</span>);<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-c1">C</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">C</span>[g],<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span>{x<span class="pl-k">:</span>e[<span class="pl-c1">0</span>],y<span class="pl-k">:</span>e[<span class="pl-c1">1</span>]}});p<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">area</span>(<span class="pl-c1">P</span>)<span class="pl-k">&lt;</span>p<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">push</span>({position<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-en">centre</span>(<span class="pl-c1">P</span>),vertices<span class="pl-k">:</span><span class="pl-c1">P</span>})}}<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)m[g]<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">create</span>(<span class="pl-smi">r</span>.<span class="pl-en">extend</span>(m[g],o));<span class="pl-k">if</span>(d){<span class="pl-k">var</span> <span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">M</span><span class="pl-k">=</span>m[g];<span class="pl-k">for</span>(x<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">1</span>;x<span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;x<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>m[x];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">overlaps</span>(<span class="pl-c1">M</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">k</span>.<span class="pl-smi">bounds</span>)){<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-smi">vertices</span>,_<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">vertices</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-c1">M</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)<span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-c1">0</span>;w<span class="pl-k">&lt;</span><span class="pl-smi">k</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;w<span class="pl-k">++</span>){</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">var T=l.magnitudeSquared(l.sub(I[(h+1)%I.length],_[w])),R=l.magnitudeSquared(l.sub(I[h],_[(w+1)%_.length]));T&lt;B&amp;&amp;R&lt;B&amp;&amp;(I[h].isInternal=!0,_[w].isInternal=!0)}}}}}return m.length&gt;1?(f=s.create(r.extend({parts:m.slice(0)},o)),s.setPosition(f,{x:e,y:t}),f):m[0]}}()}).call(this,&quot;undefined&quot;!=typeof global?global:&quot;undefined&quot;!=typeof self?self:&quot;undefined&quot;!=typeof window?window:{})},{&quot;../body/Body&quot;:1,&quot;../core/Common&quot;:14,&quot;../geometry/Bounds&quot;:26,&quot;../geometry/Vector&quot;:28,&quot;../geometry/Vertices&quot;:29}],24:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;../body/Composite&quot;),r=e(&quot;../constraint/Constraint&quot;),s=e(&quot;../core/Common&quot;),a=e(&quot;../body/Body&quot;),l=e(&quot;./Bodies&quot;);!function(){o.stack=function(e,t,n,o,r,s,l){for(var c,d=i.create({label:&quot;Stack&quot;}),u=e,p=t,f=0,m=0;m&lt;o;m++){for(var v=0,y=0;y&lt;n;y++){var g=l(u,p,y,m,c,f);if(g){var x=g.bounds.max.y-g.bounds.min.y,h=g.bounds.max.x-g.bounds.min.x;x&gt;v&amp;&amp;(v=x),a.translate(g,{x:.5*h,y:.5*x}),u=g.bounds.max.x+r,i.addBody(d,g),c=g,f+=1}else u+=r}p+=v+s,u=e}return d},o.chain=function(e,t,n,o,a,l){</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">bodies</span>,d<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>c[d<span class="pl-k">-</span><span class="pl-c1">1</span>],p<span class="pl-k">=</span>c[d],f<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,m<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">u</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,v<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">p</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,y<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">p</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,g<span class="pl-k">=</span>{bodyA<span class="pl-k">:</span>u,pointA<span class="pl-k">:</span>{x<span class="pl-k">:</span>m<span class="pl-k">*</span>t,y<span class="pl-k">:</span>f<span class="pl-k">*</span>n},bodyB<span class="pl-k">:</span>p,pointB<span class="pl-k">:</span>{x<span class="pl-k">:</span>y<span class="pl-k">*</span>o,y<span class="pl-k">:</span>v<span class="pl-k">*</span>a}},x<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">extend</span>(g,l);<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(e,<span class="pl-smi">r</span>.<span class="pl-en">create</span>(x))}<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">label</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> Chain<span class="pl-pds">&quot;</span></span>,e},<span class="pl-smi">o</span>.<span class="pl-en">mesh</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> l,c,d,u,p,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">bodies</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>n;l<span class="pl-k">++</span>){<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">1</span>;c<span class="pl-k">&lt;</span>t;c<span class="pl-k">++</span>)d<span class="pl-k">=</span>f[c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span>l<span class="pl-k">*</span>t],u<span class="pl-k">=</span>f[c<span class="pl-k">+</span>l<span class="pl-k">*</span>t],<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(e,<span class="pl-smi">r</span>.<span class="pl-en">create</span>(<span class="pl-smi">s</span>.<span class="pl-en">extend</span>({bodyA<span class="pl-k">:</span>d,bodyB<span class="pl-k">:</span>u},a)));<span class="pl-k">if</span>(l<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>t;c<span class="pl-k">++</span>)d<span class="pl-k">=</span>f[c<span class="pl-k">+</span>(l<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>t],u<span class="pl-k">=</span>f[c<span class="pl-k">+</span>l<span class="pl-k">*</span>t],<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(e,<span class="pl-smi">r</span>.<span class="pl-en">create</span>(<span class="pl-smi">s</span>.<span class="pl-en">extend</span>({bodyA<span class="pl-k">:</span>d,bodyB<span class="pl-k">:</span>u},a))),o<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>f[c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span>(l<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>t],<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(e,<span class="pl-smi">r</span>.<span class="pl-en">create</span>(<span class="pl-smi">s</span>.<span class="pl-en">extend</span>({bodyA<span class="pl-k">:</span>p,bodyB<span class="pl-k">:</span>u},a)))),o<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span>t<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>f[c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span>(l<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>t],<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(e,<span class="pl-smi">r</span>.<span class="pl-en">create</span>(<span class="pl-smi">s</span>.<span class="pl-en">extend</span>({bodyA<span class="pl-k">:</span>p,bodyB<span class="pl-k">:</span>u},a))))}<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">label</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> Mesh<span class="pl-pds">&quot;</span></span>,e},<span class="pl-smi">o</span>.<span class="pl-en">pyramid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">i</span>,<span class="pl-smi">r</span>,<span class="pl-smi">s</span>,<span class="pl-smi">l</span>){<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">stack</span>(e,t,n,i,r,s,<span class="pl-k">function</span>(<span class="pl-smi">t</span>,<span class="pl-smi">o</span>,<span class="pl-smi">s</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">u</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(i,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(n<span class="pl-k">/</span><span class="pl-c1">2</span>)),f<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>(c<span class="pl-k">&gt;</span>p)){c<span class="pl-k">=</span>p<span class="pl-k">-</span>c;<span class="pl-k">var</span> m<span class="pl-k">=</span>c,v<span class="pl-k">=</span>n<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>c;<span class="pl-k">if</span>(<span class="pl-k">!</span>(s<span class="pl-k">&lt;</span>m<span class="pl-k">||</span>s<span class="pl-k">&gt;</span>v)){</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(d,{x<span class="pl-k">:</span>(s<span class="pl-k">+</span>(n<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-k">*</span>f,y<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-k">var</span> y<span class="pl-k">=</span>d<span class="pl-k">?</span>s<span class="pl-k">*</span>f<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-en">l</span>(e<span class="pl-k">+</span>y<span class="pl-k">+</span>s<span class="pl-k">*</span>r,o,s,c,d,u)}}})},<span class="pl-smi">o</span>.<span class="pl-en">newtonsCradle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">s</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">create</span>({label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Newtons Cradle<span class="pl-pds">&quot;</span></span>}),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>n;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1.9</span>,u<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">circle</span>(e<span class="pl-k">+</span>c<span class="pl-k">*</span>(o<span class="pl-k">*</span>d),t<span class="pl-k">+</span>s,o,{inertia<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>,restitution<span class="pl-k">:</span><span class="pl-c1">1</span>,friction<span class="pl-k">:</span><span class="pl-c1">0</span>,frictionAir<span class="pl-k">:</span><span class="pl-c1">1e-4</span>,slop<span class="pl-k">:</span><span class="pl-c1">1</span>}),p<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">create</span>({pointA<span class="pl-k">:</span>{x<span class="pl-k">:</span>e<span class="pl-k">+</span>c<span class="pl-k">*</span>(o<span class="pl-k">*</span>d),y<span class="pl-k">:</span>t},bodyB<span class="pl-k">:</span>u});<span class="pl-smi">i</span>.<span class="pl-en">addBody</span>(a,u),<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(a,p)}<span class="pl-k">return</span> a},<span class="pl-smi">o</span>.<span class="pl-en">car</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>,<span class="pl-smi">s</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">nextGroup</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),d<span class="pl-k">=</span><span class="pl-c1">20</span>,u<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*-</span>n<span class="pl-k">+</span>d,p<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>n<span class="pl-k">-</span>d,f<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">create</span>({label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Car<span class="pl-pds">&quot;</span></span>}),v<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">rectangle</span>(e,t,n,o,{collisionFilter<span class="pl-k">:</span>{group<span class="pl-k">:</span>c},chamfer<span class="pl-k">:</span>{radius<span class="pl-k">:</span><span class="pl-c1">.5</span><span class="pl-k">*</span>o},density<span class="pl-k">:</span><span class="pl-c1">2e-4</span>}),y<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">circle</span>(e<span class="pl-k">+</span>u,t<span class="pl-k">+</span>f,s,{collisionFilter<span class="pl-k">:</span>{group<span class="pl-k">:</span>c},friction<span class="pl-k">:</span><span class="pl-c1">.8</span>}),g<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">circle</span>(e<span class="pl-k">+</span>p,t<span class="pl-k">+</span>f,s,{collisionFilter<span class="pl-k">:</span>{group<span class="pl-k">:</span>c},friction<span class="pl-k">:</span><span class="pl-c1">.8</span>}),x<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">create</span>({bodyB<span class="pl-k">:</span>v,pointB<span class="pl-k">:</span>{x<span class="pl-k">:</span>u,y<span class="pl-k">:</span>f},bodyA<span class="pl-k">:</span>y,stiffness<span class="pl-k">:</span><span class="pl-c1">1</span>,length<span class="pl-k">:</span><span class="pl-c1">0</span>}),h<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">create</span>({bodyB<span class="pl-k">:</span>v,pointB<span class="pl-k">:</span>{x<span class="pl-k">:</span>p,y<span class="pl-k">:</span>f},bodyA<span class="pl-k">:</span>g,stiffness<span class="pl-k">:</span><span class="pl-c1">1</span>,length<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">addBody</span>(m,v),<span class="pl-smi">i</span>.<span class="pl-en">addBody</span>(m,y),<span class="pl-smi">i</span>.<span class="pl-en">addBody</span>(m,g),<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(m,x),<span class="pl-smi">i</span>.<span class="pl-en">addConstraint</span>(m,h),m},<span class="pl-smi">o</span>.<span class="pl-en">softBody</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">i</span>,<span class="pl-smi">r</span>,<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">u</span>,<span class="pl-smi">p</span>){u<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">extend</span>({inertia<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>},u),p<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">extend</span>({</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">stiffness<span class="pl-k">:</span><span class="pl-c1">.2</span>,render<span class="pl-k">:</span>{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,anchors<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},p);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">stack</span>(e,t,n,i,r,a,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">l</span>.<span class="pl-en">circle</span>(e,t,d,u)});<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-en">mesh</span>(f,n,i,c,p),<span class="pl-smi">f</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Soft Body<span class="pl-pds">&quot;</span></span>,f}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Body<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../constraint/Constraint<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">12</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>./Bodies<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">23</span>}],<span class="pl-c1">25</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">fromVertices</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span>{},n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>(n<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,s<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">normalise</span>({x<span class="pl-k">:</span>e[o].<span class="pl-c1">y</span><span class="pl-k">-</span>e[n].<span class="pl-c1">y</span>,y<span class="pl-k">:</span>e[n].<span class="pl-c1">x</span><span class="pl-k">-</span>e[o].<span class="pl-c1">x</span>}),a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">s</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-c1">x</span><span class="pl-k">/</span><span class="pl-smi">s</span>.<span class="pl-c1">y</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toFixed</span>(<span class="pl-c1">3</span>).<span class="pl-c1">toString</span>(),t[a]<span class="pl-k">=</span>s}<span class="pl-k">return</span> <span class="pl-smi">r</span>.<span class="pl-c1">values</span>(t)},<span class="pl-smi">o</span>.<span class="pl-en">rotate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>t)<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t),o<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t),i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> r,s<span class="pl-k">=</span>e[i];r<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>n<span class="pl-k">-</span><span class="pl-smi">s</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>o,<span class="pl-smi">s</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>o<span class="pl-k">+</span><span class="pl-smi">s</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>n,<span class="pl-smi">s</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>r}}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>}],<span class="pl-c1">26</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o,<span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>{min<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},max<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>}};<span class="pl-k">return</span> e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">update</span>(t,e),t},<span class="pl-smi">o</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>),<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>){</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i<span class="pl-k">=</span>t[o];<span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span>),<span class="pl-smi">i</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span>),<span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span>),<span class="pl-smi">i</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span>)}n<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>)},<span class="pl-smi">o</span>.<span class="pl-en">contains</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;=</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;=</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;=</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>},<span class="pl-smi">o</span>.<span class="pl-en">overlaps</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">t</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;=</span><span class="pl-smi">t</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;=</span><span class="pl-smi">t</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;=</span><span class="pl-smi">t</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>},<span class="pl-smi">o</span>.<span class="pl-en">translate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>},<span class="pl-smi">o</span>.<span class="pl-en">shift</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>;<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>n,<span class="pl-smi">e</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>o}}()},{}],<span class="pl-c1">27</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">pathToVertices</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n,i,r,s,a,l,c,d,u,p,f,m,v<span class="pl-k">=</span>[],y<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,x<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">=</span>t<span class="pl-k">||</span><span class="pl-c1">15</span>;<span class="pl-k">var</span> <span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>n<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>n<span class="pl-k">&gt;</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>u<span class="pl-k">||</span>e<span class="pl-k">!=</span><span class="pl-smi">u</span>.<span class="pl-c1">x</span><span class="pl-k">||</span>t<span class="pl-k">!=</span><span class="pl-smi">u</span>.<span class="pl-c1">y</span>){u<span class="pl-k">&amp;&amp;</span>o<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">x</span>,m<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> i<span class="pl-k">=</span>{x<span class="pl-k">:</span>f<span class="pl-k">+</span>e,y<span class="pl-k">:</span>m<span class="pl-k">+</span>t};<span class="pl-k">!</span>o<span class="pl-k">&amp;&amp;</span>u<span class="pl-k">||</span>(u<span class="pl-k">=</span>i),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(i),g<span class="pl-k">=</span>f<span class="pl-k">+</span>e,x<span class="pl-k">=</span>m<span class="pl-k">+</span>t}},<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pathSegTypeAsLetter</span>.<span class="pl-c1">toUpperCase</span>();<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>t){<span class="pl-k">switch</span>(t){<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>T<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">case&quot;S&quot;:case&quot;Q&quot;:g=e.x,x=e.y;break;case&quot;H&quot;:g=e.x;break;case&quot;V&quot;:x=e.y}h(g,x,e.pathSegType)}};for(o._svgPathToAbsolute(e),r=e.getTotalLength(),l=[],n=0;n&lt;e.pathSegList.numberOfItems;n+=1)l.push(e.pathSegList.getItem(n));for(c=l.concat();y&lt;r;){if(p=e.getPathSegAtLength(y),a=l[p],a!=d){for(;c.length&amp;&amp;c[0]!=a;)b(c.shift());d=a}switch(a.pathSegTypeAsLetter.toUpperCase()){case&quot;C&quot;:case&quot;T&quot;:case&quot;S&quot;:case&quot;Q&quot;:case&quot;A&quot;:s=e.getPointAtLength(y),h(s.x,s.y,0)}y+=t}for(n=0,i=c.length;n&lt;i;++n)b(c[n]);return v},o._svgPathToAbsolute=function(e){for(var t,n,o,i,r,s,a=e.pathSegList,l=0,c=0,d=a.numberOfItems,u=0;u&lt;d;++u){var p=a.getItem(u),f=p.pathSegTypeAsLetter;if(/[MLHVCSQTA]/.test(f))&quot;x&quot;in p&amp;&amp;(l=p.x),&quot;y&quot;in p&amp;&amp;(c=p.y);else switch(&quot;x1&quot;in p&amp;&amp;(o=l+p.x1),&quot;x2&quot;in p&amp;&amp;(r=l+p.x2),&quot;y1&quot;in p&amp;&amp;(i=c+p.y1),&quot;y2&quot;in p&amp;&amp;(s=c+p.y2),&quot;x&quot;in p&amp;&amp;(l+=p.x),&quot;y&quot;in p&amp;&amp;(c+=p.y),f){case&quot;m&quot;:a.replaceItem(e.createSVGPathSegMovetoAbs(l,c),u);break;case&quot;l&quot;:a.replaceItem(e.createSVGPathSegLinetoAbs(l,c),u);break;case&quot;h&quot;:a.replaceItem(e.createSVGPathSegLinetoHorizontalAbs(l),u);</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-en">replaceItem</span>(<span class="pl-smi">e</span>.<span class="pl-en">createSVGPathSegLinetoVerticalAbs</span>(c),u);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-en">replaceItem</span>(<span class="pl-smi">e</span>.<span class="pl-en">createSVGPathSegCurvetoCubicAbs</span>(l,c,o,i,r,s),u);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-en">replaceItem</span>(<span class="pl-smi">e</span>.<span class="pl-en">createSVGPathSegCurvetoCubicSmoothAbs</span>(l,c,r,s),u);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>q<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-en">replaceItem</span>(<span class="pl-smi">e</span>.<span class="pl-en">createSVGPathSegCurvetoQuadraticAbs</span>(l,c,o,i),u);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>t<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-en">replaceItem</span>(<span class="pl-smi">e</span>.<span class="pl-en">createSVGPathSegCurvetoQuadraticSmoothAbs</span>(l,c),u);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">a</span>.<span class="pl-en">replaceItem</span>(<span class="pl-smi">e</span>.<span class="pl-en">createSVGPathSegArcAbs</span>(l,c,<span class="pl-smi">p</span>.<span class="pl-smi">r1</span>,<span class="pl-smi">p</span>.<span class="pl-smi">r2</span>,<span class="pl-smi">p</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">p</span>.<span class="pl-smi">largeArcFlag</span>,<span class="pl-smi">p</span>.<span class="pl-smi">sweepFlag</span>),u);<span class="pl-k">break</span>;<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span><span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span>t,c<span class="pl-k">=</span>n}<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>f<span class="pl-k">||</span>(t<span class="pl-k">=</span>l,n<span class="pl-k">=</span>c)}}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">26</span>}],<span class="pl-c1">28</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o,<span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span>{x<span class="pl-k">:</span>e<span class="pl-k">||</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span>t<span class="pl-k">||</span><span class="pl-c1">0</span>}},<span class="pl-smi">o</span>.<span class="pl-en">clone</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>}},<span class="pl-smi">o</span>.<span class="pl-en">magnitude</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>)},<span class="pl-smi">o</span>.<span class="pl-en">magnitudeSquared</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>},<span class="pl-smi">o</span>.<span class="pl-en">rotate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t),i<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t);n<span class="pl-k">||</span>(n<span class="pl-k">=</span>{});<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>o<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>i;<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>i<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>o,<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>r,n},<span class="pl-smi">o</span>.<span class="pl-en">rotateAbout</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t),r<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t);</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">o<span class="pl-k">||</span>(o<span class="pl-k">=</span>{});<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>((<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>i<span class="pl-k">-</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>r);<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>((<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>r<span class="pl-k">+</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>i),<span class="pl-smi">o</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>s,o},<span class="pl-smi">o</span>.<span class="pl-en">normalise</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">magnitude</span>(e);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span>t<span class="pl-k">?</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>}<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">/</span>t,y<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">/</span>t}},<span class="pl-smi">o</span>.<span class="pl-en">dot</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>},<span class="pl-smi">o</span>.<span class="pl-en">cross</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>},<span class="pl-smi">o</span>.<span class="pl-en">cross3</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span>(<span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>(<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>)<span class="pl-k">-</span>(<span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>(<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>)},<span class="pl-smi">o</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span> n<span class="pl-k">||</span>(n<span class="pl-k">=</span>{}),<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>,n},<span class="pl-smi">o</span>.<span class="pl-en">sub</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span> n<span class="pl-k">||</span>(n<span class="pl-k">=</span>{}),<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>,n},<span class="pl-smi">o</span>.<span class="pl-en">mult</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>t,y<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>t}},<span class="pl-smi">o</span>.<span class="pl-en">div</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">/</span>t,y<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">/</span>t}},<span class="pl-smi">o</span>.<span class="pl-en">perp</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> t<span class="pl-k">=</span>t<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>,{x<span class="pl-k">:</span>t<span class="pl-k">*-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,y<span class="pl-k">:</span>t<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>}},<span class="pl-smi">o</span>.<span class="pl-en">neg</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>}},<span class="pl-smi">o</span>.<span class="pl-en">angle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>)},<span class="pl-smi">o</span>.<span class="pl-smi">_temp</span><span class="pl-k">=</span>[<span class="pl-smi">o</span>.<span class="pl-en">create</span>(),<span class="pl-smi">o</span>.<span class="pl-en">create</span>(),<span class="pl-smi">o</span>.<span class="pl-en">create</span>(),<span class="pl-smi">o</span>.<span class="pl-en">create</span>(),<span class="pl-smi">o</span>.<span class="pl-en">create</span>(),<span class="pl-smi">o</span>.<span class="pl-en">create</span>()]}()},{}],<span class="pl-c1">29</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>{};<span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>o;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span>[],o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>e[o],r<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span>,index<span class="pl-k">:</span>o,</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">body<span class="pl-k">:</span>t,isInternal<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(r)}<span class="pl-k">return</span> n},<span class="pl-smi">o</span>.<span class="pl-en">fromPath</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>L<span class="pl-k">?</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">\-<span class="pl-cce">\d</span></span><span class="pl-cce">\.</span>e]</span><span class="pl-k">+</span>)<span class="pl-c1">[<span class="pl-c1">\s</span>,]</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">\-<span class="pl-cce">\d</span></span><span class="pl-cce">\.</span>e]</span><span class="pl-k">+</span>)<span class="pl-k">*</span><span class="pl-pds">/</span>gi</span>,i<span class="pl-k">=</span>[];<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(n,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-smi">i</span>.<span class="pl-c1">push</span>({x<span class="pl-k">:</span><span class="pl-c1">parseFloat</span>(t),y<span class="pl-k">:</span><span class="pl-c1">parseFloat</span>(n)})}),<span class="pl-smi">o</span>.<span class="pl-en">create</span>(i,t)},<span class="pl-smi">o</span>.<span class="pl-en">centre</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t,n,r,s<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">area</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>),a<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>)r<span class="pl-k">=</span>(l<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,t<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">cross</span>(e[l],e[r]),n<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">mult</span>(<span class="pl-smi">i</span>.<span class="pl-c1">add</span>(e[l],e[r]),t),a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">add</span>(a,n);<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">div</span>(a,<span class="pl-c1">6</span><span class="pl-k">*</span>s)},<span class="pl-smi">o</span>.<span class="pl-en">mean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)<span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>e[n].<span class="pl-c1">x</span>,<span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>e[n].<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">div</span>(t,<span class="pl-smi">e</span>.<span class="pl-c1">length</span>)},<span class="pl-smi">o</span>.<span class="pl-en">area</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>)n<span class="pl-k">+=</span>(e[o].<span class="pl-c1">x</span><span class="pl-k">-</span>e[i].<span class="pl-c1">x</span>)<span class="pl-k">*</span>(e[o].<span class="pl-c1">y</span><span class="pl-k">+</span>e[i].<span class="pl-c1">y</span>),o<span class="pl-k">=</span>i;<span class="pl-k">return</span> t<span class="pl-k">?</span>n<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(n)<span class="pl-k">/</span><span class="pl-c1">2</span>},<span class="pl-smi">o</span>.<span class="pl-en">inertia</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n,o,r<span class="pl-k">=</span><span class="pl-c1">0</span>,s<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span>e,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>)o<span class="pl-k">=</span>(l<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">i</span>.<span class="pl-en">cross</span>(a[o],a[l])),r<span class="pl-k">+=</span>n<span class="pl-k">*</span>(<span class="pl-smi">i</span>.<span class="pl-en">dot</span>(a[o],a[o])<span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-en">dot</span>(a[o],a[l])<span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-en">dot</span>(a[l],a[l])),s<span class="pl-k">+=</span>n;<span class="pl-k">return</span> t<span class="pl-k">/</span><span class="pl-c1">6</span><span class="pl-k">*</span>(r<span class="pl-k">/</span>s)},<span class="pl-smi">o</span>.<span class="pl-en">translate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o;<span class="pl-k">if</span>(n)<span class="pl-k">for</span>(o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>)e[o].<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>n,e[o].<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>n;<span class="pl-k">else</span> <span class="pl-k">for</span>(o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>)e[o].<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,e[o].<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> e},<span class="pl-smi">o</span>.<span class="pl-en">rotate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">if(0!==t){for(var o=Math.cos(t),i=Math.sin(t),r=0;r&lt;e.length;r++){var s=e[r],a=s.x-n.x,l=s.y-n.y;s.x=n.x+(a*o-l*i),s.y=n.y+(a*i+l*o)}return e}},o.contains=function(e,t){for(var n=0;n&lt;e.length;n++){var o=e[n],i=e[(n+1)%e.length];if((t.x-o.x)*(i.y-o.y)+(t.y-o.y)*(o.x-i.x)&gt;0)return!1}return!0},o.scale=function(e,t,n,r){if(1===t&amp;&amp;1===n)return e;r=r||o.centre(e);for(var s,a,l=0;l&lt;e.length;l++)s=e[l],a=i.sub(s,r),e[l].x=r.x+a.x*t,e[l].y=r.y+a.y*n;return e},o.chamfer=function(e,t,n,o,s){t=&quot;number&quot;==typeof t?[t]:t||[8],n=&quot;undefined&quot;!=typeof n?n:-1,o=o||2,s=s||14;for(var a=[],l=0;l&lt;e.length;l++){var c=e[l-1&gt;=0?l-1:e.length-1],d=e[l],u=e[(l+1)%e.length],p=t[l&lt;t.length?l:t.length-1];if(0!==p){var f=i.normalise({x:d.y-c.y,y:c.x-d.x}),m=i.normalise({x:u.y-d.y,y:d.x-u.x}),v=Math.sqrt(2*Math.pow(p,2)),y=i.mult(r.clone(f),p),g=i.normalise(i.mult(i.add(f,m),.5)),x=i.sub(d,i.mult(g,v)),h=n;n===-1&amp;&amp;(h=1.75*Math.pow(p,.32)),h=r.clamp(h,o,s),h%2===1&amp;&amp;(h+=1);for(var b=Math.acos(i.dot(f,m)),w=b/h,S=0;S&lt;h;S++)a.push(i.add(i.rotate(y,w*S),x));</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-c1">push</span>(d)}<span class="pl-k">return</span> a},<span class="pl-smi">o</span>.<span class="pl-en">clockwiseSort</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">mean</span>(e);<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">n</span>){<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">angle</span>(t,e)<span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-en">angle</span>(t,n)}),e},<span class="pl-smi">o</span>.<span class="pl-en">isConvex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t,n,o,i,r<span class="pl-k">=</span><span class="pl-c1">0</span>,s<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(s<span class="pl-k">&lt;</span><span class="pl-c1">3</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span>s;t<span class="pl-k">++</span>)<span class="pl-k">if</span>(n<span class="pl-k">=</span>(t<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>s,o<span class="pl-k">=</span>(t<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">%</span>s,i<span class="pl-k">=</span>(e[n].<span class="pl-c1">x</span><span class="pl-k">-</span>e[t].<span class="pl-c1">x</span>)<span class="pl-k">*</span>(e[o].<span class="pl-c1">y</span><span class="pl-k">-</span>e[n].<span class="pl-c1">y</span>),i<span class="pl-k">-=</span>(e[n].<span class="pl-c1">y</span><span class="pl-k">-</span>e[t].<span class="pl-c1">y</span>)<span class="pl-k">*</span>(e[o].<span class="pl-c1">x</span><span class="pl-k">-</span>e[n].<span class="pl-c1">x</span>),i<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>r<span class="pl-k">|=</span><span class="pl-c1">1</span><span class="pl-k">:</span>i<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">|=</span><span class="pl-c1">2</span>),<span class="pl-c1">3</span><span class="pl-k">===</span>r)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>r<span class="pl-k">||</span><span class="pl-c1">null</span>},<span class="pl-smi">o</span>.<span class="pl-en">hull</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t,n,o<span class="pl-k">=</span>[],r<span class="pl-k">=</span>[];<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),<span class="pl-smi">e</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>n<span class="pl-k">?</span>n<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>}),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;n<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(t<span class="pl-k">=</span>e[n];<span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;=</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">cross3</span>(r[<span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>],r[<span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],t)<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>;)<span class="pl-smi">r</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(t)}<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;n<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;n<span class="pl-k">-=</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(t<span class="pl-k">=</span>e[n];<span class="pl-smi">o</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;=</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">cross3</span>(o[<span class="pl-smi">o</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>],o[<span class="pl-smi">o</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],t)<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>;)<span class="pl-smi">o</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">o</span>.<span class="pl-c1">push</span>(t)}<span class="pl-k">return</span> <span class="pl-smi">o</span>.<span class="pl-c1">pop</span>(),<span class="pl-smi">r</span>.<span class="pl-c1">pop</span>(),<span class="pl-smi">o</span>.<span class="pl-c1">concat</span>(r)}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>}],<span class="pl-c1">30</span><span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Matter<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">o</span>.<span class="pl-smi">Body</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Body<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Composite</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">World</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../body/World<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Contact</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Contact<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Detector</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Detector<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-smi">Grid</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Grid<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Pairs</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Pairs<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Pair</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Pair<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Query</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Query<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Resolver</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/Resolver<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-c1">SAT</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../collision/SAT<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Constraint</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../constraint/Constraint<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">MouseConstraint</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../constraint/MouseConstraint<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Common</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Engine</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Engine<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Events</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Events<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Mouse</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Mouse<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Runner</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Runner<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Sleeping</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Sleeping<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Plugin</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Plugin<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Bodies</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../factory/Bodies<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Composites</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../factory/Composites<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Axes</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Axes<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Bounds</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Svg</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Svg<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Vector</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Vertices</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vertices<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">Render</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../render/Render<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">RenderPixi</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>../render/RenderPixi<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">o</span>.<span class="pl-smi">World</span>.<span class="pl-smi">add</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">Composite</span>.<span class="pl-smi">add</span>,<span class="pl-smi">o</span>.<span class="pl-smi">World</span>.<span class="pl-smi">remove</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">Composite</span>.<span class="pl-smi">remove</span>,<span class="pl-smi">o</span>.<span class="pl-smi">World</span>.<span class="pl-smi">addComposite</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">Composite</span>.<span class="pl-smi">addComposite</span>,<span class="pl-smi">o</span>.<span class="pl-smi">World</span>.<span class="pl-smi">addBody</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">Composite</span>.<span class="pl-smi">addBody</span>,<span class="pl-smi">o</span>.<span class="pl-smi">World</span>.<span class="pl-smi">addConstraint</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">Composite</span>.<span class="pl-smi">addConstraint</span>,<span class="pl-smi">o</span>.<span class="pl-smi">World</span>.<span class="pl-c1">clear</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">Composite</span>.<span class="pl-c1">clear</span>,</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">o.Engine.run=o.Runner.run},{&quot;../body/Body&quot;:1,&quot;../body/Composite&quot;:2,&quot;../body/World&quot;:3,&quot;../collision/Contact&quot;:4,&quot;../collision/Detector&quot;:5,&quot;../collision/Grid&quot;:6,&quot;../collision/Pair&quot;:7,&quot;../collision/Pairs&quot;:8,&quot;../collision/Query&quot;:9,&quot;../collision/Resolver&quot;:10,&quot;../collision/SAT&quot;:11,&quot;../constraint/Constraint&quot;:12,&quot;../constraint/MouseConstraint&quot;:13,&quot;../core/Common&quot;:14,&quot;../core/Engine&quot;:15,&quot;../core/Events&quot;:16,&quot;../core/Matter&quot;:17,&quot;../core/Metrics&quot;:18,&quot;../core/Mouse&quot;:19,&quot;../core/Plugin&quot;:20,&quot;../core/Runner&quot;:21,&quot;../core/Sleeping&quot;:22,&quot;../factory/Bodies&quot;:23,&quot;../factory/Composites&quot;:24,&quot;../geometry/Axes&quot;:25,&quot;../geometry/Bounds&quot;:26,&quot;../geometry/Svg&quot;:27,&quot;../geometry/Vector&quot;:28,&quot;../geometry/Vertices&quot;:29,&quot;../render/Render&quot;:31,&quot;../render/RenderPixi&quot;:32}],31:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;../core/Common&quot;),r=e(&quot;../body/Composite&quot;),s=e(&quot;../geometry/Bounds&quot;),a=e(&quot;../core/Events&quot;),l=e(&quot;../collision/Grid&quot;),c=e(&quot;../geometry/Vector&quot;),d=e(&quot;../core/Mouse&quot;);!function(){var e,t;&quot;undefined&quot;!=typeof window&amp;&amp;(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">window</span>.<span class="pl-en">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-en">e</span>(<span class="pl-smi">i</span>.<span class="pl-en">now</span>())},<span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-c1">60</span>)},t<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msCancelAnimationFrame</span>),<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>{controller<span class="pl-k">:</span>o,engine<span class="pl-k">:</span><span class="pl-c1">null</span>,element<span class="pl-k">:</span><span class="pl-c1">null</span>,canvas<span class="pl-k">:</span><span class="pl-c1">null</span>,mouse<span class="pl-k">:</span><span class="pl-c1">null</span>,frameRequestId<span class="pl-k">:</span><span class="pl-c1">null</span>,options<span class="pl-k">:</span>{width<span class="pl-k">:</span><span class="pl-c1">800</span>,height<span class="pl-k">:</span><span class="pl-c1">600</span>,pixelRatio<span class="pl-k">:</span><span class="pl-c1">1</span>,background<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#18181d<span class="pl-pds">&quot;</span></span>,wireframeBackground<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#0f0f13<span class="pl-pds">&quot;</span></span>,hasBounds<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>,enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,wireframes<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,showSleeping<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,showDebug<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showBroadphase<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showBounds<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showVelocity<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showCollisions<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showSeparations<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showAxes<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showPositions<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showAngleIndicator<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showIds<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showShadows<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showVertexNumbers<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showConvexHulls<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showInternalEdges<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showMousePosition<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},r<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">extend</span>(t,e);<span class="pl-k">return</span> <span class="pl-smi">r</span>.<span class="pl-smi">canvas</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">options</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>,<span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">options</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>),<span class="pl-smi">r</span>.<span class="pl-smi">mouse</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">mouse</span>,<span class="pl-smi">r</span>.<span class="pl-smi">engine</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-smi">r</span>.<span class="pl-smi">canvas</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span><span class="pl-k">||</span><span class="pl-en">n</span>(<span class="pl-smi">r</span>.<span class="pl-c1">options</span>.<span class="pl-c1">width</span>,<span class="pl-smi">r</span>.<span class="pl-c1">options</span>.<span class="pl-c1">height</span>),<span class="pl-smi">r</span>.<span class="pl-smi">context</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">r</span>.<span class="pl-smi">textures</span><span class="pl-k">=</span>{},<span class="pl-smi">r</span>.<span class="pl-smi">bounds</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">bounds</span><span class="pl-k">||</span>{min<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">:</span><span class="pl-c1">0</span>},max<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>,y<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>}},<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pixelRatio</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">setPixelRatio</span>(r,<span class="pl-smi">r</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pixelRatio</span>),<span class="pl-smi">i</span>.<span class="pl-en">isElement</span>(<span class="pl-smi">r</span>.<span class="pl-smi">element</span>)<span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">parentNode</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-en">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Render.create: options.element was undefined, render.canvas was created but not appended<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>warn<span class="pl-pds">&quot;</span></span>),r},<span class="pl-smi">o</span>.<span class="pl-en">run</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">t</span>){<span class="pl-k">!</span><span class="pl-k">function</span> <span class="pl-en">n</span>(<span class="pl-smi">i</span>){<span class="pl-smi">t</span>.<span class="pl-smi">frameRequestId</span><span class="pl-k">=</span><span class="pl-en">e</span>(n),<span class="pl-smi">o</span>.<span class="pl-en">world</span>(t)}()},<span class="pl-smi">o</span>.<span class="pl-en">stop</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">t</span>(<span class="pl-smi">e</span>.<span class="pl-smi">frameRequestId</span>)},<span class="pl-smi">o</span>.<span class="pl-en">setPixelRatio</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">canvas</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>t<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-en">u</span>(o)),<span class="pl-smi">n</span>.<span class="pl-smi">pixelRatio</span><span class="pl-k">=</span>t,<span class="pl-smi">o</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data-pixel-ratio<span class="pl-pds">&quot;</span></span>,t),<span class="pl-smi">o</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">*</span>t,<span class="pl-smi">o</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">height</span><span class="pl-k">*</span>t,<span class="pl-smi">o</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-c1">style</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">e</span>.<span class="pl-smi">context</span>.<span class="pl-en">scale</span>(t,t)},<span class="pl-smi">o</span>.<span class="pl-en">lookAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">o</span>){o<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> o<span class="pl-k">||</span>o,t<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">isArray</span>(t)<span class="pl-k">?</span>t<span class="pl-k">:</span>[t],n<span class="pl-k">=</span>n<span class="pl-k">||</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span>{min<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>},max<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span><span class="pl-k">-</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">0</span>)}},s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;s<span class="pl-k">+=</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span>t[s],l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bounds</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">||</span>a,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bounds</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">||</span>a;l<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span>),<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">r</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>),<span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span>),</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">c.y&gt;r.max.y&amp;&amp;(r.max.y=c.y))}var u=r.max.x-r.min.x+2*n.x,p=r.max.y-r.min.y+2*n.y,f=e.canvas.height,m=e.canvas.width,v=m/f,y=u/p,g=1,x=1;y&gt;v?x=y/v:g=v/y,e.options.hasBounds=!0,e.bounds.min.x=r.min.x,e.bounds.max.x=r.min.x+u*g,e.bounds.min.y=r.min.y,e.bounds.max.y=r.min.y+p*x,o&amp;&amp;(e.bounds.min.x+=.5*u-u*g*.5,e.bounds.max.x+=.5*u-u*g*.5,e.bounds.min.y+=.5*p-p*x*.5,e.bounds.max.y+=.5*p-p*x*.5),e.bounds.min.x-=n.x,e.bounds.max.x-=n.x,e.bounds.min.y-=n.y,e.bounds.max.y-=n.y,e.mouse&amp;&amp;(d.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),d.setOffset(e.mouse,e.bounds.min))},o.startViewTransform=function(e){var t=e.bounds.max.x-e.bounds.min.x,n=e.bounds.max.y-e.bounds.min.y,o=t/e.options.width,i=n/e.options.height;e.context.scale(1/o,1/i),e.context.translate(-e.bounds.min.x,-e.bounds.min.y)},o.endViewTransform=function(e){e.context.setTransform(e.options.pixelRatio,0,0,e.options.pixelRatio,0,0)},o.world=function(e){var t,n=e.engine,i=n.world,u=e.canvas,p=e.context,m=e.options,v=r.allBodies(i),y=r.allConstraints(i),g=m.wireframes?m.wireframeBackground:m.background,x=[],h=[],b={</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line">timestamp:n.timing.timestamp};if(a.trigger(e,&quot;beforeRender&quot;,b),e.currentBackground!==g&amp;&amp;f(e,g),p.globalCompositeOperation=&quot;source-in&quot;,p.fillStyle=&quot;transparent&quot;,p.fillRect(0,0,u.width,u.height),p.globalCompositeOperation=&quot;source-over&quot;,m.hasBounds){for(t=0;t&lt;v.length;t++){var w=v[t];s.overlaps(w.bounds,e.bounds)&amp;&amp;x.push(w)}for(t=0;t&lt;y.length;t++){var S=y[t],C=S.bodyA,A=S.bodyB,P=S.pointA,B=S.pointB;C&amp;&amp;(P=c.add(C.position,S.pointA)),A&amp;&amp;(B=c.add(A.position,S.pointB)),P&amp;&amp;B&amp;&amp;(s.contains(e.bounds,P)||s.contains(e.bounds,B))&amp;&amp;h.push(S)}o.startViewTransform(e),e.mouse&amp;&amp;(d.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),d.setOffset(e.mouse,e.bounds.min))}else h=y,x=v;!m.wireframes||n.enableSleeping&amp;&amp;m.showSleeping?o.bodies(e,x,p):(m.showConvexHulls&amp;&amp;o.bodyConvexHulls(e,x,p),o.bodyWireframes(e,x,p)),m.showBounds&amp;&amp;o.bodyBounds(e,x,p),(m.showAxes||m.showAngleIndicator)&amp;&amp;o.bodyAxes(e,x,p),m.showPositions&amp;&amp;o.bodyPositions(e,x,p),m.showVelocity&amp;&amp;o.bodyVelocity(e,x,p),</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">showIds</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">bodyIds</span>(e,x,p),<span class="pl-smi">m</span>.<span class="pl-smi">showSeparations</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">separations</span>(e,<span class="pl-smi">n</span>.<span class="pl-smi">pairs</span>.<span class="pl-smi">list</span>,p),<span class="pl-smi">m</span>.<span class="pl-smi">showCollisions</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">collisions</span>(e,<span class="pl-smi">n</span>.<span class="pl-smi">pairs</span>.<span class="pl-smi">list</span>,p),<span class="pl-smi">m</span>.<span class="pl-smi">showVertexNumbers</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">vertexNumbers</span>(e,x,p),<span class="pl-smi">m</span>.<span class="pl-smi">showMousePosition</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">mousePosition</span>(e,<span class="pl-smi">e</span>.<span class="pl-smi">mouse</span>,p),<span class="pl-smi">o</span>.<span class="pl-en">constraints</span>(h,p),<span class="pl-smi">m</span>.<span class="pl-smi">showBroadphase</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">broadphase</span>.<span class="pl-smi">controller</span><span class="pl-k">===</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">grid</span>(e,<span class="pl-smi">n</span>.<span class="pl-smi">broadphase</span>,p),<span class="pl-smi">m</span>.<span class="pl-smi">showDebug</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">debug</span>(e,p),<span class="pl-smi">m</span>.<span class="pl-smi">hasBounds</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">endViewTransform</span>(e),<span class="pl-smi">a</span>.<span class="pl-en">trigger</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>afterRender<span class="pl-pds">&quot;</span></span>,b)},<span class="pl-smi">o</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>t,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">world</span>,s<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">metrics</span>,a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,l<span class="pl-k">=</span>(<span class="pl-smi">r</span>.<span class="pl-en">allBodies</span>(i),<span class="pl-s"><span class="pl-pds">&quot;</span>    <span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">o</span>.<span class="pl-smi">timing</span>.<span class="pl-smi">timestamp</span><span class="pl-k">-</span>(<span class="pl-smi">e</span>.<span class="pl-smi">debugTimestamp</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;=</span><span class="pl-c1">500</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">s</span>.<span class="pl-smi">timing</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>fps: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">s</span>.<span class="pl-smi">timing</span>.<span class="pl-smi">fps</span>)<span class="pl-k">+</span>l),<span class="pl-smi">e</span>.<span class="pl-smi">debugString</span><span class="pl-k">=</span>c,<span class="pl-smi">e</span>.<span class="pl-smi">debugTimestamp</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">timing</span>.<span class="pl-smi">timestamp</span>}<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">debugString</span>){<span class="pl-smi">n</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px Arial<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,255,255,0.5)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0.5)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">debugString</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;u<span class="pl-k">++</span>)<span class="pl-smi">n</span>.<span class="pl-en">fillText</span>(d[u],<span class="pl-c1">50</span>,<span class="pl-c1">50</span><span class="pl-k">+</span><span class="pl-c1">18</span><span class="pl-k">*</span>u)}},<span class="pl-smi">o</span>.<span class="pl-en">constraints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span>t,o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>e[o];<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">pointA</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">pointB</span>){<span class="pl-k">var</span> s,a,l<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">bodyA</span>,d<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">bodyB</span>;</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(s<span class="pl-k">=</span>l<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">add</span>(<span class="pl-smi">l</span>.<span class="pl-smi">position</span>,<span class="pl-smi">r</span>.<span class="pl-smi">pointA</span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">pointA</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pin<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-c1">type</span>)<span class="pl-smi">n</span>.<span class="pl-en">beginPath</span>(),<span class="pl-smi">n</span>.<span class="pl-en">arc</span>(<span class="pl-smi">s</span>.<span class="pl-c1">x</span>,<span class="pl-smi">s</span>.<span class="pl-c1">y</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>),<span class="pl-smi">n</span>.<span class="pl-en">closePath</span>();<span class="pl-k">else</span>{<span class="pl-k">if</span>(a<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">position</span>,<span class="pl-smi">r</span>.<span class="pl-smi">pointB</span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">pointB</span>,<span class="pl-smi">n</span>.<span class="pl-en">beginPath</span>(),<span class="pl-smi">n</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">s</span>.<span class="pl-c1">x</span>,<span class="pl-smi">s</span>.<span class="pl-c1">y</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>spring<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-c1">type</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> u,p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">sub</span>(a,s),f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">perp</span>(<span class="pl-smi">c</span>.<span class="pl-en">normalise</span>(p)),m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">i</span>.<span class="pl-en">clamp</span>(<span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">5</span>,<span class="pl-c1">12</span>,<span class="pl-c1">20</span>)),v<span class="pl-k">=</span><span class="pl-c1">1</span>;v<span class="pl-k">&lt;</span>m;v<span class="pl-k">+=</span><span class="pl-c1">1</span>)u<span class="pl-k">=</span>v<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">n</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">s</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>(v<span class="pl-k">/</span>m)<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>u<span class="pl-k">*</span><span class="pl-c1">4</span>,<span class="pl-smi">s</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>(v<span class="pl-k">/</span>m)<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>u<span class="pl-k">*</span><span class="pl-c1">4</span>);<span class="pl-smi">n</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>)}<span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">lineWidth</span>,<span class="pl-smi">n</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">strokeStyle</span>,<span class="pl-smi">n</span>.<span class="pl-en">stroke</span>()),<span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-c1">anchors</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">strokeStyle</span>,<span class="pl-smi">n</span>.<span class="pl-en">beginPath</span>(),<span class="pl-smi">n</span>.<span class="pl-en">arc</span>(<span class="pl-smi">s</span>.<span class="pl-c1">x</span>,<span class="pl-smi">s</span>.<span class="pl-c1">y</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>),<span class="pl-smi">n</span>.<span class="pl-en">arc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>),<span class="pl-smi">n</span>.<span class="pl-en">closePath</span>(),<span class="pl-smi">n</span>.<span class="pl-en">fill</span>())}}},<span class="pl-smi">o</span>.<span class="pl-en">bodyShadows</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> o<span class="pl-k">=</span>n,i<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-c1">0</span>);i<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>t[i];<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span>){<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-smi">circleRadius</span>)<span class="pl-smi">o</span>.<span class="pl-en">beginPath</span>(),<span class="pl-smi">o</span>.<span class="pl-en">arc</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>,<span class="pl-smi">r</span>.<span class="pl-smi">circleRadius</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>),<span class="pl-smi">o</span>.<span class="pl-en">closePath</span>();<span class="pl-k">else</span>{<span class="pl-smi">o</span>.<span class="pl-en">beginPath</span>(),<span class="pl-smi">o</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">r</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">x</span>,<span class="pl-smi">r</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">y</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-c1">1</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-smi">o</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">r</span>.<span class="pl-smi">vertices</span>[s].<span class="pl-c1">x</span>,<span class="pl-smi">r</span>.<span class="pl-smi">vertices</span>[s].<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">o.closePath()}var a=r.position.x-.5*e.options.width,l=r.position.y-.2*e.options.height,c=Math.abs(a)+Math.abs(l);o.shadowColor=&quot;rgba(0,0,0,0.15)&quot;,o.shadowOffsetX=.05*a,o.shadowOffsetY=.05*l,o.shadowBlur=1+12*Math.min(1,c/1e3),o.fill(),o.shadowColor=null,o.shadowOffsetX=null,o.shadowOffsetY=null,o.shadowBlur=null}}},o.bodies=function(e,t,n){var o,i,r,s,a=n,l=(e.engine,e.options),c=l.showInternalEdges||!l.wireframes;for(r=0;r&lt;t.length;r++)if(o=t[r],o.render.visible)for(s=o.parts.length&gt;1?1:0;s&lt;o.parts.length;s++)if(i=o.parts[s],i.render.visible){if(l.showSleeping&amp;&amp;o.isSleeping?a.globalAlpha=.5*i.render.opacity:1!==i.render.opacity&amp;&amp;(a.globalAlpha=i.render.opacity),i.render.sprite&amp;&amp;i.render.sprite.texture&amp;&amp;!l.wireframes){var d=i.render.sprite,u=p(e,d.texture);a.translate(i.position.x,i.position.y),a.rotate(i.angle),a.drawImage(u,u.width*-d.xOffset*d.xScale,u.height*-d.yOffset*d.yScale,u.width*d.xScale,u.height*d.yScale),a.rotate(-i.angle),a.translate(-i.position.x,-i.position.y)}else{if(i.circleRadius)a.beginPath(),</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">a.arc(i.position.x,i.position.y,i.circleRadius,0,2*Math.PI);else{a.beginPath(),a.moveTo(i.vertices[0].x,i.vertices[0].y);for(var f=1;f&lt;i.vertices.length;f++)!i.vertices[f-1].isInternal||c?a.lineTo(i.vertices[f].x,i.vertices[f].y):a.moveTo(i.vertices[f].x,i.vertices[f].y),i.vertices[f].isInternal&amp;&amp;!c&amp;&amp;a.moveTo(i.vertices[(f+1)%i.vertices.length].x,i.vertices[(f+1)%i.vertices.length].y);a.lineTo(i.vertices[0].x,i.vertices[0].y),a.closePath()}l.wireframes?(a.lineWidth=1,a.strokeStyle=&quot;#bbb&quot;,a.stroke()):(a.fillStyle=i.render.fillStyle,i.render.lineWidth&amp;&amp;(a.lineWidth=i.render.lineWidth,a.strokeStyle=i.render.strokeStyle,a.stroke()),a.fill())}a.globalAlpha=1}},o.bodyWireframes=function(e,t,n){var o,i,r,s,a,l=n,c=e.options.showInternalEdges;for(l.beginPath(),r=0;r&lt;t.length;r++)if(o=t[r],o.render.visible)for(a=o.parts.length&gt;1?1:0;a&lt;o.parts.length;a++){for(i=o.parts[a],l.moveTo(i.vertices[0].x,i.vertices[0].y),s=1;s&lt;i.vertices.length;s++)!i.vertices[s-1].isInternal||c?l.lineTo(i.vertices[s].x,i.vertices[s].y):l.moveTo(i.vertices[s].x,i.vertices[s].y),</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">i.vertices[s].isInternal&amp;&amp;!c&amp;&amp;l.moveTo(i.vertices[(s+1)%i.vertices.length].x,i.vertices[(s+1)%i.vertices.length].y);l.lineTo(i.vertices[0].x,i.vertices[0].y)}l.lineWidth=1,l.strokeStyle=&quot;#bbb&quot;,l.stroke()},o.bodyConvexHulls=function(e,t,n){var o,i,r,s=n;for(s.beginPath(),i=0;i&lt;t.length;i++)if(o=t[i],o.render.visible&amp;&amp;1!==o.parts.length){for(s.moveTo(o.vertices[0].x,o.vertices[0].y),r=1;r&lt;o.vertices.length;r++)s.lineTo(o.vertices[r].x,o.vertices[r].y);s.lineTo(o.vertices[0].x,o.vertices[0].y)}s.lineWidth=1,s.strokeStyle=&quot;rgba(255,255,255,0.2)&quot;,s.stroke()},o.vertexNumbers=function(e,t,n){var o,i,r,s=n;for(o=0;o&lt;t.length;o++){var a=t[o].parts;for(r=a.length&gt;1?1:0;r&lt;a.length;r++){var l=a[r];for(i=0;i&lt;l.vertices.length;i++)s.fillStyle=&quot;rgba(255,255,255,0.2)&quot;,s.fillText(o+&quot;_&quot;+i,l.position.x+.8*(l.vertices[i].x-l.position.x),l.position.y+.8*(l.vertices[i].y-l.position.y))}}},o.mousePosition=function(e,t,n){var o=n;o.fillStyle=&quot;rgba(255,255,255,0.8)&quot;,o.fillText(t.position.x+&quot;  &quot;+t.position.y,t.position.x+5,t.position.y-5);</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">},<span class="pl-smi">o</span>.<span class="pl-en">bodyBounds</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>n,i<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-smi">e</span>.<span class="pl-c1">options</span>);<span class="pl-smi">o</span>.<span class="pl-en">beginPath</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span>t[r];<span class="pl-k">if</span>(<span class="pl-smi">s</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>t[r].<span class="pl-smi">parts</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[l];<span class="pl-smi">o</span>.<span class="pl-en">rect</span>(<span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>)}}<span class="pl-smi">i</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,255,255,0.08)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0.1)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-en">stroke</span>()},<span class="pl-smi">o</span>.<span class="pl-en">bodyAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o,i,r,s,a<span class="pl-k">=</span>n,l<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-smi">e</span>.<span class="pl-c1">options</span>);<span class="pl-k">for</span>(<span class="pl-smi">a</span>.<span class="pl-en">beginPath</span>(),i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>t[i],d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">parts</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span>)<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-smi">showAxes</span>)<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-k">for</span>(o<span class="pl-k">=</span>d[r],s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-smi">axes</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">axes</span>[s];<span class="pl-smi">a</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">a</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">20</span><span class="pl-k">*</span><span class="pl-smi">u</span>.<span class="pl-c1">x</span>,<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">20</span><span class="pl-k">*</span><span class="pl-smi">u</span>.<span class="pl-c1">y</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-k">for</span>(o<span class="pl-k">=</span>d[r],s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-smi">axes</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">a</span>.<span class="pl-en">lineTo</span>((<span class="pl-smi">o</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">o</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,(<span class="pl-smi">o</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">o</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>)}<span class="pl-smi">l</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>indianred<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255, 255, 255, 0.4)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">globalCompositeOperation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>overlay<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-c1">2</span>),<span class="pl-smi">a</span>.<span class="pl-en">stroke</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">globalCompositeOperation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>source-over<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">o</span>.<span class="pl-en">bodyPositions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o,i,r,s,a<span class="pl-k">=</span>n,l<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-smi">e</span>.<span class="pl-c1">options</span>);<span class="pl-k">for</span>(<span class="pl-smi">a</span>.<span class="pl-en">beginPath</span>(),r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-k">if</span>(o<span class="pl-k">=</span>t[r],<span class="pl-smi">o</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span>)<span class="pl-k">for</span>(s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-smi">parts</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>)i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">parts</span>[s],<span class="pl-smi">a</span>.<span class="pl-en">arc</span>(<span class="pl-smi">i</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">i</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-en">closePath</span>();<span class="pl-k">for</span>(<span class="pl-smi">l</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>indianred<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0.5)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-en">fill</span>(),<span class="pl-smi">a</span>.<span class="pl-en">beginPath</span>(),r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)o<span class="pl-k">=</span>t[r],<span class="pl-smi">o</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">arc</span>(<span class="pl-smi">o</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span>,<span class="pl-smi">o</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span>,<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-en">closePath</span>());<span class="pl-smi">a</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,165,0,0.8)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-en">fill</span>()},<span class="pl-smi">o</span>.<span class="pl-en">bodyVelocity</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>n;<span class="pl-smi">o</span>.<span class="pl-en">beginPath</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>t[i];<span class="pl-smi">r</span>.<span class="pl-smi">render</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">o</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">x</span>),<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-smi">positionPrev</span>.<span class="pl-c1">y</span>)))}<span class="pl-smi">o</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-c1">3</span>,<span class="pl-smi">o</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>cornflowerblue<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-en">stroke</span>()},<span class="pl-smi">o</span>.<span class="pl-en">bodyIds</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o,i,r<span class="pl-k">=</span>n;</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(o<span class="pl-k">=</span><span class="pl-c1">0</span>;o<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;o<span class="pl-k">++</span>)<span class="pl-k">if</span>(t[o].<span class="pl-smi">render</span>.<span class="pl-smi">visible</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span>t[o].<span class="pl-smi">parts</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span>s[i];<span class="pl-smi">r</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px Arial<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">r</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,255,255,0.5)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">r</span>.<span class="pl-en">fillText</span>(<span class="pl-smi">a</span>.<span class="pl-c1">id</span>,<span class="pl-smi">a</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">10</span>,<span class="pl-smi">a</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">10</span>)}}},<span class="pl-smi">o</span>.<span class="pl-en">collisions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o,i,r,s,a<span class="pl-k">=</span>n,l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>;<span class="pl-k">for</span>(<span class="pl-smi">a</span>.<span class="pl-en">beginPath</span>(),r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-k">if</span>(o<span class="pl-k">=</span>t[r],<span class="pl-smi">o</span>.<span class="pl-smi">isActive</span>)<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">collision</span>,s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>.<span class="pl-c1">length</span>;s<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[s],d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">vertex</span>;<span class="pl-smi">a</span>.<span class="pl-en">rect</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">1.5</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">1.5</span>,<span class="pl-c1">3.5</span>,<span class="pl-c1">3.5</span>)}<span class="pl-k">for</span>(<span class="pl-smi">l</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,255,255,0.7)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>orange<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-en">fill</span>(),<span class="pl-smi">a</span>.<span class="pl-en">beginPath</span>(),r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-k">if</span>(o<span class="pl-k">=</span>t[r],<span class="pl-smi">o</span>.<span class="pl-smi">isActive</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">collision</span>,<span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>)){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[<span class="pl-c1">0</span>].<span class="pl-smi">vertex</span>.<span class="pl-c1">x</span>,p<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[<span class="pl-c1">0</span>].<span class="pl-smi">vertex</span>.<span class="pl-c1">y</span>;<span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>(<span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[<span class="pl-c1">0</span>].<span class="pl-smi">vertex</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[<span class="pl-c1">1</span>].<span class="pl-smi">vertex</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,p<span class="pl-k">=</span>(<span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[<span class="pl-c1">0</span>].<span class="pl-smi">vertex</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">activeContacts</span>[<span class="pl-c1">1</span>].<span class="pl-smi">vertex</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span><span class="pl-k">===</span><span class="pl-smi">i</span>.<span class="pl-smi">supports</span>[<span class="pl-c1">0</span>].<span class="pl-c1">body</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span>.<span class="pl-smi">isStatic</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">moveTo</span>(u<span class="pl-k">-</span><span class="pl-c1">8</span><span class="pl-k">*</span><span class="pl-smi">i</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span>,p<span class="pl-k">-</span><span class="pl-c1">8</span><span class="pl-k">*</span><span class="pl-smi">i</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">moveTo</span>(u<span class="pl-k">+</span><span class="pl-c1">8</span><span class="pl-k">*</span><span class="pl-smi">i</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span>,p<span class="pl-k">+</span><span class="pl-c1">8</span><span class="pl-k">*</span><span class="pl-smi">i</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span>),<span class="pl-smi">a</span>.<span class="pl-en">lineTo</span>(u,p);</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">l</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,165,0,0.7)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>orange<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-en">stroke</span>()},<span class="pl-smi">o</span>.<span class="pl-en">separations</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o,i,r,s,a,l<span class="pl-k">=</span>n,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>;<span class="pl-k">for</span>(<span class="pl-smi">l</span>.<span class="pl-en">beginPath</span>(),a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>)<span class="pl-k">if</span>(o<span class="pl-k">=</span>t[a],<span class="pl-smi">o</span>.<span class="pl-smi">isActive</span>){i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">collision</span>,r<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyA</span>,s<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">bodyB</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">s</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-c1">.5</span>),<span class="pl-smi">s</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-smi">l</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">s</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">s</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">l</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">s</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-smi">penetration</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>d,<span class="pl-smi">s</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-smi">penetration</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>d),d<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">s</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span><span class="pl-smi">r</span>.<span class="pl-smi">isStatic</span><span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-c1">.5</span>),<span class="pl-smi">r</span>.<span class="pl-smi">isStatic</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-smi">l</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">l</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">penetration</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>d,<span class="pl-smi">r</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">penetration</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>d)}<span class="pl-smi">c</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,165,0,0.5)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>orange<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">l</span>.<span class="pl-en">stroke</span>()},<span class="pl-smi">o</span>.<span class="pl-en">grid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>n,r<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>;<span class="pl-smi">r</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,180,0,0.1)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">strokeStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255,180,0,0.5)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">o</span>.<span class="pl-en">beginPath</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">keys</span>(<span class="pl-smi">t</span>.<span class="pl-smi">buckets</span>),a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">s</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>s[a];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-smi">t</span>.<span class="pl-smi">buckets</span>[l].<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">2</span>)){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span>C<span class="pl-k">|</span>R<span class="pl-pds">/</span></span>);<span class="pl-smi">o</span>.<span class="pl-en">rect</span>(<span class="pl-c1">.5</span><span class="pl-k">+</span><span class="pl-c1">parseInt</span>(c[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-smi">bucketWidth</span>,<span class="pl-c1">.5</span><span class="pl-k">+</span><span class="pl-c1">parseInt</span>(c[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>)<span class="pl-k">*</span><span class="pl-smi">t</span>.<span class="pl-smi">bucketHeight</span>,<span class="pl-smi">t</span>.<span class="pl-smi">bucketWidth</span>,<span class="pl-smi">t</span>.<span class="pl-smi">bucketHeight</span>);</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">}}o.lineWidth=1,o.stroke()},o.inspector=function(e,t){var n,o=(e.engine,e.selected),i=e.render,r=i.options;if(r.hasBounds){var s=i.bounds.max.x-i.bounds.min.x,a=i.bounds.max.y-i.bounds.min.y,l=s/i.options.width,c=a/i.options.height;t.scale(1/l,1/c),t.translate(-i.bounds.min.x,-i.bounds.min.y)}for(var d=0;d&lt;o.length;d++){var u=o[d].data;switch(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle=&quot;rgba(255,165,0,0.9)&quot;,t.setLineDash([1,2]),u.type){case&quot;body&quot;:n=u.bounds,t.beginPath(),t.rect(Math.floor(n.min.x-3),Math.floor(n.min.y-3),Math.floor(n.max.x-n.min.x+6),Math.floor(n.max.y-n.min.y+6)),t.closePath(),t.stroke();break;case&quot;constraint&quot;:var p=u.pointA;u.bodyA&amp;&amp;(p=u.pointB),t.beginPath(),t.arc(p.x,p.y,10,0,2*Math.PI),t.closePath(),t.stroke()}t.setLineDash([]),t.translate(-.5,-.5)}null!==e.selectStart&amp;&amp;(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle=&quot;rgba(255,165,0,0.6)&quot;,t.fillStyle=&quot;rgba(255,165,0,0.1)&quot;,n=e.selectBounds,t.beginPath(),t.rect(Math.floor(n.min.x),Math.floor(n.min.y),Math.floor(n.max.x-n.min.x),Math.floor(n.max.y-n.min.y)),</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line">t.closePath(),t.stroke(),t.fill(),t.translate(-.5,-.5)),r.hasBounds&amp;&amp;t.setTransform(1,0,0,1,0,0)};var n=function(e,t){var n=document.createElement(&quot;canvas&quot;);return n.width=e,n.height=t,n.oncontextmenu=function(){return!1},n.onselectstart=function(){return!1},n},u=function(e){var t=e.getContext(&quot;2d&quot;),n=window.devicePixelRatio||1,o=t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;return n/o},p=function(e,t){var n=e.textures[t];return n?n:(n=e.textures[t]=new Image,n.src=t,n)},f=function(e,t){var n=t;/(jpg|gif|png)$/.test(t)&amp;&amp;(n=&quot;url(&quot;+t+&quot;)&quot;),e.canvas.style.background=n,e.canvas.style.backgroundSize=&quot;contain&quot;,e.currentBackground=t}}()},{&quot;../body/Composite&quot;:2,&quot;../collision/Grid&quot;:6,&quot;../core/Common&quot;:14,&quot;../core/Events&quot;:16,&quot;../core/Mouse&quot;:19,&quot;../geometry/Bounds&quot;:26,&quot;../geometry/Vector&quot;:28}],32:[function(e,t,n){var o={};t.exports=o;var i=e(&quot;../geometry/Bounds&quot;),r=e(&quot;../body/Composite&quot;),s=e(&quot;../core/Common&quot;),a=e(&quot;../core/Events&quot;),l=e(&quot;../geometry/Vector&quot;);</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> e,t;<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-c1">window</span>.<span class="pl-en">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-en">e</span>(<span class="pl-smi">s</span>.<span class="pl-en">now</span>())},<span class="pl-c1">1e3</span><span class="pl-k">/</span><span class="pl-c1">60</span>)},t<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msCancelAnimationFrame</span>),<span class="pl-smi">o</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-smi">s</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>RenderPixi.create: Matter.RenderPixi is deprecated (see docs)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> t<span class="pl-k">=</span>{controller<span class="pl-k">:</span>o,engine<span class="pl-k">:</span><span class="pl-c1">null</span>,element<span class="pl-k">:</span><span class="pl-c1">null</span>,frameRequestId<span class="pl-k">:</span><span class="pl-c1">null</span>,canvas<span class="pl-k">:</span><span class="pl-c1">null</span>,renderer<span class="pl-k">:</span><span class="pl-c1">null</span>,container<span class="pl-k">:</span><span class="pl-c1">null</span>,spriteContainer<span class="pl-k">:</span><span class="pl-c1">null</span>,pixiOptions<span class="pl-k">:</span><span class="pl-c1">null</span>,options<span class="pl-k">:</span>{width<span class="pl-k">:</span><span class="pl-c1">800</span>,height<span class="pl-k">:</span><span class="pl-c1">600</span>,background<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#fafafa<span class="pl-pds">&quot;</span></span>,wireframeBackground<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#222<span class="pl-pds">&quot;</span></span>,hasBounds<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,wireframes<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,showSleeping<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,showDebug<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showBroadphase<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showBounds<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showVelocity<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showCollisions<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showAxes<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showPositions<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showAngleIndicator<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showIds<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showShadows<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},n<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">extend</span>(t,e),i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">n</span>.<span class="pl-c1">options</span>.<span class="pl-smi">wireframes</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-c1">options</span>.<span class="pl-c1">background</span>;<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-smi">pixiOptions</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">pixiOptions</span><span class="pl-k">||</span>{</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line">view:n.canvas,transparent:i,antialias:!0,backgroundColor:e.background},n.mouse=e.mouse,n.engine=e.engine,n.renderer=n.renderer||new PIXI.WebGLRenderer(n.options.width,n.options.height,n.pixiOptions),n.container=n.container||new PIXI.Container,n.spriteContainer=n.spriteContainer||new PIXI.Container,n.canvas=n.canvas||n.renderer.view,n.bounds=n.bounds||{min:{x:0,y:0},max:{x:n.options.width,y:n.options.height}},a.on(n.engine,&quot;beforeUpdate&quot;,function(){o.clear(n)}),n.textures={},n.sprites={},n.primitives={},n.container.addChild(n.spriteContainer),s.isElement(n.element)?n.element.appendChild(n.canvas):s.warn(&#39;No &quot;render.element&quot; passed, &quot;render.canvas&quot; was not inserted into document.&#39;),n.canvas.oncontextmenu=function(){return!1},n.canvas.onselectstart=function(){return!1},n},o.run=function(t){!function n(i){t.frameRequestId=e(n),o.world(t)}()},o.stop=function(e){t(e.frameRequestId)},o.clear=function(e){for(var t=e.container,n=e.spriteContainer;t.children[0];)t.removeChild(t.children[0]);for(;n.children[0];)n.removeChild(n.children[0]);</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">sprites</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>bg-0<span class="pl-pds">&quot;</span></span>];<span class="pl-smi">e</span>.<span class="pl-smi">textures</span><span class="pl-k">=</span>{},<span class="pl-smi">e</span>.<span class="pl-smi">sprites</span><span class="pl-k">=</span>{},<span class="pl-smi">e</span>.<span class="pl-smi">primitives</span><span class="pl-k">=</span>{},<span class="pl-smi">e</span>.<span class="pl-smi">sprites</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>bg-0<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>o,o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-en">addChildAt</span>(o,<span class="pl-c1">0</span>),<span class="pl-smi">e</span>.<span class="pl-smi">container</span>.<span class="pl-en">addChild</span>(<span class="pl-smi">e</span>.<span class="pl-smi">spriteContainer</span>),<span class="pl-smi">e</span>.<span class="pl-smi">currentBackground</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-smi">t</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>),<span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)},<span class="pl-smi">o</span>.<span class="pl-en">setBackground</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">currentBackground</span><span class="pl-k">!==</span>t){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">indexOf</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">sprites</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>bg-0<span class="pl-pds">&quot;</span></span>];<span class="pl-k">if</span>(n){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">colorToNumber</span>(t);<span class="pl-smi">e</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">backgroundColor</span><span class="pl-k">=</span>i,o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">container</span>.<span class="pl-c1">removeChild</span>(o)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>o){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-en">d</span>(e,t);o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">sprites</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>bg-0<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">PIXI.Sprite</span>(r),<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">container</span>.<span class="pl-en">addChildAt</span>(o,<span class="pl-c1">0</span>)}<span class="pl-smi">e</span>.<span class="pl-smi">currentBackground</span><span class="pl-k">=</span>t}},<span class="pl-smi">o</span>.<span class="pl-en">world</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> t,n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,s<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">world</span>,a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">container</span>,d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,u<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">allBodies</span>(s),p<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">allConstraints</span>(s),f<span class="pl-k">=</span>[];<span class="pl-smi">d</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">setBackground</span>(e,<span class="pl-smi">d</span>.<span class="pl-smi">wireframeBackground</span>)<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-en">setBackground</span>(e,<span class="pl-smi">d</span>.<span class="pl-c1">background</span>);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,v<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,y<span class="pl-k">=</span>m<span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-c1">width</span>,g<span class="pl-k">=</span>v<span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-c1">height</span>;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hasBounds</span>){<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>u[t];<span class="pl-smi">x</span>.<span class="pl-smi">render</span>.<span class="pl-smi">sprite</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">overlaps</span>(<span class="pl-smi">x</span>.<span class="pl-smi">bounds</span>,<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>)}<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>){</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> h<span class="pl-k">=</span>p[t],b<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">bodyA</span>,w<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">bodyB</span>,<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">pointA</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">pointB</span>;b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,<span class="pl-smi">h</span>.<span class="pl-smi">pointA</span>)),w<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">add</span>(<span class="pl-smi">w</span>.<span class="pl-smi">position</span>,<span class="pl-smi">h</span>.<span class="pl-smi">pointB</span>)),<span class="pl-c1">S</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>,<span class="pl-c1">S</span>)<span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-c1">contains</span>(<span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>,<span class="pl-c1">C</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(h)}<span class="pl-smi">c</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>y,<span class="pl-c1">1</span><span class="pl-k">/</span>g),<span class="pl-smi">c</span>.<span class="pl-smi">position</span>.<span class="pl-c1">set</span>(<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>y),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">bounds</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>g))}<span class="pl-k">else</span> f<span class="pl-k">=</span>p;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>)<span class="pl-smi">o</span>.<span class="pl-c1">body</span>(e,u[t]);<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>)<span class="pl-smi">o</span>.<span class="pl-en">constraint</span>(e,f[t]);<span class="pl-smi">a</span>.<span class="pl-en">render</span>(c)},<span class="pl-smi">o</span>.<span class="pl-en">constraint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-smi">t</span>.<span class="pl-smi">bodyA</span>),o<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">bodyB</span>,i<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">pointA</span>,r<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">pointB</span>,a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">container</span>,l<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">render</span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>c-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span>,d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">primitives</span>[c];<span class="pl-k">return</span> d<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">primitives</span>[c]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">PIXI.Graphics</span>),<span class="pl-smi">l</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-smi">pointA</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-smi">pointB</span><span class="pl-k">?</span>(<span class="pl-smi">s</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>,d)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">addChild</span>(d),<span class="pl-smi">d</span>.<span class="pl-c1">clear</span>(),<span class="pl-smi">d</span>.<span class="pl-en">beginFill</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-smi">d</span>.<span class="pl-en">lineStyle</span>(<span class="pl-smi">l</span>.<span class="pl-smi">lineWidth</span>,<span class="pl-smi">s</span>.<span class="pl-en">colorToNumber</span>(<span class="pl-smi">l</span>.<span class="pl-smi">strokeStyle</span>),<span class="pl-c1">1</span>),n<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">i</span>.<span class="pl-c1">x</span>,<span class="pl-smi">i</span>.<span class="pl-c1">y</span>),o<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">r</span>.<span class="pl-c1">x</span>,<span class="pl-smi">o</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">r</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">r</span>.<span class="pl-c1">x</span>,<span class="pl-smi">r</span>.<span class="pl-c1">y</span>),<span class="pl-k">void</span> <span class="pl-smi">d</span>.<span class="pl-en">endFill</span>())<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-smi">d</span>.<span class="pl-c1">clear</span>()},<span class="pl-smi">o</span>.<span class="pl-en">body</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> o<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-smi">engine</span>,<span class="pl-smi">t</span>.<span class="pl-smi">render</span>);<span class="pl-k">if</span>(<span class="pl-smi">o</span>.<span class="pl-smi">visible</span>)<span class="pl-k">if</span>(<span class="pl-smi">o</span>.<span class="pl-smi">sprite</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-smi">sprite</span>.<span class="pl-smi">texture</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>b-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">t</span>.<span class="pl-c1">id</span>,r<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">sprites</span>[i],a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">spriteContainer</span>;</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line">r||(r=e.sprites[i]=n(e,t)),s.indexOf(a.children,r)===-1&amp;&amp;a.addChild(r),r.position.x=t.position.x,r.position.y=t.position.y,r.rotation=t.angle,r.scale.x=o.sprite.xScale||1,r.scale.y=o.sprite.yScale||1}else{var l=&quot;b-&quot;+t.id,d=e.primitives[l],u=e.container;d||(d=e.primitives[l]=c(e,t),d.initialAngle=t.angle),s.indexOf(u.children,d)===-1&amp;&amp;u.addChild(d),d.position.x=t.position.x,d.position.y=t.position.y,d.rotation=t.angle-d.initialAngle}};var n=function(e,t){var n=t.render,o=n.sprite.texture,i=d(e,o),r=new PIXI.Sprite(i);return r.anchor.x=t.render.sprite.xOffset,r.anchor.y=t.render.sprite.yOffset,r},c=function(e,t){var n,o=t.render,i=e.options,r=new PIXI.Graphics,a=s.colorToNumber(o.fillStyle),l=s.colorToNumber(o.strokeStyle),c=s.colorToNumber(o.strokeStyle),d=s.colorToNumber(&quot;#bbb&quot;),u=s.colorToNumber(&quot;#CD5C5C&quot;);r.clear();for(var p=t.parts.length&gt;1?1:0;p&lt;t.parts.length;p++){n=t.parts[p],i.wireframes?(r.beginFill(0,0),r.lineStyle(1,d,1)):(r.beginFill(a,1),r.lineStyle(o.lineWidth,l,1)),r.moveTo(n.vertices[0].x-t.position.x,n.vertices[0].y-t.position.y);</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-smi">r</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[f].<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[f].<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>);<span class="pl-smi">r</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">r</span>.<span class="pl-en">endFill</span>(),(<span class="pl-smi">i</span>.<span class="pl-smi">showAngleIndicator</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">showAxes</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-en">beginFill</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-smi">i</span>.<span class="pl-smi">wireframes</span><span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-en">lineStyle</span>(<span class="pl-c1">1</span>,u,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-en">lineStyle</span>(<span class="pl-c1">1</span>,c),<span class="pl-smi">r</span>.<span class="pl-c1">moveTo</span>(<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">r</span>.<span class="pl-en">lineTo</span>((<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">x</span>,(<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[<span class="pl-c1">0</span>].<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">n</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-smi">t</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span>),<span class="pl-smi">r</span>.<span class="pl-en">endFill</span>())}<span class="pl-k">return</span> r},<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">t</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">textures</span>[t];<span class="pl-k">return</span> n<span class="pl-k">||</span>(n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">textures</span>[t]<span class="pl-k">=</span><span class="pl-c1">PIXI</span>.<span class="pl-smi">Texture</span>.<span class="pl-en">fromImage</span>(t)),n}}()},{<span class="pl-s"><span class="pl-pds">&quot;</span>../body/Composite<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Common<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">14</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../core/Events<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">16</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Bounds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">26</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>../geometry/Vector<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">28</span>}]},{},[<span class="pl-c1">30</span>])(<span class="pl-c1">30</span>)});</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" id="js-file-line-action-button" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg aria-hidden="true" class="octicon octicon-kebab-horizontal" height="16" version="1.1" viewBox="0 0 13 16" width="13"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"/></svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><a class="js-zeroclipboard dropdown-item" style="cursor:pointer;" id="js-copy-lines" data-original-text="Copy lines">Copy lines</a></li>
        <li><a class="js-zeroclipboard dropdown-item" id= "js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</a></li>
        <li><a href="/liabru/matter-js/blame/06655ff2c7753a5fd3b7ab503d6b5420942c5e19/build/matter.min.js" class="dropdown-item js-update-url-with-hash" id="js-view-git-blame">View git blame</a></li>
          <li><a href="/liabru/matter-js/issues/new" class="dropdown-item" id="js-new-issue">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between py-6 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2018 <span title="0.25285s from unicorn-2578284678-dhksq">GitHub</span>, Inc.</li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-terms-of-service/" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li class="mr-3"><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-security/" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>

    <a href="https://github.com" aria-label="Homepage" class="footer-octicon" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-6oz7cTsS3E5enQjh4gWKU23tC78zIZqVJ1o5zMLCsAv5EEnmNsopwszDz7zx5IGWXU+H+sqeC5pHbt1Yxmh+sw==" src="https://assets-cdn.github.com/assets/frameworks-ea8cfb713b12.js" type="application/javascript"></script>
    
    <script async="async" crossorigin="anonymous" integrity="sha512-SDZ9lEGa8Mdp8eR7sZ32KEvLVzYIOFmzBFoq92+1fYMjll4ec3Krv/NFQpyciI0FxwQcSRE94l1hLLiNmWYFdQ==" src="https://assets-cdn.github.com/assets/github-48367d94419a.js" type="application/javascript"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>

  

  </body>
</html>

